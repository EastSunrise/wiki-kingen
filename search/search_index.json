{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"\u6982\u8ff0 \u00b6 \u672c\u6587\u6863\u662f\u57fa\u4e8e\u672c\u4eba\u5b66\u4e60\u5de5\u4f5c\u7ecf\u9a8c\u5f52\u7eb3\u800c\u6210\uff0c\u5305\u62ec\u4e2d\u82f1\u4e24\u4e2a\u7248\u672c\uff0c\u82f1\u6587\u7248\u8bf7\u53c2\u8003\uff1a wiki-kingen-en . \u672c\u6587\u6863\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a Java \u662f\u672c\u4eba\u4e3b\u4fee\u90e8\u5206\uff0c\u5185\u5bb9\u5305\u62ec Java \u57fa\u7840\u8bed\u6cd5\u3001\u6269\u5c55\u5e93\u4ee5\u53ca\u57fa\u4e8e Java \u7684\u8bf8\u591a\u6846\u67b6\uff1b CS \u90e8\u5206\u4e3b\u8981\u662f\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u6570\u636e\u7ed3\u6784\u3001\u7b97\u6cd5\u7b49\uff1b \u7b2c\u4e09\u90e8\u5206\u662f Python \uff0c\u901a\u5e38\u5728\u9700\u8981\u5feb\u901f\u6784\u5efa\u65f6\u4f7f\u7528\uff1b \u6b64\u5916\uff0c\u5f00\u53d1\u65f6\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u5176\u4ed6\u5404\u79cd\u5404\u6837\u7684\u6280\u672f\u90fd\u88ab\u5305\u542b\u5728\u7b2c\u56db\u90e8\u5206\u2014\u2014 Development \u4e2d\uff1b \u81f3\u4e8e\u548c\u5f00\u53d1\u5173\u8054\u6027\u4e0d\u5927\u7684\u5219\u88ab\u5206\u914d\u5728 Misc \u4e2d. \u683c\u5f0f \u00b6 Markdown \u6587\u4ef6\u540d\u4e00\u5f8b\u5c0f\u5199\uff0c\u4ee5 - \u8fde\u63a5 \u65e0\u7279\u6b8a\u8bf4\u660e\uff0c %x% \u8868\u793a\u53d8\u91cf x \u65e0\u5148\u540e\u987a\u5e8f\u5217\u8868\uff0c\u4e00\u5f8b\u4f7f\u7528\u65e0\u5e8f\u5217\u8868 \u591a\u7ea7\u5217\u8868\u7f29\u8fdb\u4e3a4\u4e2a\u5b57\u7b26 \u5b57\u4f53 \u00b6 h1 \uff1a\u4e8c\u53f7\uff0822pt\uff09\u9ed1\u4f53 h2 \uff1a\u4e09\u53f7\uff0816pt\uff09\u9ed1\u4f53\u52a0\u7c97 h3 \uff1a\u56db\u53f7\uff0814pt\uff09\u9ed1\u4f53 h4 \uff1a\u5c0f\u56db\u53f7\uff0812pt\uff09\u5b8b\u4f53\u52a0\u7c97 \u4f18\u5148\u7ea7\uff1a h3>h2>h4>h1 \u6b63\u6587\uff1a\u5c0f\u56db\u53f7\uff0812pt\uff09\uff0c\u4e2d\u6587\u4e3a\u5b8b\u4f53\uff0c\u82f1\u6587\u53ca\u6570\u5b57\u4e3a Times New Roman \u5217\u8868\uff1a\u5b57\u53f7\u4e3a\u4e94\u53f7\uff0810.5pt\uff09\uff0c\u5b57\u4f53\u540c\u6b63\u6587 \u975e\u5e38\u89c4\u6587\u672c\u4e14\u975e\u4ee3\u7801\u4f7f\u7528 \u659c\u4f53","title":"Home"},{"location":"index.html#_1","text":"\u672c\u6587\u6863\u662f\u57fa\u4e8e\u672c\u4eba\u5b66\u4e60\u5de5\u4f5c\u7ecf\u9a8c\u5f52\u7eb3\u800c\u6210\uff0c\u5305\u62ec\u4e2d\u82f1\u4e24\u4e2a\u7248\u672c\uff0c\u82f1\u6587\u7248\u8bf7\u53c2\u8003\uff1a wiki-kingen-en . \u672c\u6587\u6863\u4e3b\u8981\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u90e8\u5206\uff1a Java \u662f\u672c\u4eba\u4e3b\u4fee\u90e8\u5206\uff0c\u5185\u5bb9\u5305\u62ec Java \u57fa\u7840\u8bed\u6cd5\u3001\u6269\u5c55\u5e93\u4ee5\u53ca\u57fa\u4e8e Java \u7684\u8bf8\u591a\u6846\u67b6\uff1b CS \u90e8\u5206\u4e3b\u8981\u662f\u8ba1\u7b97\u673a\u57fa\u7840\u77e5\u8bc6\uff0c\u4f8b\u5982\u64cd\u4f5c\u7cfb\u7edf\u3001\u6570\u636e\u7ed3\u6784\u3001\u7b97\u6cd5\u7b49\uff1b \u7b2c\u4e09\u90e8\u5206\u662f Python \uff0c\u901a\u5e38\u5728\u9700\u8981\u5feb\u901f\u6784\u5efa\u65f6\u4f7f\u7528\uff1b \u6b64\u5916\uff0c\u5f00\u53d1\u65f6\u53ef\u80fd\u4f1a\u7528\u5230\u7684\u5176\u4ed6\u5404\u79cd\u5404\u6837\u7684\u6280\u672f\u90fd\u88ab\u5305\u542b\u5728\u7b2c\u56db\u90e8\u5206\u2014\u2014 Development \u4e2d\uff1b \u81f3\u4e8e\u548c\u5f00\u53d1\u5173\u8054\u6027\u4e0d\u5927\u7684\u5219\u88ab\u5206\u914d\u5728 Misc \u4e2d.","title":"\u6982\u8ff0"},{"location":"index.html#_2","text":"Markdown \u6587\u4ef6\u540d\u4e00\u5f8b\u5c0f\u5199\uff0c\u4ee5 - \u8fde\u63a5 \u65e0\u7279\u6b8a\u8bf4\u660e\uff0c %x% \u8868\u793a\u53d8\u91cf x \u65e0\u5148\u540e\u987a\u5e8f\u5217\u8868\uff0c\u4e00\u5f8b\u4f7f\u7528\u65e0\u5e8f\u5217\u8868 \u591a\u7ea7\u5217\u8868\u7f29\u8fdb\u4e3a4\u4e2a\u5b57\u7b26","title":"\u683c\u5f0f"},{"location":"index.html#_3","text":"h1 \uff1a\u4e8c\u53f7\uff0822pt\uff09\u9ed1\u4f53 h2 \uff1a\u4e09\u53f7\uff0816pt\uff09\u9ed1\u4f53\u52a0\u7c97 h3 \uff1a\u56db\u53f7\uff0814pt\uff09\u9ed1\u4f53 h4 \uff1a\u5c0f\u56db\u53f7\uff0812pt\uff09\u5b8b\u4f53\u52a0\u7c97 \u4f18\u5148\u7ea7\uff1a h3>h2>h4>h1 \u6b63\u6587\uff1a\u5c0f\u56db\u53f7\uff0812pt\uff09\uff0c\u4e2d\u6587\u4e3a\u5b8b\u4f53\uff0c\u82f1\u6587\u53ca\u6570\u5b57\u4e3a Times New Roman \u5217\u8868\uff1a\u5b57\u53f7\u4e3a\u4e94\u53f7\uff0810.5pt\uff09\uff0c\u5b57\u4f53\u540c\u6b63\u6587 \u975e\u5e38\u89c4\u6587\u672c\u4e14\u975e\u4ee3\u7801\u4f7f\u7528 \u659c\u4f53","title":"\u5b57\u4f53"},{"location":"cs/algorithms/index.html","text":"\u7a7a\u95f4\u590d\u6742\u5ea6 \u00b6 \u6ce8\uff1a\u9012\u5f52\u7a7a\u95f4\u5f00\u9500\u8f83\u5927\uff0c\u5c3d\u53ef\u80fd\u5c11\u7528\u3002 \u65f6\u95f4\u590d\u6742\u5ea6 \u00b6 \u6e10\u8fd1\u4e0a\u754c \u00b6 \u5982\u679c\u5b58\u5728\u5e38\u91cf \\(c>0\\) \u548c \\(n_0>0\\) \uff0c\u4f7f\u5f97\u5bf9 \\(\\forall n\\ge n_0\\) \uff0c\u90fd\u6709 \\(T(n)\\le c\u00b7f(n)\\) \uff0c\u5219\u79f0 \\(f(n)\\) \u662f\u8fd0\u884c\u65f6\u95f4 \\(T(n)\\) \u7684\u6e10\u8fd1\u4e0a\u754c\uff0c\u8bb0\u4f5c \\(T(n)=O(f(n))\\) . \u6e10\u8fd1\u4e0b\u754c \u00b6 \u5982\u679c\u5b58\u5728\u5e38\u91cf \\(c>0\\) \u548c \\(n_0>0\\) \uff0c\u4f7f\u5f97\u5bf9 \\(\\forall n\\ge n_0\\) \uff0c\u90fd\u6709 \\(T(n)\\ge c\u00b7g(n)\\) \uff0c\u5219\u79f0 \\(g(n)\\) \u662f\u8fd0\u884c\u65f6\u95f4 \\(T(n)\\) \u7684\u6e10\u8fd1\u4e0b\u754c\uff0c\u8bb0\u4f5c \\(T(n)=\\Omega(g(n))\\) . \u6e10\u8fd1\u7d27\u786e\u754c \u00b6 \u5982\u679c\u5b58\u5728\u5e38\u91cf \\(c_1\\gt 0,\\ c_2\\gt 0\\) \u548c \\(n_0\\gt 0\\) \uff0c\u4f7f\u5f97\u5bf9 \\(\\forall n\\ge n_0\\) \uff0c\u90fd\u6709 \\(c_1\u00b7h(n)\\le T(n)\\le c_2\u00b7h(n)\\) \uff0c\u5219\u79f0 \\(h(n)\\) \u662f\u8fd0\u884c\u65f6\u95f4 \\(T(n)\\) \u7684\u6e10\u8fd1\u7d27\u786e\u754c\uff0c\u8bb0\u4f5c \\(T(n)=\\Theta(h(n))\\) . \u5bf9\u4efb\u610f \\(T(n)\\) \u548c \\(f(n)\\) \uff0c\u6211\u4eec\u6709 \\(T(n)=\\Theta(f(n))\\) \uff0c\u5f53\u4e14\u4ec5\u5f53 \\(T(n)=O(f(n))\\) \u4e14 \\(T(n)=\\Omega(f(n))\\) . \u6ce8 \uff1a\u5f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \uff0c\u8003\u8651\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u5230 \\(O(n\\log{}n)\\) .","title":"\u7b97\u6cd5"},{"location":"cs/algorithms/index.html#_1","text":"\u6ce8\uff1a\u9012\u5f52\u7a7a\u95f4\u5f00\u9500\u8f83\u5927\uff0c\u5c3d\u53ef\u80fd\u5c11\u7528\u3002","title":"\u7a7a\u95f4\u590d\u6742\u5ea6"},{"location":"cs/algorithms/index.html#_2","text":"","title":"\u65f6\u95f4\u590d\u6742\u5ea6"},{"location":"cs/algorithms/index.html#_3","text":"\u5982\u679c\u5b58\u5728\u5e38\u91cf \\(c>0\\) \u548c \\(n_0>0\\) \uff0c\u4f7f\u5f97\u5bf9 \\(\\forall n\\ge n_0\\) \uff0c\u90fd\u6709 \\(T(n)\\le c\u00b7f(n)\\) \uff0c\u5219\u79f0 \\(f(n)\\) \u662f\u8fd0\u884c\u65f6\u95f4 \\(T(n)\\) \u7684\u6e10\u8fd1\u4e0a\u754c\uff0c\u8bb0\u4f5c \\(T(n)=O(f(n))\\) .","title":"\u6e10\u8fd1\u4e0a\u754c"},{"location":"cs/algorithms/index.html#_4","text":"\u5982\u679c\u5b58\u5728\u5e38\u91cf \\(c>0\\) \u548c \\(n_0>0\\) \uff0c\u4f7f\u5f97\u5bf9 \\(\\forall n\\ge n_0\\) \uff0c\u90fd\u6709 \\(T(n)\\ge c\u00b7g(n)\\) \uff0c\u5219\u79f0 \\(g(n)\\) \u662f\u8fd0\u884c\u65f6\u95f4 \\(T(n)\\) \u7684\u6e10\u8fd1\u4e0b\u754c\uff0c\u8bb0\u4f5c \\(T(n)=\\Omega(g(n))\\) .","title":"\u6e10\u8fd1\u4e0b\u754c"},{"location":"cs/algorithms/index.html#_5","text":"\u5982\u679c\u5b58\u5728\u5e38\u91cf \\(c_1\\gt 0,\\ c_2\\gt 0\\) \u548c \\(n_0\\gt 0\\) \uff0c\u4f7f\u5f97\u5bf9 \\(\\forall n\\ge n_0\\) \uff0c\u90fd\u6709 \\(c_1\u00b7h(n)\\le T(n)\\le c_2\u00b7h(n)\\) \uff0c\u5219\u79f0 \\(h(n)\\) \u662f\u8fd0\u884c\u65f6\u95f4 \\(T(n)\\) \u7684\u6e10\u8fd1\u7d27\u786e\u754c\uff0c\u8bb0\u4f5c \\(T(n)=\\Theta(h(n))\\) . \u5bf9\u4efb\u610f \\(T(n)\\) \u548c \\(f(n)\\) \uff0c\u6211\u4eec\u6709 \\(T(n)=\\Theta(f(n))\\) \uff0c\u5f53\u4e14\u4ec5\u5f53 \\(T(n)=O(f(n))\\) \u4e14 \\(T(n)=\\Omega(f(n))\\) . \u6ce8 \uff1a\u5f53\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) \uff0c\u8003\u8651\u662f\u5426\u53ef\u4ee5\u4f18\u5316\u5230 \\(O(n\\log{}n)\\) .","title":"\u6e10\u8fd1\u7d27\u786e\u754c"},{"location":"cs/algorithms/backtracking.html","text":"TODO References \u00b6 Algorithms/Backtracking .","title":"\u56de\u6eaf\u7b97\u6cd5"},{"location":"cs/algorithms/backtracking.html#references","text":"Algorithms/Backtracking .","title":"References"},{"location":"cs/algorithms/branch-and-bound.html","text":"TODO","title":"\u5206\u652f\u754c\u5b9a"},{"location":"cs/algorithms/divide-and-conquer.html","text":"TODO Overview \u00b6 A typical Divide-and-Conquer algorithm solves a problem using following three steps: Divide : Break the given problem into subproblems of same type. Conquer : Recursively solve these subproblems. Combine : Appropriately combine the answers. Example \u00b6 Given an integer array \\(A[1, n]\\) , write a function calculate(int[] A) to calculate its sub sequence with max summary, \\(MS\\) for short. Divide \u00b6 Assume \\(m=\\frac{n}{2}\\) , then divide \\(A\\) into two parts, \\(A[1, m]\\) and \\(A[m+1,n]\\) . Compute the \\(MS\\) of \\(A[1,m]\\) and \\(A[m+1,n]\\) separately, as well as \\(X\\) , \\(MS\\) of sub sequence crossing over \\(A[1,m]\\) and \\(A[m+1,n]\\) . Easy to get that $$ X = \\max\\left{\\sum_{i=1}^{m}A_i, \\sum_{i=2}^{m}A_i, ..., \\sum_{i=m}^{m}A_i\\right} + \\max\\left{\\sum_{i=m+1}^{m+1}A_i, \\sum_{i=m+1}^{m+2}A_i, ..., \\sum_{i=m+1}^{n}A_i\\right} $$ Combine \u00b6 \\[ MS(A) = \\max\\{MS(A[1,m]), MS(A[m+1,n]), X \\} \\] Time Complexity \u00b6 Time complexity of \\(X\\) is \\(O(n)\\) . So, \\(T(n) = 2T(\\frac{n}{2}) + O(n)\\) . Then the total time complexity is \\(O(n\\log{}n)\\) . Notes \u00b6 The best algorithm for the problem has \\(O(n)\\) time complexity. Assume \\(MS(k)\\) is \\(MS\\) of the front k elements of \\(A\\) and \\(MSE(k)\\) is \\(MS\\) of the front \\(k\\) elements ending with \\(A[k]\\) . Then calculate \\(MS(k+1)\\) as follows. $$ MS(k+1) = \\begin{cases} A[k+1] + \\max{0, MSE(k)} &\\text{if }A[k+1] \\text{ in } MS[k+1] \\ MS(k) &\\text{if not} \\end{cases} $$ Then, \\(MS(k+1)\\) is the larger one. In this way, \\(T(n) = T(n-1) + C = O(n)\\) . References \u00b6 Divide and Conquer - GeeksforGeeks","title":"\u5206\u6cbb\u7b97\u6cd5"},{"location":"cs/algorithms/divide-and-conquer.html#overview","text":"A typical Divide-and-Conquer algorithm solves a problem using following three steps: Divide : Break the given problem into subproblems of same type. Conquer : Recursively solve these subproblems. Combine : Appropriately combine the answers.","title":"Overview"},{"location":"cs/algorithms/divide-and-conquer.html#example","text":"Given an integer array \\(A[1, n]\\) , write a function calculate(int[] A) to calculate its sub sequence with max summary, \\(MS\\) for short.","title":"Example"},{"location":"cs/algorithms/divide-and-conquer.html#divide","text":"Assume \\(m=\\frac{n}{2}\\) , then divide \\(A\\) into two parts, \\(A[1, m]\\) and \\(A[m+1,n]\\) . Compute the \\(MS\\) of \\(A[1,m]\\) and \\(A[m+1,n]\\) separately, as well as \\(X\\) , \\(MS\\) of sub sequence crossing over \\(A[1,m]\\) and \\(A[m+1,n]\\) . Easy to get that $$ X = \\max\\left{\\sum_{i=1}^{m}A_i, \\sum_{i=2}^{m}A_i, ..., \\sum_{i=m}^{m}A_i\\right} + \\max\\left{\\sum_{i=m+1}^{m+1}A_i, \\sum_{i=m+1}^{m+2}A_i, ..., \\sum_{i=m+1}^{n}A_i\\right} $$","title":"Divide"},{"location":"cs/algorithms/divide-and-conquer.html#combine","text":"\\[ MS(A) = \\max\\{MS(A[1,m]), MS(A[m+1,n]), X \\} \\]","title":"Combine"},{"location":"cs/algorithms/divide-and-conquer.html#time-complexity","text":"Time complexity of \\(X\\) is \\(O(n)\\) . So, \\(T(n) = 2T(\\frac{n}{2}) + O(n)\\) . Then the total time complexity is \\(O(n\\log{}n)\\) .","title":"Time Complexity"},{"location":"cs/algorithms/divide-and-conquer.html#notes","text":"The best algorithm for the problem has \\(O(n)\\) time complexity. Assume \\(MS(k)\\) is \\(MS\\) of the front k elements of \\(A\\) and \\(MSE(k)\\) is \\(MS\\) of the front \\(k\\) elements ending with \\(A[k]\\) . Then calculate \\(MS(k+1)\\) as follows. $$ MS(k+1) = \\begin{cases} A[k+1] + \\max{0, MSE(k)} &\\text{if }A[k+1] \\text{ in } MS[k+1] \\ MS(k) &\\text{if not} \\end{cases} $$ Then, \\(MS(k+1)\\) is the larger one. In this way, \\(T(n) = T(n-1) + C = O(n)\\) .","title":"Notes"},{"location":"cs/algorithms/divide-and-conquer.html#references","text":"Divide and Conquer - GeeksforGeeks","title":"References"},{"location":"cs/algorithms/dynamic-programming.html","text":"TODO","title":"\u52a8\u6001\u89c4\u5212"},{"location":"cs/algorithms/greedy-algorithms.html","text":"TODO","title":"\u8d2a\u5fc3\u7b97\u6cd5"},{"location":"cs/algorithms/cryptography/rsa.html","text":"TODO Overview \u00b6 Generally, data transforming from senders to receivers need to be encrypted. A common way is as follows: Senders encrypt plain text with a key K . Receivers decrypt the cipher text with the same key K . It's called Symmetric Cryptography Algorithm . The question is, however, how to store and pass the key in safety. Then comes another algorithm called Asymmetric Cryptography Algorithm , without key transformation. Receivers generate two keys: one is public and another is private. Senders get the public one to encrypt the information. Receivers use the private key to decrypt the data. RSA Algorithm is one of asymmetric cryptography algorithms. Below is the basic principle of RSA. Preparation \u00b6 Coprime \u00b6 First to know is a concept called coprime(\u4e92\u8d28) . It's easy to draw conclusions as follows: Any two prime numbers are coprime. If the smaller one is prime, the two numbers are coprime as long as the greater ones isn't a multiple of the smaller one. If the greater one is prime, the two numbers are coprime. Any number and 1 are coprime. Any number \\(p\\) and \\(p-1\\) are coprime. If \\(p\\) is odd, \\(p\\) and \\(p-2\\) are coprime. Euler's totient function \u00b6 Then comes a question: given any positive integer \\(n\\) , how many integers \\(k\\) in the range \\(1\\le{k}\\le{n}\\) are relatively prime to \\(n\\) ? The counting is called Euler's totient function , expressed as \\(\\varphi(n)\\) . Steps below are to calculate it. If \\(n=1\\) , \\(\\varphi(n)=1\\) . If \\(n\\) is prime, \\(\\varphi(n)=n-1\\) . If \\(n=p^k\\) and \\(p\\) is prime, then $$ \\varphi(n)=\\varphi(p k)=p k-p {k-1}=p k(1-\\frac{1}{p}) $$ \\(\\varphi(n)\\) is a multiplicative function. That's to say If \\(n=p_1\u00b7p_2\\) and \\(p_1\\) is coprime to \\(p_2\\) , then $$ \\varphi(n)=\\varphi(p_1\u00b7p_2)=\\varphi(p_1)\u00b7\\varphi(p_2) $$ The fundamental theorem of arithmetic states that if \\(n>1\\) there is a unique expression, \\(n=p_1^{k_1}\u00b7p_2^{k_2}\u00b7\u00b7\u00b7p_r^{k_r}\\) , combined with the two formulas above, then $$ \\varphi(n)=n(1-\\frac{1}{p_1})(1-\\frac{1}{p_2})(1-\\frac{1}{p_r}) $$ Carmichael function \u00b6 Given a positive integer \\(n\\) , Carmichael function \\(\\lambda(n)\\) is defined as the smallest positive integer \\(m\\) such that $$ a^m\\equiv1\\pmod{n}, \\quad1\\le{a}\\le{n}\\text{ and }a\\text{ is coprime to }n $$ Besides, \\(n\\) can by written in a unique way as $$ n=p_1 {k_1}\u00b7p_2 \u00b7\u00b7\u00b7p_r^{k_r},\\quad p_1, p_2, \\ldots, p_r\\text{ are primes} $$ Then \\(\\lambda (n)\\) is the least common multiple of the Carmichael function of each of its prime power factors, proved by Chinese Remainder Theorem : $$ \\lambda (n)=\\operatorname {lcm} (\\lambda (p_1^{k_1}), \\lambda (p_2^{k_2}), \\ldots, \\lambda (p_r^{k_r})) $$ By Carmichael's theorem , $$ \\lambda (p^k) = \\begin{cases} \\varphi (p^k) &\\text {if } p^k \\text{ is 2, 4 or a power of an odd prime} \\ \\frac{1}{2} \\varphi (p^k) &\\text{if } p^k \\text{ is powers of 2 greater than 4} \\end{cases} $$ and as given above, $$ \\varphi (p^k) = p^k(1-\\frac{1}{p}) $$ RSA \u00b6 Key Generation \u00b6 Assume Zoe wants to communicate with EZ, then how do Zoe generate the public and private keys? Choose two distinct prime numbers \\(p\\) and \\(q\\) . For security purposes, the integers \\(p\\) and \\(q\\) should be chosen at random, and should be similar in magnitude but differ in length by a few digits to make factoring harder. Prime integers can be efficiently found using a primality test. \\(p\\) and \\(q\\) are kept secret. Assume that Zoe chooses 61 and 53. Compute \\(n = pq\\) . \\(n\\) is used as the modulus for both the public and private keys. Its length, usually expressed in bits, is the key length. \\(n\\) is released as part of the public key. Zoe computes that \\(n=61 \\times 53=3233\\) . Compute \\(\\lambda(n)\\) . $$ \\begin{aligned} \\lambda (n) &= \\operatorname {lcm} (\\lambda (p), \\lambda (q)) \\ &= \\operatorname {lcm} (p-1, q-1) \\end{aligned} $$ Zoe computes that \\(\\lambda (n)=\\operatorname{lcm}(60, 52)=780\\) . Choose an integer \\(e\\) such that \\(1<e<\\lambda (n)\\) and \\(e\\) is coprime to \\(\\lambda (n)\\) . Shorter bit-length and smaller Hamming weight \\(e\\) has, more efficient encryption is. The most commonly chosen value is \\(2^{16}+1=65537\\) . \\(e\\) is released as part of the public key. Let \\(e = 17\\) . Determine \\(d\\) , the modular multiplicative inverse of \\(e\\) modulo \\(\\lambda (n)\\) . That means \\(e\u00b7d \\equiv1\\pmod{\\lambda (n)}\\) . It's computed efficiently by Extended Euclidean algorithm . \\(d\\) is kept secret as the private key exponent. By solving the equation \\(e\u00b7d+k\\lambda(n)=1\\) , Zoe gets \\(d=413\\) . Now, we get a public key \\((n, e)\\) and a private key \\((n, d)\\) . For Zoe, they are \\((3233, 17)\\) and \\((3233, 413)\\) . Encryption and Decryption \u00b6 For a plaintext message \\(m\\) , the encryption function is $$ c(m) = m^e \\pmod{n} $$ For an encrypted criphertext \\(c\\) , the decryption function is $$ m\u00a9 = c^d \\pmod{n} $$ Assume that Zoe wants to encrypt \\(m = 65\\) , then $$ c=65^{17}\\pmod{3233}=2790 $$ EZ gets c and decrypts it to calculate $$ m=2790^{413}\\pmod{3233}=65 $$ These calculations can be computed efficiently by Exponentiation by squaring . References \u00b6 RSA\u7b97\u6cd5\u539f\u7406\uff08\u4e00\uff09 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7 RSA\u7b97\u6cd5\u539f\u7406\uff08\u4e8c\uff09 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7 RSA - Wikipedia Carmichael function - Wikipedia \u5361\u8fc8\u514b\u5c14\u51fd\u6570-\u5317\u57ce\u767e\u79d1\u7f51 Euler's totient function - Wikipedia Fundamental theorem of arithmetic - Wikipedia Hamming weight - Wikipedia","title":"RSA"},{"location":"cs/algorithms/cryptography/rsa.html#overview","text":"Generally, data transforming from senders to receivers need to be encrypted. A common way is as follows: Senders encrypt plain text with a key K . Receivers decrypt the cipher text with the same key K . It's called Symmetric Cryptography Algorithm . The question is, however, how to store and pass the key in safety. Then comes another algorithm called Asymmetric Cryptography Algorithm , without key transformation. Receivers generate two keys: one is public and another is private. Senders get the public one to encrypt the information. Receivers use the private key to decrypt the data. RSA Algorithm is one of asymmetric cryptography algorithms. Below is the basic principle of RSA.","title":"Overview"},{"location":"cs/algorithms/cryptography/rsa.html#preparation","text":"","title":"Preparation"},{"location":"cs/algorithms/cryptography/rsa.html#coprime","text":"First to know is a concept called coprime(\u4e92\u8d28) . It's easy to draw conclusions as follows: Any two prime numbers are coprime. If the smaller one is prime, the two numbers are coprime as long as the greater ones isn't a multiple of the smaller one. If the greater one is prime, the two numbers are coprime. Any number and 1 are coprime. Any number \\(p\\) and \\(p-1\\) are coprime. If \\(p\\) is odd, \\(p\\) and \\(p-2\\) are coprime.","title":"Coprime"},{"location":"cs/algorithms/cryptography/rsa.html#eulers-totient-function","text":"Then comes a question: given any positive integer \\(n\\) , how many integers \\(k\\) in the range \\(1\\le{k}\\le{n}\\) are relatively prime to \\(n\\) ? The counting is called Euler's totient function , expressed as \\(\\varphi(n)\\) . Steps below are to calculate it. If \\(n=1\\) , \\(\\varphi(n)=1\\) . If \\(n\\) is prime, \\(\\varphi(n)=n-1\\) . If \\(n=p^k\\) and \\(p\\) is prime, then $$ \\varphi(n)=\\varphi(p k)=p k-p {k-1}=p k(1-\\frac{1}{p}) $$ \\(\\varphi(n)\\) is a multiplicative function. That's to say If \\(n=p_1\u00b7p_2\\) and \\(p_1\\) is coprime to \\(p_2\\) , then $$ \\varphi(n)=\\varphi(p_1\u00b7p_2)=\\varphi(p_1)\u00b7\\varphi(p_2) $$ The fundamental theorem of arithmetic states that if \\(n>1\\) there is a unique expression, \\(n=p_1^{k_1}\u00b7p_2^{k_2}\u00b7\u00b7\u00b7p_r^{k_r}\\) , combined with the two formulas above, then $$ \\varphi(n)=n(1-\\frac{1}{p_1})(1-\\frac{1}{p_2})(1-\\frac{1}{p_r}) $$","title":"Euler's totient function"},{"location":"cs/algorithms/cryptography/rsa.html#carmichael-function","text":"Given a positive integer \\(n\\) , Carmichael function \\(\\lambda(n)\\) is defined as the smallest positive integer \\(m\\) such that $$ a^m\\equiv1\\pmod{n}, \\quad1\\le{a}\\le{n}\\text{ and }a\\text{ is coprime to }n $$ Besides, \\(n\\) can by written in a unique way as $$ n=p_1 {k_1}\u00b7p_2 \u00b7\u00b7\u00b7p_r^{k_r},\\quad p_1, p_2, \\ldots, p_r\\text{ are primes} $$ Then \\(\\lambda (n)\\) is the least common multiple of the Carmichael function of each of its prime power factors, proved by Chinese Remainder Theorem : $$ \\lambda (n)=\\operatorname {lcm} (\\lambda (p_1^{k_1}), \\lambda (p_2^{k_2}), \\ldots, \\lambda (p_r^{k_r})) $$ By Carmichael's theorem , $$ \\lambda (p^k) = \\begin{cases} \\varphi (p^k) &\\text {if } p^k \\text{ is 2, 4 or a power of an odd prime} \\ \\frac{1}{2} \\varphi (p^k) &\\text{if } p^k \\text{ is powers of 2 greater than 4} \\end{cases} $$ and as given above, $$ \\varphi (p^k) = p^k(1-\\frac{1}{p}) $$","title":"Carmichael function"},{"location":"cs/algorithms/cryptography/rsa.html#rsa","text":"","title":"RSA"},{"location":"cs/algorithms/cryptography/rsa.html#key-generation","text":"Assume Zoe wants to communicate with EZ, then how do Zoe generate the public and private keys? Choose two distinct prime numbers \\(p\\) and \\(q\\) . For security purposes, the integers \\(p\\) and \\(q\\) should be chosen at random, and should be similar in magnitude but differ in length by a few digits to make factoring harder. Prime integers can be efficiently found using a primality test. \\(p\\) and \\(q\\) are kept secret. Assume that Zoe chooses 61 and 53. Compute \\(n = pq\\) . \\(n\\) is used as the modulus for both the public and private keys. Its length, usually expressed in bits, is the key length. \\(n\\) is released as part of the public key. Zoe computes that \\(n=61 \\times 53=3233\\) . Compute \\(\\lambda(n)\\) . $$ \\begin{aligned} \\lambda (n) &= \\operatorname {lcm} (\\lambda (p), \\lambda (q)) \\ &= \\operatorname {lcm} (p-1, q-1) \\end{aligned} $$ Zoe computes that \\(\\lambda (n)=\\operatorname{lcm}(60, 52)=780\\) . Choose an integer \\(e\\) such that \\(1<e<\\lambda (n)\\) and \\(e\\) is coprime to \\(\\lambda (n)\\) . Shorter bit-length and smaller Hamming weight \\(e\\) has, more efficient encryption is. The most commonly chosen value is \\(2^{16}+1=65537\\) . \\(e\\) is released as part of the public key. Let \\(e = 17\\) . Determine \\(d\\) , the modular multiplicative inverse of \\(e\\) modulo \\(\\lambda (n)\\) . That means \\(e\u00b7d \\equiv1\\pmod{\\lambda (n)}\\) . It's computed efficiently by Extended Euclidean algorithm . \\(d\\) is kept secret as the private key exponent. By solving the equation \\(e\u00b7d+k\\lambda(n)=1\\) , Zoe gets \\(d=413\\) . Now, we get a public key \\((n, e)\\) and a private key \\((n, d)\\) . For Zoe, they are \\((3233, 17)\\) and \\((3233, 413)\\) .","title":"Key Generation"},{"location":"cs/algorithms/cryptography/rsa.html#encryption-and-decryption","text":"For a plaintext message \\(m\\) , the encryption function is $$ c(m) = m^e \\pmod{n} $$ For an encrypted criphertext \\(c\\) , the decryption function is $$ m\u00a9 = c^d \\pmod{n} $$ Assume that Zoe wants to encrypt \\(m = 65\\) , then $$ c=65^{17}\\pmod{3233}=2790 $$ EZ gets c and decrypts it to calculate $$ m=2790^{413}\\pmod{3233}=65 $$ These calculations can be computed efficiently by Exponentiation by squaring .","title":"Encryption and Decryption"},{"location":"cs/algorithms/cryptography/rsa.html#references","text":"RSA\u7b97\u6cd5\u539f\u7406\uff08\u4e00\uff09 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7 RSA\u7b97\u6cd5\u539f\u7406\uff08\u4e8c\uff09 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7 RSA - Wikipedia Carmichael function - Wikipedia \u5361\u8fc8\u514b\u5c14\u51fd\u6570-\u5317\u57ce\u767e\u79d1\u7f51 Euler's totient function - Wikipedia Fundamental theorem of arithmetic - Wikipedia Hamming weight - Wikipedia","title":"References"},{"location":"cs/algorithms/cryptography/sha.html","text":"TODO","title":"SHA"},{"location":"cs/algorithms/graph/depth-first-search.html","text":"TODO","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html","text":"TODO \u6982\u8ff0 \u00b6 Dijkstra \u7b97\u6cd5 \uff0c\u4f7f\u7528\u7c7b\u4f3c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u65b9\u6cd5\u89e3\u51b3**\u52a0\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898**\uff0c\u5176\u539f\u59cb\u7248\u672c\u4ec5\u9002\u7528\u4e8e\u627e\u5230\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\uff0c\u540e\u6765\u66f4\u5e38\u89c1\u7684\u53d8\u4f53\u56fa\u5b9a\u4e86\u4e00\u4e2a\u9876\u70b9\u4f5c\u4e3a\u6e90\u7ed3\u70b9\u7136\u540e\u627e\u5230\u8be5\u9876\u70b9\u5230\u56fe\u4e2d\u6240\u6709\u5176\u5b83\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u4ea7\u751f\u4e00\u4e2a\u6700\u77ed\u8def\u5f84\u6811\u3002 \u95ee\u9898 \u00b6 \u7ed9\u5b9a\u52a0\u6743\u6709\u5411\u56fe \\(G=\\{V,E,W\\}\\) \uff0c\u5176\u9876\u70b9\u96c6\u5408 \\(V=\\{v_1,v_2,...,v_n\\}\\) \uff0c\u6bcf\u6761\u8fb9 \\(e_{i,j}(i\\ne j)\\) \u5bf9\u5e94\u4e00\u4e2a\u6743\u91cd \\(w_{i,j}(w_{i,j}\\ge0)\\) \uff0c\u8868\u793a\u4ece\u9876\u70b9 \\(v_i\\) \u5230 \\(v_{j}\\) \u7684\u8ddd\u79bb\u3002\u8bbe\u4e00\u6e90\u70b9 \\(v_s\\in V\\) \uff0c\u6c42\uff1a\u4ece \\(v_s\\) \u51fa\u53d1\uff0c\u5230\u5176\u5b83\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84 \\(d_{s,i}(1\\le i\\le n)\\) \u3002 Dijkstra \u7b97\u6cd5 \u00b6 \u5b9a\u4e49 \u00b6 \u96c6\u5408 \\(S\\) \u548c \\(S'\\) \uff0c\u5305\u62ec\u5df2\u7ecf\u786e\u5b9a\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\uff0c\u521d\u59cb\u65f6\uff0c \\(S=\\{v_s\\}\\) \uff0c\u5f53\u4e14\u4ec5\u5f53 \\(S=V\\) \u65f6\uff0c\u7b97\u6cd5\u7ed3\u675f\uff1a \\[ \\notag S=\\{v_i\\in V \\ |\\ d_{s,i}\\text{ \u5df2\u7ecf\u786e\u5b9a}\\},\\quad S'=V-S \\] \u6570\u7ec4 \\(F=\\{f_{s,i}\\ |\\ v_i\\in S'\\}\\) \uff0c\u5176\u4e2d \\(f_{s,i}\\) \u8868\u793a\u4ece\u9876\u70b9 \\(v_s\\) \u5230 \\(v_i\\) \u7684\u6700\u77ed\u8def\u5f84\uff0c\u4e14\u8be5\u8def\u5f84\u4e0a\u7684\u6240\u6709\u9876\u70b9\u5fc5\u987b\u5728 \\(S\\) \u4e2d\u3002\u663e\u7136\uff0c \\(f_{s,i}\\ge d_{s,i}\\) . \u8bbe\u8ba1 \u00b6 Dijkstra \u7b97\u6cd5\u7684\u601d\u8def\u662f\uff0c \u6bcf\u6b21\u4ece \\(S'\\) \u4e2d\u9009\u62e9\u5230 \\(v_s\\) \u76f8\u5bf9\u6700\u8fd1\u7684\u9876\u70b9\u52a0\u5165 \\(S\\) \u4e2d\uff0c\u76f4\u81f3 \\(f_{s,i}=d_{s,i},\\ S=V\\) \uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u521d\u59cb\u5316\uff0c \\(S=\\{v_s\\}\\) \uff0c $$ \\notag f_{s,i}=\\begin{cases} w_{s,i} &i\\ne s \\text{ \u4e14 } e_{s,i}\\text{ \u5b58\u5728} \\ \\infty &i\\ne s \\text{ \u4e14 } e_{s,i}\\text{ \u4e0d\u5b58\u5728} \\end{cases} $$ \u4ece \\(S'\\) \u4e2d\u9009\u62e9 \\(v_k\\) \uff0c\u4f7f\u5f97 \\(f_{s,k}\\) \u6700\u5c0f\uff0c\u5373\uff1a $$ \\tag{1} f_{s,k}=\\min{f_{s,i} | v_i\\in S'} $$ \u6b64\u65f6 \\(d_{s,k}=f_{s,k}\\) \uff0c\u5373\u4e3a\u6700\u77ed\u8def\u5f84\uff08\u7a0d\u540e\u8bc1\u660e\uff09\uff0c\u5c06 \\(v_k\\) \u52a0\u5165 \\(S\\) \uff0c\u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag S=S\\cup {v_k} \\ f_{s,i} = \\min{f_{s,i}, f_{s,k}+w_{k,i}} $$ \u91cd\u590d\u6b65\u9aa4 2 \u548c 3 \u76f4\u81f3 \\(S=V\\) . \u8bc1\u660e \\(d_{s,k}=f_{s,k}\\) \uff1a\u8bbe\u4efb\u610f\u4ece \\(v_s\\) \u5230 \\(v_k\\) \u7684\u8def\u5f84 \\(p_{s,k}=v_s\\to v_{s_{1}}\\to v_{s_{2}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}\\to v_k\\) \uff0c \u82e5 \\(\\{v_{s_{1}},v_{s_{2}},...,v_{s_{j}}\\}\\subset S\\) \uff0c \\(p_{s,k}\\ge f_{s,k}\\) \uff1b \u5426\u5219 \\(\\exists\\ v_{s_{i}}\\in S'\\text{ \u4e14 }\\{v_{s_{1}},v_{s_{2}},...,v_{s_{i-1}}\\}\\subset S,\\ 1\\le i\\le j\\) \uff0c\u540c\u65f6\uff0c\u6839\u636e\u5f0f \\((1)\\) \u6709 \\(f_{s,k}\\le f_{s,s_{i}}\\) \uff0c\u90a3\u4e48 $$ \\notag \\begin{align} \\notag p_{s,k}&=v_s\\to v_{s_{1}}\\to \u00b7\u00b7\u00b7\\to v_{s_{i}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}\\to v_k \\ \\notag &\\ge f_{s,s_{i}}+(v_{s_{i+1}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}) \\ \\notag &\\ge f_{s,k}+(v_{s_{i+1}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}) \\end{align} $$ \u56e0\u6b64 \\(f_{s,k}\\) \u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u5373 \\(d_{s,k}=f_{s,k}\\) . \u793a\u4f8b \u00b6 \u7ed9\u5b9a\u5982\u56fe\u6709\u5411\u56fe\uff1a \u521d\u59cb\u5316 \\(S\\) \u548c \\(F\\) \uff0c\u6709\uff1a $$ \\notag \\begin{align} \\notag &S={v_1},\\quad S\u2018={v_2,v_3,v_4,v_5,v_6} \\ \\notag &\\color{red}{d_{1,1}=0} \\ \\notag &f_{1,2}=10, f_{1,3}=\\infty, f_{1,4}=\\infty, f_{1,5}=\\infty, f_{1,6}=3 \\end{align} $$ \u5176\u4e2d \\(f_{1,6}=3\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_6\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,\\color{red}{v_6}},\\quad S\u2018={v_2,v_3,v_4,v_5} \\ \\notag &d_{1,1}=0, \\color{red}{d_{1,6}=3} \\ \\notag &f_{1,2}=\\color{red}{5}, f_{1,3}=\\infty, f_{1,4}=\\color{red}{9}, f_{1,5}=\\color{red}{4} \\end{align} $$ \u5176\u4e2d \\(f_{1,5}=4\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_5\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,\\color{red}{v_5},v_6},\\quad S\u2018={v_2,v_3,v_4} \\ \\notag &d_{1,1}=0, \\color{red}{d_{1,5}=4}, d_{1,6}=3 \\ \\notag &f_{1,2}=5, f_{1,3}=\\infty, f_{1,4}=9 \\end{align} $$ \u5176\u4e2d \\(f_{1,2}=5\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_2\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,\\color{red}{v_2},v_5,v_6},\\quad S\u2018={v_3,v_4} \\ \\notag &d_{1,1}=0, \\color{red}{d_{1,2}=5}, d_{1,5}=4, d_{1,6}=3 \\ \\notag &f_{1,3}=\\color{red}{12}, f_{1,4}=9 \\end{align} $$ \u5176\u4e2d \\(f_{1,4}=9\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_4\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,v_2,\\color{red}{v_4},v_5,v_6},\\quad S\u2018={v_3} \\ \\notag &d_{1,1}=0, d_{1,2}=5, \\color{red}{d_{1,4}=9}, d_{1,5}=4, d_{1,6}=3 \\ \\notag &f_{1,3}=12 \\end{align} $$ \u6700\u540e\u9009\u62e9 \\(v_3\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,v_2,\\color{red}{v_3},v_4,v_5,v_6},\\quad S\u2018={v_3} \\ \\notag &d_{1,1}=0, d_{1,2}=5, \\color{red}{d_{1,3}=12}, d_{1,4}=9, d_{1,5}=4, d_{1,6}=3 \\ \\end{align} $$ \u5b9e\u73b0 \u00b6 \u5f85\u5b9a. \u53c2\u8003 \u00b6 Dijsktra's algorithm (geeksforgeeks.org) [ \u6700\u77ed\u8def\u5f84\u95ee\u9898]\u2014Dijkstra \u7b97\u6cd5\u6700\u8be6\u89e3 - \u77e5\u4e4e","title":"Dijkstra's \u7b97\u6cd5"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#_1","text":"Dijkstra \u7b97\u6cd5 \uff0c\u4f7f\u7528\u7c7b\u4f3c\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u65b9\u6cd5\u89e3\u51b3**\u52a0\u6743\u56fe\u7684\u5355\u6e90\u6700\u77ed\u8def\u5f84\u95ee\u9898**\uff0c\u5176\u539f\u59cb\u7248\u672c\u4ec5\u9002\u7528\u4e8e\u627e\u5230\u4e24\u4e2a\u9876\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\uff0c\u540e\u6765\u66f4\u5e38\u89c1\u7684\u53d8\u4f53\u56fa\u5b9a\u4e86\u4e00\u4e2a\u9876\u70b9\u4f5c\u4e3a\u6e90\u7ed3\u70b9\u7136\u540e\u627e\u5230\u8be5\u9876\u70b9\u5230\u56fe\u4e2d\u6240\u6709\u5176\u5b83\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0c\u4ea7\u751f\u4e00\u4e2a\u6700\u77ed\u8def\u5f84\u6811\u3002","title":"\u6982\u8ff0"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#_2","text":"\u7ed9\u5b9a\u52a0\u6743\u6709\u5411\u56fe \\(G=\\{V,E,W\\}\\) \uff0c\u5176\u9876\u70b9\u96c6\u5408 \\(V=\\{v_1,v_2,...,v_n\\}\\) \uff0c\u6bcf\u6761\u8fb9 \\(e_{i,j}(i\\ne j)\\) \u5bf9\u5e94\u4e00\u4e2a\u6743\u91cd \\(w_{i,j}(w_{i,j}\\ge0)\\) \uff0c\u8868\u793a\u4ece\u9876\u70b9 \\(v_i\\) \u5230 \\(v_{j}\\) \u7684\u8ddd\u79bb\u3002\u8bbe\u4e00\u6e90\u70b9 \\(v_s\\in V\\) \uff0c\u6c42\uff1a\u4ece \\(v_s\\) \u51fa\u53d1\uff0c\u5230\u5176\u5b83\u9876\u70b9\u7684\u6700\u77ed\u8def\u5f84 \\(d_{s,i}(1\\le i\\le n)\\) \u3002","title":"\u95ee\u9898"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#dijkstra","text":"","title":"Dijkstra \u7b97\u6cd5"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#_3","text":"\u96c6\u5408 \\(S\\) \u548c \\(S'\\) \uff0c\u5305\u62ec\u5df2\u7ecf\u786e\u5b9a\u6700\u77ed\u8def\u5f84\u7684\u9876\u70b9\uff0c\u521d\u59cb\u65f6\uff0c \\(S=\\{v_s\\}\\) \uff0c\u5f53\u4e14\u4ec5\u5f53 \\(S=V\\) \u65f6\uff0c\u7b97\u6cd5\u7ed3\u675f\uff1a \\[ \\notag S=\\{v_i\\in V \\ |\\ d_{s,i}\\text{ \u5df2\u7ecf\u786e\u5b9a}\\},\\quad S'=V-S \\] \u6570\u7ec4 \\(F=\\{f_{s,i}\\ |\\ v_i\\in S'\\}\\) \uff0c\u5176\u4e2d \\(f_{s,i}\\) \u8868\u793a\u4ece\u9876\u70b9 \\(v_s\\) \u5230 \\(v_i\\) \u7684\u6700\u77ed\u8def\u5f84\uff0c\u4e14\u8be5\u8def\u5f84\u4e0a\u7684\u6240\u6709\u9876\u70b9\u5fc5\u987b\u5728 \\(S\\) \u4e2d\u3002\u663e\u7136\uff0c \\(f_{s,i}\\ge d_{s,i}\\) .","title":"\u5b9a\u4e49"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#_4","text":"Dijkstra \u7b97\u6cd5\u7684\u601d\u8def\u662f\uff0c \u6bcf\u6b21\u4ece \\(S'\\) \u4e2d\u9009\u62e9\u5230 \\(v_s\\) \u76f8\u5bf9\u6700\u8fd1\u7684\u9876\u70b9\u52a0\u5165 \\(S\\) \u4e2d\uff0c\u76f4\u81f3 \\(f_{s,i}=d_{s,i},\\ S=V\\) \uff0c\u5177\u4f53\u6b65\u9aa4\u5982\u4e0b\uff1a \u521d\u59cb\u5316\uff0c \\(S=\\{v_s\\}\\) \uff0c $$ \\notag f_{s,i}=\\begin{cases} w_{s,i} &i\\ne s \\text{ \u4e14 } e_{s,i}\\text{ \u5b58\u5728} \\ \\infty &i\\ne s \\text{ \u4e14 } e_{s,i}\\text{ \u4e0d\u5b58\u5728} \\end{cases} $$ \u4ece \\(S'\\) \u4e2d\u9009\u62e9 \\(v_k\\) \uff0c\u4f7f\u5f97 \\(f_{s,k}\\) \u6700\u5c0f\uff0c\u5373\uff1a $$ \\tag{1} f_{s,k}=\\min{f_{s,i} | v_i\\in S'} $$ \u6b64\u65f6 \\(d_{s,k}=f_{s,k}\\) \uff0c\u5373\u4e3a\u6700\u77ed\u8def\u5f84\uff08\u7a0d\u540e\u8bc1\u660e\uff09\uff0c\u5c06 \\(v_k\\) \u52a0\u5165 \\(S\\) \uff0c\u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag S=S\\cup {v_k} \\ f_{s,i} = \\min{f_{s,i}, f_{s,k}+w_{k,i}} $$ \u91cd\u590d\u6b65\u9aa4 2 \u548c 3 \u76f4\u81f3 \\(S=V\\) . \u8bc1\u660e \\(d_{s,k}=f_{s,k}\\) \uff1a\u8bbe\u4efb\u610f\u4ece \\(v_s\\) \u5230 \\(v_k\\) \u7684\u8def\u5f84 \\(p_{s,k}=v_s\\to v_{s_{1}}\\to v_{s_{2}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}\\to v_k\\) \uff0c \u82e5 \\(\\{v_{s_{1}},v_{s_{2}},...,v_{s_{j}}\\}\\subset S\\) \uff0c \\(p_{s,k}\\ge f_{s,k}\\) \uff1b \u5426\u5219 \\(\\exists\\ v_{s_{i}}\\in S'\\text{ \u4e14 }\\{v_{s_{1}},v_{s_{2}},...,v_{s_{i-1}}\\}\\subset S,\\ 1\\le i\\le j\\) \uff0c\u540c\u65f6\uff0c\u6839\u636e\u5f0f \\((1)\\) \u6709 \\(f_{s,k}\\le f_{s,s_{i}}\\) \uff0c\u90a3\u4e48 $$ \\notag \\begin{align} \\notag p_{s,k}&=v_s\\to v_{s_{1}}\\to \u00b7\u00b7\u00b7\\to v_{s_{i}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}\\to v_k \\ \\notag &\\ge f_{s,s_{i}}+(v_{s_{i+1}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}) \\ \\notag &\\ge f_{s,k}+(v_{s_{i+1}}\\to\u00b7\u00b7\u00b7\\to v_{s_{j}}) \\end{align} $$ \u56e0\u6b64 \\(f_{s,k}\\) \u4e3a\u6700\u77ed\u8def\u5f84\uff0c\u5373 \\(d_{s,k}=f_{s,k}\\) .","title":"\u8bbe\u8ba1"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#_5","text":"\u7ed9\u5b9a\u5982\u56fe\u6709\u5411\u56fe\uff1a \u521d\u59cb\u5316 \\(S\\) \u548c \\(F\\) \uff0c\u6709\uff1a $$ \\notag \\begin{align} \\notag &S={v_1},\\quad S\u2018={v_2,v_3,v_4,v_5,v_6} \\ \\notag &\\color{red}{d_{1,1}=0} \\ \\notag &f_{1,2}=10, f_{1,3}=\\infty, f_{1,4}=\\infty, f_{1,5}=\\infty, f_{1,6}=3 \\end{align} $$ \u5176\u4e2d \\(f_{1,6}=3\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_6\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,\\color{red}{v_6}},\\quad S\u2018={v_2,v_3,v_4,v_5} \\ \\notag &d_{1,1}=0, \\color{red}{d_{1,6}=3} \\ \\notag &f_{1,2}=\\color{red}{5}, f_{1,3}=\\infty, f_{1,4}=\\color{red}{9}, f_{1,5}=\\color{red}{4} \\end{align} $$ \u5176\u4e2d \\(f_{1,5}=4\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_5\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,\\color{red}{v_5},v_6},\\quad S\u2018={v_2,v_3,v_4} \\ \\notag &d_{1,1}=0, \\color{red}{d_{1,5}=4}, d_{1,6}=3 \\ \\notag &f_{1,2}=5, f_{1,3}=\\infty, f_{1,4}=9 \\end{align} $$ \u5176\u4e2d \\(f_{1,2}=5\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_2\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,\\color{red}{v_2},v_5,v_6},\\quad S\u2018={v_3,v_4} \\ \\notag &d_{1,1}=0, \\color{red}{d_{1,2}=5}, d_{1,5}=4, d_{1,6}=3 \\ \\notag &f_{1,3}=\\color{red}{12}, f_{1,4}=9 \\end{align} $$ \u5176\u4e2d \\(f_{1,4}=9\\) \u6700\u5c0f\uff0c\u9009\u62e9 \\(v_4\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,v_2,\\color{red}{v_4},v_5,v_6},\\quad S\u2018={v_3} \\ \\notag &d_{1,1}=0, d_{1,2}=5, \\color{red}{d_{1,4}=9}, d_{1,5}=4, d_{1,6}=3 \\ \\notag &f_{1,3}=12 \\end{align} $$ \u6700\u540e\u9009\u62e9 \\(v_3\\) \uff0c\u52a0\u5165 \\(S\\) \u5e76\u66f4\u65b0 \\(F\\) \uff1a $$ \\notag \\begin{align} \\notag &S={v_1,v_2,\\color{red}{v_3},v_4,v_5,v_6},\\quad S\u2018={v_3} \\ \\notag &d_{1,1}=0, d_{1,2}=5, \\color{red}{d_{1,3}=12}, d_{1,4}=9, d_{1,5}=4, d_{1,6}=3 \\ \\end{align} $$","title":"\u793a\u4f8b"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#_6","text":"\u5f85\u5b9a.","title":"\u5b9e\u73b0"},{"location":"cs/algorithms/graph/dijkstra%27s-algorithm.html#_7","text":"Dijsktra's algorithm (geeksforgeeks.org) [ \u6700\u77ed\u8def\u5f84\u95ee\u9898]\u2014Dijkstra \u7b97\u6cd5\u6700\u8be6\u89e3 - \u77e5\u4e4e","title":"\u53c2\u8003"},{"location":"cs/algorithms/graph/tarjan-algorithm.html","text":"TODO \u6982\u8ff0 \u00b6 Tarjan \u7b97\u6cd5\u662f\u57fa\u4e8e \u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u7684\u7b97\u6cd5\uff0c\u7528\u4e8e\u6c42\u89e3\u56fe\u7684\u8fde\u901a\u6027\u95ee\u9898\u3002Tarjan \u7b97\u6cd5\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6c42\u51fa\u65e0\u5411\u56fe\u7684\u5272\u70b9\u4e0e\u6865\uff0c\u8fdb\u4e00\u6b65\u5730\u53ef\u4ee5\u6c42\u89e3\u65e0\u5411\u56fe\u7684\u53cc\u8fde\u901a\u5206\u91cf\uff1b\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u6c42\u89e3\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3001\u5fc5\u7ecf\u70b9\u4e0e\u5fc5\u7ecf\u8fb9\u3002","title":"Tarjan \u7b97\u6cd5"},{"location":"cs/algorithms/graph/tarjan-algorithm.html#_1","text":"Tarjan \u7b97\u6cd5\u662f\u57fa\u4e8e \u6df1\u5ea6\u4f18\u5148\u641c\u7d22 \u7684\u7b97\u6cd5\uff0c\u7528\u4e8e\u6c42\u89e3\u56fe\u7684\u8fde\u901a\u6027\u95ee\u9898\u3002Tarjan \u7b97\u6cd5\u53ef\u4ee5\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u6c42\u51fa\u65e0\u5411\u56fe\u7684\u5272\u70b9\u4e0e\u6865\uff0c\u8fdb\u4e00\u6b65\u5730\u53ef\u4ee5\u6c42\u89e3\u65e0\u5411\u56fe\u7684\u53cc\u8fde\u901a\u5206\u91cf\uff1b\u540c\u65f6\uff0c\u4e5f\u53ef\u4ee5\u6c42\u89e3\u6709\u5411\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3001\u5fc5\u7ecf\u70b9\u4e0e\u5fc5\u7ecf\u8fb9\u3002","title":"\u6982\u8ff0"},{"location":"cs/algorithms/others/knuth-shuffle-algorithm.html","text":"TODO \u95ee\u9898 \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 \\(a_1,...,a_n\\) \uff0c\u8bbe\u8ba1\u4e00\u4e2a\u516c\u5e73\u7684\u6d17\u724c\u7b97\u6cd5\u3002 \u5206\u6790 \u00b6 \u6d17\u724c\u5373\u968f\u673a\u751f\u6210\u7ed9\u5b9a\u6570\u7ec4\u6240\u6709\u5143\u7d20\u7684\u4e00\u4e2a\u6392\u5217\uff0c\u8fd9\u6837\u7684\u6392\u5217\u4e00\u5171\u6709 \\(n!\\) \u4e2a\uff0c\u56e0\u6b64\u7b97\u6cd5\u7684\u76ee\u6807\u662f**\u7b49\u6982\u7387**\u5730\u7ed9\u51fa\u5176\u4e2d\u7684\u4e00\u4e2a\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u90fd\u80fd**\u72ec\u7acb\u4e14\u7b49\u6982\u7387**\u5730\u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u3002 Knuth \u6d17\u724c\u7b97\u6cd5 \u00b6 \u4ece\u540e\u5411\u524d\u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u5f53\u524d\u5143\u7d20 \\(a_i\\) \uff0c\u4ece \\(a[1,...,i]\\) \u4e2d\u968f\u673a\u9009\u53d6 \\(a_j\\) \uff0c\u548c \\(a_i\\) \u4ea4\u6362\u3002 for i from n to 1: j = random(1,i) swap(a[i], a[j]) \u73b0\u5728\u8bc1\u660e\uff0c\u4efb\u610f\u5143\u7d20 \\(a\\) \u51fa\u73b0\u5728\u4f4d\u7f6e \\(p\\) \u4e0a\u7684\u6982\u7387 \\(P(a,p)=\\frac{1}{n}\\) . \u9996\u5148\uff0c\u5f53 \\(i\\) \u4ece \\(n\\) \u904d\u5386\u5230 \\(p+1\\) \u65f6\uff0c \\(a\\) \u5747\u672a\u88ab\u9009\u4e2d\uff0c\u5176\u6982\u7387\u4e3a \\(\\prod_{p+1\\le i\\le n}\\frac{i-1}{i}=\\frac{p}{n}\\) ; \u5f53 \\(i=p\\) \u65f6\uff0c \\(a\\) \u88ab\u9009\u4e2d\u5e76\u66ff\u6362\u5230\u4f4d\u7f6e \\(p\\) \u4e0a\uff0c\u6982\u7387\u4e3a \\(\\frac{1}{p}\\) ; \u7efc\u4e0a\u53ef\u77e5\uff0c \\(P(a,p)=\\frac{p}{n}*\\frac{1}{p}=\\frac{1}{n}\\) . \u663e\u7136\u5730\uff0c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\) . \u53e6\u4e00\u79cd\u8868\u793a \u00b6 \u6bcf\u6b21\u4ece\u6570\u7ec4\u4e2d\u968f\u673a\u4e0d\u653e\u56de\u5730\u62bd\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u751f\u6210\u7684\u6392\u5217\u5373\u662f\u6d17\u724c\u7684\u4e00\u4e2a\u7ed3\u679c\u3002 b[1,...,n] // \u5b58\u653e\u7ed3\u679c k=1 for i from n to 1: j = random(1,i) b[k++]=a[j] remove(a[j]) \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(n)\\) . \u53c2\u8003 \u00b6 Fisher\u2013Yates shuffle - Wikipedia \u6709\u54ea\u4e9b\u7b97\u6cd5\u60ca\u8273\u5230\u4e86\u4f60\uff1f - \u77e5\u4e4e","title":"Knuth \u6d17\u724c\u7b97\u6cd5"},{"location":"cs/algorithms/others/knuth-shuffle-algorithm.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 \\(a_1,...,a_n\\) \uff0c\u8bbe\u8ba1\u4e00\u4e2a\u516c\u5e73\u7684\u6d17\u724c\u7b97\u6cd5\u3002","title":"\u95ee\u9898"},{"location":"cs/algorithms/others/knuth-shuffle-algorithm.html#_2","text":"\u6d17\u724c\u5373\u968f\u673a\u751f\u6210\u7ed9\u5b9a\u6570\u7ec4\u6240\u6709\u5143\u7d20\u7684\u4e00\u4e2a\u6392\u5217\uff0c\u8fd9\u6837\u7684\u6392\u5217\u4e00\u5171\u6709 \\(n!\\) \u4e2a\uff0c\u56e0\u6b64\u7b97\u6cd5\u7684\u76ee\u6807\u662f**\u7b49\u6982\u7387**\u5730\u7ed9\u51fa\u5176\u4e2d\u7684\u4e00\u4e2a\u3002\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\u90fd\u80fd**\u72ec\u7acb\u4e14\u7b49\u6982\u7387**\u5730\u653e\u7f6e\u5728\u4efb\u610f\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u3002","title":"\u5206\u6790"},{"location":"cs/algorithms/others/knuth-shuffle-algorithm.html#knuth","text":"\u4ece\u540e\u5411\u524d\u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u5f53\u524d\u5143\u7d20 \\(a_i\\) \uff0c\u4ece \\(a[1,...,i]\\) \u4e2d\u968f\u673a\u9009\u53d6 \\(a_j\\) \uff0c\u548c \\(a_i\\) \u4ea4\u6362\u3002 for i from n to 1: j = random(1,i) swap(a[i], a[j]) \u73b0\u5728\u8bc1\u660e\uff0c\u4efb\u610f\u5143\u7d20 \\(a\\) \u51fa\u73b0\u5728\u4f4d\u7f6e \\(p\\) \u4e0a\u7684\u6982\u7387 \\(P(a,p)=\\frac{1}{n}\\) . \u9996\u5148\uff0c\u5f53 \\(i\\) \u4ece \\(n\\) \u904d\u5386\u5230 \\(p+1\\) \u65f6\uff0c \\(a\\) \u5747\u672a\u88ab\u9009\u4e2d\uff0c\u5176\u6982\u7387\u4e3a \\(\\prod_{p+1\\le i\\le n}\\frac{i-1}{i}=\\frac{p}{n}\\) ; \u5f53 \\(i=p\\) \u65f6\uff0c \\(a\\) \u88ab\u9009\u4e2d\u5e76\u66ff\u6362\u5230\u4f4d\u7f6e \\(p\\) \u4e0a\uff0c\u6982\u7387\u4e3a \\(\\frac{1}{p}\\) ; \u7efc\u4e0a\u53ef\u77e5\uff0c \\(P(a,p)=\\frac{p}{n}*\\frac{1}{p}=\\frac{1}{n}\\) . \u663e\u7136\u5730\uff0c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(1)\\) .","title":"Knuth \u6d17\u724c\u7b97\u6cd5"},{"location":"cs/algorithms/others/knuth-shuffle-algorithm.html#_3","text":"\u6bcf\u6b21\u4ece\u6570\u7ec4\u4e2d\u968f\u673a\u4e0d\u653e\u56de\u5730\u62bd\u53d6\u4e00\u4e2a\u5143\u7d20\uff0c\u751f\u6210\u7684\u6392\u5217\u5373\u662f\u6d17\u724c\u7684\u4e00\u4e2a\u7ed3\u679c\u3002 b[1,...,n] // \u5b58\u653e\u7ed3\u679c k=1 for i from n to 1: j = random(1,i) b[k++]=a[j] remove(a[j]) \u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u5747\u4e3a \\(O(n)\\) .","title":"\u53e6\u4e00\u79cd\u8868\u793a"},{"location":"cs/algorithms/others/knuth-shuffle-algorithm.html#_4","text":"Fisher\u2013Yates shuffle - Wikipedia \u6709\u54ea\u4e9b\u7b97\u6cd5\u60ca\u8273\u5230\u4e86\u4f60\uff1f - \u77e5\u4e4e","title":"\u53c2\u8003"},{"location":"cs/algorithms/others/monte-carlo-tree-search.html","text":"TODO References \u00b6 \u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\uff08\u65b0\u624b\u6559\u7a0b\uff09 - Sual - CSDN\u535a\u5ba2 Monte Carlo Tree Search - beginners guide Machine learning blog","title":"\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22"},{"location":"cs/algorithms/others/monte-carlo-tree-search.html#references","text":"\u8499\u7279\u5361\u6d1b\u6811\u641c\u7d22\uff08\u65b0\u624b\u6559\u7a0b\uff09 - Sual - CSDN\u535a\u5ba2 Monte Carlo Tree Search - beginners guide Machine learning blog","title":"References"},{"location":"cs/algorithms/others/reservoir-sampling.html","text":"TODO \u95ee\u9898 \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u636e\u6d41 \\(a_1,...,a_N\\) \uff0c\u5176\u957f\u5ea6 \\(N\\) \u5f88\u5927\u6216\u8005\u672a\u77e5\uff0c\u8bf7\u95ee\u5982\u4f55\u5728 \\(O(N)\\) \u60c5\u51b5\u4e0b\uff0c\u968f\u673a\u53d6\u51fa \\(k\\) \u4e2a\u6570\uff1f N \u5f88\u5927\uff0c\u56e0\u6b64\u65e0\u6cd5\u4e00\u6b21\u6027\u5b58\u50a8\u6570\u636e\u6d41\uff1b \u968f\u673a\u9009\u51fa \\(k\\) \u4e2a\u6570\uff0c\u6bcf\u4e2a\u6570\u88ab\u9009\u5230\u7684\u6982\u7387\u4e3a \\(\\frac{k}{N}\\) . \u7b80\u5355\u7b97\u6cd5 \u00b6 \u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\u6b65\u9aa4\u5982\u4e0b\uff1a \u7ef4\u62a4\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(k\\) \u7684\u84c4\u6c34\u6c60 \\(R_1,...,R_k\\) \uff0c\u5c06\u6570\u636e\u6d41\u7684\u524d \\(k\\) \u4e2a\u6570\u653e\u5165\u6c60\u4e2d\uff1b \u904d\u5386\u5269\u4f59\u6570\u636e\u3002\u5bf9\u4e8e \\(a_i\\) \uff0c\u5728 \\([1,i]\\) \u8303\u56f4\u5185\u53d6\u968f\u673a\u6570 \\(d\\) \uff0c\u5982\u679c \\(1\\le d\\le k\\) \uff0c\u5219\u66ff\u6362 \\(R_d\\) \u3002 \u73b0\u5728\u8bc1\u660e\uff0c\u5bf9 \\(a_i\\) \uff0c\u5176\u88ab\u9009\u4e2d\u7684\u6982\u7387 \\(P(i)=\\frac{k}{N}\\) . \u8bbe \\(I(i)\\) \u4e3a\u8be5\u6570\u636e\u8fdb\u5165\u6c60\u4e2d\u7684\u6982\u7387\uff0c \\(O(i)\\) \u4e3a\u8be5\u6570\u636e\u672a\u88ab\u66ff\u6362\u7684\u6982\u7387\uff0c\u6613\u77e5\uff0c \\(P(i)=I(i)*O(i)\\) \uff1b \u5f53 \\(i\\le k\\) \uff0c\u6570\u636e\u76f4\u63a5\u653e\u5165\u6c60\u4e2d\uff0c \\(I(i)=1\\) \uff1b \u5f53 \\(i>k\\) \uff0c\u9009\u53d6\u7684\u968f\u673a\u6570\u9700\u5728 \\([1,k]\\) \u8303\u56f4\u5185\uff0c \\(I(i)=\\frac{k}{i}\\) \uff1b \u5f53 \\(i\\le k\\) \uff0c\u6b64\u65f6\u6709 \\(R_i=a_i\\) \uff0c\u8003\u8651 \\(a_j\\ (j>k)\\) \uff0c\u5176\u8fdb\u5165\u6c60\u4e2d\u6982\u7387 \\(I(j)=\\frac{k}{j}\\) \uff0c\u6070\u597d\u66ff\u6362 \\(R_i/a_i\\) \u7684\u6982\u7387\u4e3a \\(\\frac{1}{k}\\) \uff0c \\(a_i\\) \u4e0d\u88ab \\(a_j\\) \u66ff\u6362\u7684\u6982\u7387\u4e3a \\(1-\\frac{k}{j}*\\frac{1}{k}=\\frac{j-1}{j}\\) . \u56e0\u6b64 \\(a_i\\) \u672a\u88ab\u66ff\u6362\u7684\u6982\u7387 \\(O(i)=\\prod_{k<j\\le N} \\frac{j-1}{j}=\\frac{k}{N}\\) ; \u5f53 \\(i>k\\) \uff0c \\(O(i)=\\prod_{i<j\\le N} \\frac{j-1}{j}=\\frac{i}{N}\\) \uff1b \u7efc\u4e0a\u53ef\u77e5\uff0c \\(P(i)=\\frac{k}{N}\\) . // R\u6570\u7ec4\u50a8\u5b58\u6700\u540e\u7684\u7ed3\u679c ReservoirSampling(a[1...N], R[1...k]) for i from 1 to k: R[i]=a[i] for i from k+1 to n: d = random(1, i) if j <= k: R[d]=a[i] \u7531\u4e0a\u53ef\u77e5\uff0c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(k)\\) . \u53c2\u8003 \u00b6 Reservoir sampling - Wikipedia . \u84c4\u6c34\u6c60\u62bd\u6837\u7b97\u6cd5\uff08Reservoir Sampling\uff09 - \u7b80\u4e66 .","title":"\u84c4\u6c34\u6c60\u62bd\u6837\u7b97\u6cd5"},{"location":"cs/algorithms/others/reservoir-sampling.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u636e\u6d41 \\(a_1,...,a_N\\) \uff0c\u5176\u957f\u5ea6 \\(N\\) \u5f88\u5927\u6216\u8005\u672a\u77e5\uff0c\u8bf7\u95ee\u5982\u4f55\u5728 \\(O(N)\\) \u60c5\u51b5\u4e0b\uff0c\u968f\u673a\u53d6\u51fa \\(k\\) \u4e2a\u6570\uff1f N \u5f88\u5927\uff0c\u56e0\u6b64\u65e0\u6cd5\u4e00\u6b21\u6027\u5b58\u50a8\u6570\u636e\u6d41\uff1b \u968f\u673a\u9009\u51fa \\(k\\) \u4e2a\u6570\uff0c\u6bcf\u4e2a\u6570\u88ab\u9009\u5230\u7684\u6982\u7387\u4e3a \\(\\frac{k}{N}\\) .","title":"\u95ee\u9898"},{"location":"cs/algorithms/others/reservoir-sampling.html#_2","text":"\u4e00\u4e2a\u7b80\u5355\u7684\u7b97\u6cd5\u6b65\u9aa4\u5982\u4e0b\uff1a \u7ef4\u62a4\u4e00\u4e2a\u5bb9\u91cf\u4e3a \\(k\\) \u7684\u84c4\u6c34\u6c60 \\(R_1,...,R_k\\) \uff0c\u5c06\u6570\u636e\u6d41\u7684\u524d \\(k\\) \u4e2a\u6570\u653e\u5165\u6c60\u4e2d\uff1b \u904d\u5386\u5269\u4f59\u6570\u636e\u3002\u5bf9\u4e8e \\(a_i\\) \uff0c\u5728 \\([1,i]\\) \u8303\u56f4\u5185\u53d6\u968f\u673a\u6570 \\(d\\) \uff0c\u5982\u679c \\(1\\le d\\le k\\) \uff0c\u5219\u66ff\u6362 \\(R_d\\) \u3002 \u73b0\u5728\u8bc1\u660e\uff0c\u5bf9 \\(a_i\\) \uff0c\u5176\u88ab\u9009\u4e2d\u7684\u6982\u7387 \\(P(i)=\\frac{k}{N}\\) . \u8bbe \\(I(i)\\) \u4e3a\u8be5\u6570\u636e\u8fdb\u5165\u6c60\u4e2d\u7684\u6982\u7387\uff0c \\(O(i)\\) \u4e3a\u8be5\u6570\u636e\u672a\u88ab\u66ff\u6362\u7684\u6982\u7387\uff0c\u6613\u77e5\uff0c \\(P(i)=I(i)*O(i)\\) \uff1b \u5f53 \\(i\\le k\\) \uff0c\u6570\u636e\u76f4\u63a5\u653e\u5165\u6c60\u4e2d\uff0c \\(I(i)=1\\) \uff1b \u5f53 \\(i>k\\) \uff0c\u9009\u53d6\u7684\u968f\u673a\u6570\u9700\u5728 \\([1,k]\\) \u8303\u56f4\u5185\uff0c \\(I(i)=\\frac{k}{i}\\) \uff1b \u5f53 \\(i\\le k\\) \uff0c\u6b64\u65f6\u6709 \\(R_i=a_i\\) \uff0c\u8003\u8651 \\(a_j\\ (j>k)\\) \uff0c\u5176\u8fdb\u5165\u6c60\u4e2d\u6982\u7387 \\(I(j)=\\frac{k}{j}\\) \uff0c\u6070\u597d\u66ff\u6362 \\(R_i/a_i\\) \u7684\u6982\u7387\u4e3a \\(\\frac{1}{k}\\) \uff0c \\(a_i\\) \u4e0d\u88ab \\(a_j\\) \u66ff\u6362\u7684\u6982\u7387\u4e3a \\(1-\\frac{k}{j}*\\frac{1}{k}=\\frac{j-1}{j}\\) . \u56e0\u6b64 \\(a_i\\) \u672a\u88ab\u66ff\u6362\u7684\u6982\u7387 \\(O(i)=\\prod_{k<j\\le N} \\frac{j-1}{j}=\\frac{k}{N}\\) ; \u5f53 \\(i>k\\) \uff0c \\(O(i)=\\prod_{i<j\\le N} \\frac{j-1}{j}=\\frac{i}{N}\\) \uff1b \u7efc\u4e0a\u53ef\u77e5\uff0c \\(P(i)=\\frac{k}{N}\\) . // R\u6570\u7ec4\u50a8\u5b58\u6700\u540e\u7684\u7ed3\u679c ReservoirSampling(a[1...N], R[1...k]) for i from 1 to k: R[i]=a[i] for i from k+1 to n: d = random(1, i) if j <= k: R[d]=a[i] \u7531\u4e0a\u53ef\u77e5\uff0c\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(N)\\) \uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(k)\\) .","title":"\u7b80\u5355\u7b97\u6cd5"},{"location":"cs/algorithms/others/reservoir-sampling.html#_3","text":"Reservoir sampling - Wikipedia . \u84c4\u6c34\u6c60\u62bd\u6837\u7b97\u6cd5\uff08Reservoir Sampling\uff09 - \u7b80\u4e66 .","title":"\u53c2\u8003"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html","text":"TODO \u95ee\u9898 \u00b6 \u7ed9\u5b9a\u6587\u672c\u5b57\u7b26\u4e32 \\(txt[0,n-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(T\\) \uff09 \u548c\u6a21\u5f0f\u5b57\u7b26\u4e32 \\(pat[0,m-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(P\\) \uff09\uff0c\u5728 \\(T\\) \u4e2d\u67e5\u627e \\(P\\) \uff08\u5047\u5b9a \\(n\\ge m\\ge 1\\) \uff09\u3002 Boyer-Moore \u7b97\u6cd5 \u00b6 BM \u7b97\u6cd5\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u6bd4\u8f83\u5339\u914d\uff0c\u4e0e KMP \u7b97\u6cd5\u76f8\u4f3c\uff0cBM \u7b97\u6cd5\u901a\u8fc7\u9884\u5904\u7406\u6a21\u5f0f\u4e32\uff0c\u4f7f\u5f97\u5339\u914d\u5931\u8d25\u65f6\uff0c\u6a21\u5f0f\u4e32\u53ef\u4ee5\u5411\u540e\u79fb\u52a8\u591a\u4f4d\uff0c\u5373\u5229\u7528\u6a21\u5f0f\u4e32\u7684\u4e00\u4e9b\u7279\u5f81\uff0c\u6392\u9664\u65e0\u6cd5\u5339\u914d\u7684\u7684\u4f4d\u7f6e\uff0c\u52a0\u5feb\u4e86\u5339\u914d\u7684\u901f\u5ea6\u3002 BM \u7b97\u6cd5\u5305\u542b\u4e24\u4e2a\u542f\u53d1\u7b56\u7565\u6765\u79fb\u52a8\u6a21\u5f0f\u4e32\uff1a \u574f\u5b57\u7b26\u89c4\u5219 \u548c \u597d\u540e\u7f00\u89c4\u5219 \u3002 \u574f\u5b57\u7b26\u89c4\u5219 \u00b6 \u5f53\u4ece\u53f3\u5f80\u5de6\uff0c\u51fa\u73b0\u5339\u914d\u5931\u8d25\u65f6\uff0c \u6211\u4eec\u79f0 b \u4e3a \u574f\u5b57\u7b26 \uff0c\u5373\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u6b64\u65f6\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5305\u542b b \uff0c\u5c06\u6700\u53f3\u4fa7\u7684 b \u548c\u574f\u5b57\u7b26\u5bf9\u9f50\uff08\u82e5 b \u5728 a \u53f3\u4fa7\uff0c\u5219\u53f3\u79fb\u4e00\u4f4d\uff09\uff1b $$ \\tag{1} shift(\\text{'b'})=\\max{1, j+1-k}, k=\\text{lastIndexOf('b') } $$ \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5728 a \u7684\u5de6\u4fa7\u4e0d\u5305\u542b b \uff0c\u5219\u5c06\u6574\u4e2a\u6a21\u5f0f\u4e32\u79fb\u81f3\u574f\u5b57\u7b26\u53f3\u4fa7\u3002 $$ \\tag{2} shift(\\text{'b'})=j+1 $$ class BM { // \u5982\u679c\u5b57\u7b26\u96c6\u8f83\u5c0f\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u4ee3\u66ff Map < Character , Integer > badChar ( char [] pat ) { Map < Character , Integer > lastIndices = new HashMap <> (); for ( int i = 0 ; i < pat . length ; i ++ ) { lastIndices . put ( pat [ i ] , i ); } return lastIndices ; } } \u597d\u540e\u7f00\u89c4\u5219 \u00b6 \u5f53\u4ece\u53f3\u5f80\u5de6\uff0c\u51fa\u73b0\u5339\u914d\u5931\u8d25\u65f6\uff0c \u6211\u4eec\u79f0\u5df2\u7ecf\u5339\u914d\u7684\u90e8\u5206 u \u4e3a \u597d\u540e\u7f00 \uff0c\u6b64\u65f6\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5728 a \u7684\u5de6\u4fa7\u5305\u542b u \uff0c\u5c06\u5176\u4e2d\u6700\u53f3\u4fa7\u7684 u \u4e0e\u597d\u540e\u7f00\u5bf9\u9f50\uff1b $$ \\tag{3} shift(j)=j+2-k, k=\\text{lastIndexOf(u,0,j+1) } $$ \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5728 a \u7684\u5de6\u4fa7\u4e0d\u5b58\u5728\u5b8c\u5168\u5339\u914d\u7684 u \uff0c\u4f46\u662f\u5b58\u5728\u6700\u957f\u7684\u5b50\u4e32 v \u65e2\u662f u \u7684\u540e\u7f00\uff0c\u4e5f\u662f \\(P\\) \u7684\u524d\u7f00\uff0c\u5219\u5c06\u4e8c\u8005\u5bf9\u9f50\uff1b $$ \\tag{4} shift(j)=m-k, k=\\text{the length of the longest common prefix and suffix of }P $$ \u5982\u679c\u4e0a\u8ff0\u4e24\u6b65\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5219\u5c06\u6574\u4e2a\u6a21\u5f0f\u4e32\u79fb\u81f3\u597d\u540e\u7f00\u53f3\u4fa7\u3002 $$ \\tag{5} shift(j)=m $$ \u4f18\u5316 \u00b6 \u5728\u60c5\u51b5\u4e00\u4e2d\uff0c\u5f53\u6211\u4eec\u5bfb\u627e\u51fa\u73b0\u5728 \\(P\\) \u4e2d\u7684\u5176\u4ed6 u \u65f6\uff0c\u5229\u7528\u5df2\u7ecf\u5931\u914d\u7684\u5b57\u7b26 a \u53ef\u4ee5\u6392\u9664\u4e00\u4e9b\u9519\u8bef\u7ed3\u679c\uff0c\u5373\uff0c\u5982\u679c\u627e\u5230\u7684 u \u7684\u524d\u4e00\u4e2a\u5b57\u7b26\u662f a \uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u3002 \u8ba1\u7b97 \u00b6 \u9996\u5148\u8ba1\u7b97\u6a21\u5f0f\u4e32 \\(P\\) \u6bcf\u4e2a\u540e\u7f00\u5b50\u4e32 u \uff08 \\(P[i,m-1]\\) \uff09\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u540e\u7f00\uff08\u4e0d\u5305\u62ec u \u672c\u8eab\uff09\u5bf9\u5e94\u7684\u540e\u7f00\u8d77\u59cb\u4f4d\u7f6e \\(j\\) \uff0c\u4ee4 \\(j=f(i)\\) \uff0c \u6211\u4eec\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u5f52\u7eb3\uff0c\u5f53 \\(i=m-1\\) \u65f6\uff0c \\(f(m-1)=m\\) \uff0c \u5047\u8bbe\u5f53 \\(i=s\\) \u65f6\uff0c \\(f(s)=t\\) \uff0c \u8003\u8651 \\(i=s-1\\) \uff0c \u5982\u679c x=y \uff0c\u5219 \\(f(s-1)=t-1=f(s)-1\\) \uff1b \u5982\u679c x \\(\\neq\\) y \uff0c\u8003\u8651 \\(f(t)\\) \uff0c \u5982\u679c x=z \uff0c\u5219 \\(f(s-1)=f(t)-1=f(f(s))-1\\) \uff1b\u5426\u5219\uff0c\u8003\u8651 \\(f(f(t))\\) \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u5728\u6574\u4e2a BM \u7b97\u6cd5\u4e2d\uff0c\u6bcf\u6b21\u5339\u914d\u5931\u8d25\u540e\uff0c\u6a21\u5f0f\u4e32\u5411\u53f3\u79fb\u52a8\u7684\u8ddd\u79bb\u53d6\u4e24\u4e2a\u89c4\u5219\u4e2d\u7684\u8f83\u5927\u503c\u3002 \u53c2\u8003 \u00b6 Boyer Moore Algorithm for Pattern Searching - GeeksforGeeks . \u5b57\u7b26\u4e32\u5339\u914d\u7684Boyer-Moore\u7b97\u6cd5 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7 . grep\u4e4b\u5b57\u7b26\u4e32\u641c\u7d22\u7b97\u6cd5Boyer-Moore\u7531\u6d45\u5165\u6df1\uff08\u6bd4KMP\u5feb3-5\u500d\uff09 - Alexia(minmin) - \u535a\u5ba2\u56ed .","title":"Boyer-Moore\u7b97\u6cd5"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html#_1","text":"\u7ed9\u5b9a\u6587\u672c\u5b57\u7b26\u4e32 \\(txt[0,n-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(T\\) \uff09 \u548c\u6a21\u5f0f\u5b57\u7b26\u4e32 \\(pat[0,m-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(P\\) \uff09\uff0c\u5728 \\(T\\) \u4e2d\u67e5\u627e \\(P\\) \uff08\u5047\u5b9a \\(n\\ge m\\ge 1\\) \uff09\u3002","title":"\u95ee\u9898"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html#boyer-moore","text":"BM \u7b97\u6cd5\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u6bd4\u8f83\u5339\u914d\uff0c\u4e0e KMP \u7b97\u6cd5\u76f8\u4f3c\uff0cBM \u7b97\u6cd5\u901a\u8fc7\u9884\u5904\u7406\u6a21\u5f0f\u4e32\uff0c\u4f7f\u5f97\u5339\u914d\u5931\u8d25\u65f6\uff0c\u6a21\u5f0f\u4e32\u53ef\u4ee5\u5411\u540e\u79fb\u52a8\u591a\u4f4d\uff0c\u5373\u5229\u7528\u6a21\u5f0f\u4e32\u7684\u4e00\u4e9b\u7279\u5f81\uff0c\u6392\u9664\u65e0\u6cd5\u5339\u914d\u7684\u7684\u4f4d\u7f6e\uff0c\u52a0\u5feb\u4e86\u5339\u914d\u7684\u901f\u5ea6\u3002 BM \u7b97\u6cd5\u5305\u542b\u4e24\u4e2a\u542f\u53d1\u7b56\u7565\u6765\u79fb\u52a8\u6a21\u5f0f\u4e32\uff1a \u574f\u5b57\u7b26\u89c4\u5219 \u548c \u597d\u540e\u7f00\u89c4\u5219 \u3002","title":"Boyer-Moore \u7b97\u6cd5"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html#_2","text":"\u5f53\u4ece\u53f3\u5f80\u5de6\uff0c\u51fa\u73b0\u5339\u914d\u5931\u8d25\u65f6\uff0c \u6211\u4eec\u79f0 b \u4e3a \u574f\u5b57\u7b26 \uff0c\u5373\u4e0d\u5339\u914d\u7684\u5b57\u7b26\uff0c\u6b64\u65f6\u5206\u4e24\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5305\u542b b \uff0c\u5c06\u6700\u53f3\u4fa7\u7684 b \u548c\u574f\u5b57\u7b26\u5bf9\u9f50\uff08\u82e5 b \u5728 a \u53f3\u4fa7\uff0c\u5219\u53f3\u79fb\u4e00\u4f4d\uff09\uff1b $$ \\tag{1} shift(\\text{'b'})=\\max{1, j+1-k}, k=\\text{lastIndexOf('b') } $$ \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5728 a \u7684\u5de6\u4fa7\u4e0d\u5305\u542b b \uff0c\u5219\u5c06\u6574\u4e2a\u6a21\u5f0f\u4e32\u79fb\u81f3\u574f\u5b57\u7b26\u53f3\u4fa7\u3002 $$ \\tag{2} shift(\\text{'b'})=j+1 $$ class BM { // \u5982\u679c\u5b57\u7b26\u96c6\u8f83\u5c0f\uff0c\u53ef\u4ee5\u7528\u6570\u7ec4\u4ee3\u66ff Map < Character , Integer > badChar ( char [] pat ) { Map < Character , Integer > lastIndices = new HashMap <> (); for ( int i = 0 ; i < pat . length ; i ++ ) { lastIndices . put ( pat [ i ] , i ); } return lastIndices ; } }","title":"\u574f\u5b57\u7b26\u89c4\u5219"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html#_3","text":"\u5f53\u4ece\u53f3\u5f80\u5de6\uff0c\u51fa\u73b0\u5339\u914d\u5931\u8d25\u65f6\uff0c \u6211\u4eec\u79f0\u5df2\u7ecf\u5339\u914d\u7684\u90e8\u5206 u \u4e3a \u597d\u540e\u7f00 \uff0c\u6b64\u65f6\u5206\u4e09\u79cd\u60c5\u51b5\u8ba8\u8bba\uff1a \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5728 a \u7684\u5de6\u4fa7\u5305\u542b u \uff0c\u5c06\u5176\u4e2d\u6700\u53f3\u4fa7\u7684 u \u4e0e\u597d\u540e\u7f00\u5bf9\u9f50\uff1b $$ \\tag{3} shift(j)=j+2-k, k=\\text{lastIndexOf(u,0,j+1) } $$ \u5982\u679c\u6a21\u5f0f\u4e32 \\(P\\) \u5728 a \u7684\u5de6\u4fa7\u4e0d\u5b58\u5728\u5b8c\u5168\u5339\u914d\u7684 u \uff0c\u4f46\u662f\u5b58\u5728\u6700\u957f\u7684\u5b50\u4e32 v \u65e2\u662f u \u7684\u540e\u7f00\uff0c\u4e5f\u662f \\(P\\) \u7684\u524d\u7f00\uff0c\u5219\u5c06\u4e8c\u8005\u5bf9\u9f50\uff1b $$ \\tag{4} shift(j)=m-k, k=\\text{the length of the longest common prefix and suffix of }P $$ \u5982\u679c\u4e0a\u8ff0\u4e24\u6b65\u90fd\u4e0d\u6ee1\u8db3\uff0c\u5219\u5c06\u6574\u4e2a\u6a21\u5f0f\u4e32\u79fb\u81f3\u597d\u540e\u7f00\u53f3\u4fa7\u3002 $$ \\tag{5} shift(j)=m $$","title":"\u597d\u540e\u7f00\u89c4\u5219"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html#_4","text":"\u5728\u60c5\u51b5\u4e00\u4e2d\uff0c\u5f53\u6211\u4eec\u5bfb\u627e\u51fa\u73b0\u5728 \\(P\\) \u4e2d\u7684\u5176\u4ed6 u \u65f6\uff0c\u5229\u7528\u5df2\u7ecf\u5931\u914d\u7684\u5b57\u7b26 a \u53ef\u4ee5\u6392\u9664\u4e00\u4e9b\u9519\u8bef\u7ed3\u679c\uff0c\u5373\uff0c\u5982\u679c\u627e\u5230\u7684 u \u7684\u524d\u4e00\u4e2a\u5b57\u7b26\u662f a \uff0c\u5219\u53ef\u4ee5\u5ffd\u7565\u3002","title":"\u4f18\u5316"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html#_5","text":"\u9996\u5148\u8ba1\u7b97\u6a21\u5f0f\u4e32 \\(P\\) \u6bcf\u4e2a\u540e\u7f00\u5b50\u4e32 u \uff08 \\(P[i,m-1]\\) \uff09\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u540e\u7f00\uff08\u4e0d\u5305\u62ec u \u672c\u8eab\uff09\u5bf9\u5e94\u7684\u540e\u7f00\u8d77\u59cb\u4f4d\u7f6e \\(j\\) \uff0c\u4ee4 \\(j=f(i)\\) \uff0c \u6211\u4eec\u4ece\u53f3\u5f80\u5de6\u8fdb\u884c\u5f52\u7eb3\uff0c\u5f53 \\(i=m-1\\) \u65f6\uff0c \\(f(m-1)=m\\) \uff0c \u5047\u8bbe\u5f53 \\(i=s\\) \u65f6\uff0c \\(f(s)=t\\) \uff0c \u8003\u8651 \\(i=s-1\\) \uff0c \u5982\u679c x=y \uff0c\u5219 \\(f(s-1)=t-1=f(s)-1\\) \uff1b \u5982\u679c x \\(\\neq\\) y \uff0c\u8003\u8651 \\(f(t)\\) \uff0c \u5982\u679c x=z \uff0c\u5219 \\(f(s-1)=f(t)-1=f(f(s))-1\\) \uff1b\u5426\u5219\uff0c\u8003\u8651 \\(f(f(t))\\) \uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002 \u5728\u6574\u4e2a BM \u7b97\u6cd5\u4e2d\uff0c\u6bcf\u6b21\u5339\u914d\u5931\u8d25\u540e\uff0c\u6a21\u5f0f\u4e32\u5411\u53f3\u79fb\u52a8\u7684\u8ddd\u79bb\u53d6\u4e24\u4e2a\u89c4\u5219\u4e2d\u7684\u8f83\u5927\u503c\u3002","title":"\u8ba1\u7b97"},{"location":"cs/algorithms/pattern-searching/boyer-moore-algorithm.html#_6","text":"Boyer Moore Algorithm for Pattern Searching - GeeksforGeeks . \u5b57\u7b26\u4e32\u5339\u914d\u7684Boyer-Moore\u7b97\u6cd5 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7 . grep\u4e4b\u5b57\u7b26\u4e32\u641c\u7d22\u7b97\u6cd5Boyer-Moore\u7531\u6d45\u5165\u6df1\uff08\u6bd4KMP\u5feb3-5\u500d\uff09 - Alexia(minmin) - \u535a\u5ba2\u56ed .","title":"\u53c2\u8003"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html","text":"TODO \u95ee\u9898 \u7ed9\u5b9a\u6587\u672c\u5b57\u7b26\u4e32 \\(txt[0,n-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(T\\) \uff09 \u548c\u6a21\u5f0f\u5b57\u7b26\u4e32 \\(pat[0,m-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(P\\) \uff09\uff0c\u5728 \\(T\\) \u4e2d\u67e5\u627e \\(P\\) \uff08\u5047\u5b9a \\(n\\ge m\\ge 1\\) \uff09\u3002 \u66b4\u529b\u5339\u914d \u00b6 class PatternSearching { // \u66b4\u529b\u5339\u914d public int bruteForce ( char [] txt , char [] pat ) { int m = pat . length ; int imax = ( txt . length - m ); for ( int i = 0 ; i <= imax ; i ++ ) { // \u6bd4\u8f83 T[i,i+m-1] \u548c P[0,m-1] int j = 0 ; while ( j < m && txt [ i + j ] == pat [ j ] ) { j ++ ; } if ( j == m ) { return i ; } } return - 1 ; } } KMP \u7b97\u6cd5 \u00b6 \u4e0a\u8ff0\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u4e2d\uff0c\u4e00\u65e6\u5339\u914d\u5931\u8d25\u65f6\uff0c \\(P\\) \u5c31\u4f1a\u53f3\u79fb\u4e00\u4f4d\uff08\u5373 \\(i=i+1\\) \uff09\uff0c\u7136\u540e\u4ece\u5934\u5f00\u59cb\u5339\u914d\uff08 \\(j=0\\) \uff09\uff0c\u5df2\u7ecf\u5339\u914d\u7684\u90e8\u5206\u76f4\u63a5\u88ab\u4e22\u5f03\uff0c\u800c KMP \u7b97\u6cd5\u7684\u5173\u952e\u601d\u60f3\u5c31\u5728\u4e8e\uff1a \u5229\u7528\u5df2\u7ecf\u5339\u914d\u7684\u90e8\u5206\uff0c\u4fdd\u6301 \\(i\\) \u4e0d\u53d8\uff0c\u4fee\u6539 \\(j\\) \u4f7f\u5f97 \\(P\\) \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6709\u6548\u7684\u4f4d\u7f6e \u3002 \u627e\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e \u00b6 \u8ba8\u8bba\u4e00\u822c\u60c5\u5f62\uff0c\u8bbe \\(T=t_0,t_1,...,t_{n-1};\\ P=p_0,p_1,...,p_{m-1}\\) \uff0c\u5728\u5982\u56fe\u4f4d\u7f6e\u65f6\uff0c\u5339\u914d\u5931\u8d25\uff0c\u5373 \\(t_{i+j}\\ne p_j\\) \uff1a $$ \\tag{0} \\begin{array} \\quad t_0\\quad t_1\\quad\u00b7\u00b7\u00b7\\quad t_{i-1} &t_i &t_{i+1}\\quad&\u00b7\u00b7\u00b7\\quad &t_{i+j-1} &t_{i+j}\\quad\u00b7\u00b7\u00b7\\quad t_{n-1}\\ &| &| & &| &\\not{||}\\ &p_0 &p_1 \\quad&\u00b7\u00b7\u00b7&p_{j-1} &p_j \\end{array} $$ \u6b64\u65f6\u6709 $$ \\tag{1} t_i t_{i+1} \u00b7\u00b7\u00b7 t_{i+j-1}=p_0 p_1 \u00b7\u00b7\u00b7 p_{j-1} $$ \u5982\u679c\u6309\u7167\u66b4\u529b\u5339\u914d\uff0c\u5219\u4e0b\u4e00\u6b65\u5e94\u5339\u914d $$ \\notag t_{i+1} t_{i+2} \u00b7\u00b7\u00b7 t_{i+m}\\stackrel{?}{=}p_0 p_1 \u00b7\u00b7\u00b7 p_{m-1} $$ \u5982\u679c\u5728 \\(P\\) \u4e2d\uff0c\u6709 $$ \\tag{2} p_0 p_1 \u00b7\u00b7\u00b7~p_{j-2}\\ne p_1 p_2 \u00b7\u00b7\u00b7~p_{j-1} $$ \u5219\u6839\u636e \\((1)\\) \u5f0f\u548c \\((2)\\) \u5f0f\u53ef\u77e5\u8fd9\u4e00\u6b65\u5fc5\u7136\u5339\u914d\u5931\u8d25\uff1a $$ \\notag p_0 p_1 \u00b7\u00b7\u00b7~p_{j-2}\\ne p_1 p_2 \u00b7\u00b7\u00b7 p_{j-1}=t_{i+1} t_{i+2} \u00b7\u00b7\u00b7 t_{i+j-1} $$ \u4ece\u800c\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u6b65\u3002\u540c\u7406\u5982\u679c\u6709 $$ \\tag{3} p_0 p_1 \u00b7\u00b7\u00b7~p_{j-3}\\ne p_2 p_3 \u00b7\u00b7\u00b7~p_{j-1} $$ \u7ed3\u5408 \\((1)\\) \u5f0f\u548c \\((3)\\) \u5f0f\u4ecd\u7136\u6709 $$ \\notag p_0 p_1 \u00b7\u00b7\u00b7~p_{j-3}\\ne p_2 p_3 \u00b7\u00b7\u00b7 p_{j-1}=t_{i+2} t_{i+3} \u00b7\u00b7\u00b7 t_{i+j-1} $$ \u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u5b58\u5728\u503c \\(k\\) \uff0c\u4f7f\u5f97 $$ \\begin{align} \\tag{4} p_0 p_1 \u00b7\u00b7\u00b7~p_k&\\ne p_{j-k-1} p_{j-k} \u00b7\u00b7\u00b7~p_{j-1}\\ \\tag{5} \u4e14\\qquad p_0 p_1 \u00b7\u00b7\u00b7~p_ {k-1}&= p_{j-k} p_{j-k+1} \u00b7\u00b7\u00b7~p_{j-1} \\end{align} $$ \u7ed3\u5408 \\((0)\\) \u5f0f\u6709 $$ \\tag{6} \\begin{array} \\quad \u00b7\u00b7\u00b7\\quad&t_i\\quad&\u00b7\u00b7\u00b7\\quad&t_{i+j-k} &t_{i+j-k+1}\\quad&\u00b7\u00b7\u00b7\\quad &t_{i+j-1}\\quad &t_{i+j}\\quad&\u00b7\u00b7\u00b7\\ &| & &| &| & &| &|\\ &p_0 &\u00b7\u00b7\u00b7 &p_{j-k} &p_{j-k+1} &\u00b7\u00b7\u00b7 &p_{j-1} &??\\ & & &| &| & &| &|\\ \\Longrightarrow && \\quad &p_0 &p_1&\u00b7\u00b7\u00b7 &p_ {k-1} &p_k&\u00b7\u00b7\u00b7 \\end{array} $$ \u56e0\u6b64\u5f53\u5339\u914d\u5931\u8d25\uff08 \\(t_{i+j}\\ne p_j\\) \uff09\u65f6\uff0c\u4fdd\u6301 \\(T\\) \u4e0d\u52a8\uff0c\u5c06 \\(P\\) \u53f3\u79fb \\(j-k\\) \uff0c\u4f7f\u5f97 \\(t_{i+j-k}\\) \u548c \\(p_0\\) \u5bf9\u9f50,\uff0c\u7136\u540e\u4ece \\(t_ {i+j}\\) \u548c \\(p_k\\) \u5f00\u59cb\u5339\u914d\u5373\u53ef\u3002 \u6700\u957f\u516c\u5171\u524d\u7f00\u540e\u7f00 \u00b6 \u89c2\u5bdf \\((2)\\) \u5f0f\u3001 \\((3)\\) \u5f0f\u3001 \\((4)\\) \u5f0f\u548c \\((5)\\) \u5f0f\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u7b49\u5f0f\u5de6\u4fa7\u5747\u4e3a \\(p_0~p_1~\u00b7\u00b7\u00b7~p_{j-1}\\) \u7684**\u524d\u7f00\u5b50\u4e32**\uff0c\u7b49\u5f0f\u53f3\u4fa7\u5219\u662f\u5176**\u540e\u7f00\u5b50\u4e32**\uff0c\u4e24\u8005\u662f\u5426\u5339\u914d\u51b3\u5b9a\u4e86 \\(k\\) \u7684\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \\(k\\) \u5176\u5b9e\u5c31\u662f \\(p_j\\) \u524d\u7684\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u540e\u7f00\u7684\u957f\u5ea6\uff0c\u79f0\u4e3a \\(P\\) \u7684**\u7279\u5f81\u51fd\u6570**\uff0c\u8bb0\u4f5c \\(next(j)\\) \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a $$ \\notag next(j)=\\begin{cases} -1, &j=0\\ max{k | 0\\le k 0 \\end{cases} $$ \u5982\u4f55\u8ba1\u7b97\u51fa\u7279\u5f81\u51fd\u6570 \\(next(j)\\) \uff0c\u662f\u5b9e\u73b0 KMP \u7b97\u6cd5\u7684\u5173\u952e\uff0c\u4e0b\u9762\u4f7f\u7528\u9012\u63a8\u8ba1\u7b97 \\(next(j)\\) \u7684\u503c\u3002 \u8bbe\u5df2\u77e5 \\(next(j)=k\\) \uff0c\u5373\u6709 $$ \\tag{7}p_0 p_1 \u00b7\u00b7\u00b7~p_{k-1}= p_{j-k} p_{j-k+1} \u00b7\u00b7\u00b7~p_{j-1} $$ \uff08\u4e00\uff09\u5982\u679c \\(p_k=p_j\\) \uff0c\u7ed3\u5408 \\((7)\\) \u5f0f\uff0c\u6613\u77e5 $$ \\tag{8}p_0 p_1 \u00b7\u00b7\u00b7~p_{k}= p_{j-k} p_{j-k+1} \u00b7\u00b7\u00b7~p_{j} $$ \u5373 \\(next(j+1)=k+1=next(j)+1\\) ; \uff08\u4e8c\uff09\u5982\u679c \\(p_k\\ne p_j\\) \uff0c\u5219\u5728 \\(p_0~p_1~\u00b7\u00b7\u00b7~p_{k-1}\\) \u4e2d\u5bfb\u627e \\(h\\) \u4f7f\u5f97 $$ \\tag{9}p_0 p_1 \u00b7\u00b7\u00b7~p_{h-1}= p_{k-h} p_{k-h+1} \u00b7\u00b7\u00b7~p_{k-1} $$ \u5373 \\(next(k)=h\\) \uff1b \uff081\uff09\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684 \\(h\\) \uff0c\u7ed3\u5408 \\((7)\\) \u5f0f\u548c \\((9)\\) \u5f0f\uff0c $$ \\tag{10} p_0 p_1 \u00b7\u00b7\u00b7~p_{h-1}= p_{k-h} p_{k-h+1} \u00b7\u00b7\u00b7 p_{k-1}=p_{j-h} p_{j-h+1}~ \u00b7\u00b7\u00b7~p_{j-1} $$ \u518d\u5206\u4e24\u79cd\u60c5\u51b5\uff1a \u5982\u679c \\(p_h=p_j\\) \uff0c\u5219 \\(next(j+1)=h+1=next(k)+1=next(next(j))+1\\) \uff1b \u5982\u679c \\(p_h\\ne p_j\\) \uff0c\u5219\u5728 \\(p_0~p_1~\u00b7\u00b7\u00b7~p_{h-1}\\) \u4e2d\u7ee7\u7eed\u5bfb\u627e\u66f4\u5c0f\u7684 \\(t\\) \uff0c\u76f4\u81f3 \\(next(t)=-1\\) \uff1b \uff082\uff09\u5982\u679c \\(h\\) \u4e0d\u5b58\u5728\uff0c\u6b64\u65f6 \\(next(k)=-1\\) . \u603b\u7ed3 \u00b6 \u603b\u7684\u6765\u8bf4\uff0c\u5728\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u4e2d\uff0c\u4e00\u65e6\u5339\u914d\u5931\u8d25\uff0c\u6a21\u5f0f\u4e32\u4f1a\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u800c\u5728 KMP \u7b97\u6cd5\u901a\u8fc7\u9884\u5904\u7406\u6a21\u5f0f\u4e32\uff0c\u4f7f\u5f97\u5339\u914d\u5931\u8d25\u65f6\uff0c\u53ef\u4ee5\u5c06\u6a21\u5f0f\u4e32\u5411\u540e\u79fb\u52a8\u591a\u4f4d\uff0c\u4e0d\u7528\u91cd\u590d\u6bd4\u8f83\u4e4b\u524d\u7684\u90e8\u5206\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u9884\u5904\u7406\u65f6\u904d\u5386\u4e86\u4e00\u904d\u6a21\u5f0f\u4e32\uff0c\u5339\u914d\u65f6\u81f3\u591a\u904d\u5386\u4e00\u904d\u6587\u672c\u4e32\uff0c\u56e0\u6b64\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(T=O(m+n)\\) \uff0c\u5176\u4e2d \\(n\\) \u548c \\(m\\) \u5206\u522b\u4e3a\u6587\u672c\u4e32\u548c\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u3002\u9884\u5904\u7406\u540e\u9700\u8981\u4fdd\u5b58\u6a21\u5f0f\u4e32\u7684\u7279\u5f81\u51fd\u6570\uff0c\u56e0\u6b64\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(S=O(m)\\) . \u5b9e\u73b0 \u00b6 class PatternSearching { // \u8ba1\u7b97\u7279\u5f81\u51fd\u6570 int [] computeNext ( char [] pat ) { int j = 0 , k = - 1 , len = pat . length ; int [] next = new int [ len ] ; // \u521d\u59cb\u5316\u4e3a-1 next [ 0 ] = - 1 ; while ( j < len - 1 ) { // \u5df2\u77e5next[j]=k\uff0c\u6bd4\u8f83p[j]\u548cp[k] if ( k == - 1 || pat [ j ] == pat [ k ] ) { // \u5982\u679c\u76f8\u7b49\uff0cnext[j+1]=next[j]+1=k+1 k ++ ; j ++ ; next [ j ] = k ; } else { // \u5426\u5219\uff0c\u5bfb\u627enext[k]=h k = next [ k ] ; } } return next ; } // kmp \u7b97\u6cd5 int kmpSearch ( char [] txt , char [] pat ) { // \u8ba1\u7b97\u7279\u5f81\u51fd\u6570 int [] next = computeNext ( pat ); int pLen = pat . length ; int i = 0 , j = 0 ; while ( i < txt . length && j < pLen ) { if ( txt [ i ] == pat [ j ] ) { i ++ ; j ++ ; } else { // \u5339\u914d\u5931\u8d25\uff0c\u79fb\u52a8\u6a21\u5f0f\u4e32 if ( next [ j ] == - 1 ) { i ++ ; } else { j = next [ j ] ; } } } return j == pLen ? i - j : - 1 ; } } \u53c2\u8003 \u00b6 KMP Algorithm for Pattern Searching - GeeksforGeeks Knuth\u2013Morris\u2013Pratt algorithm - Wikipedia \uff08\u539f\u521b\uff09\u8be6\u89e3KMP\u7b97\u6cd5 - \u5b64~\u5f71 - \u535a\u5ba2\u56ed","title":"KMP\u7b97\u6cd5"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html#_1","text":"class PatternSearching { // \u66b4\u529b\u5339\u914d public int bruteForce ( char [] txt , char [] pat ) { int m = pat . length ; int imax = ( txt . length - m ); for ( int i = 0 ; i <= imax ; i ++ ) { // \u6bd4\u8f83 T[i,i+m-1] \u548c P[0,m-1] int j = 0 ; while ( j < m && txt [ i + j ] == pat [ j ] ) { j ++ ; } if ( j == m ) { return i ; } } return - 1 ; } }","title":"\u66b4\u529b\u5339\u914d"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html#kmp","text":"\u4e0a\u8ff0\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u4e2d\uff0c\u4e00\u65e6\u5339\u914d\u5931\u8d25\u65f6\uff0c \\(P\\) \u5c31\u4f1a\u53f3\u79fb\u4e00\u4f4d\uff08\u5373 \\(i=i+1\\) \uff09\uff0c\u7136\u540e\u4ece\u5934\u5f00\u59cb\u5339\u914d\uff08 \\(j=0\\) \uff09\uff0c\u5df2\u7ecf\u5339\u914d\u7684\u90e8\u5206\u76f4\u63a5\u88ab\u4e22\u5f03\uff0c\u800c KMP \u7b97\u6cd5\u7684\u5173\u952e\u601d\u60f3\u5c31\u5728\u4e8e\uff1a \u5229\u7528\u5df2\u7ecf\u5339\u914d\u7684\u90e8\u5206\uff0c\u4fdd\u6301 \\(i\\) \u4e0d\u53d8\uff0c\u4fee\u6539 \\(j\\) \u4f7f\u5f97 \\(P\\) \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6709\u6548\u7684\u4f4d\u7f6e \u3002","title":"KMP \u7b97\u6cd5"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html#_2","text":"\u8ba8\u8bba\u4e00\u822c\u60c5\u5f62\uff0c\u8bbe \\(T=t_0,t_1,...,t_{n-1};\\ P=p_0,p_1,...,p_{m-1}\\) \uff0c\u5728\u5982\u56fe\u4f4d\u7f6e\u65f6\uff0c\u5339\u914d\u5931\u8d25\uff0c\u5373 \\(t_{i+j}\\ne p_j\\) \uff1a $$ \\tag{0} \\begin{array} \\quad t_0\\quad t_1\\quad\u00b7\u00b7\u00b7\\quad t_{i-1} &t_i &t_{i+1}\\quad&\u00b7\u00b7\u00b7\\quad &t_{i+j-1} &t_{i+j}\\quad\u00b7\u00b7\u00b7\\quad t_{n-1}\\ &| &| & &| &\\not{||}\\ &p_0 &p_1 \\quad&\u00b7\u00b7\u00b7&p_{j-1} &p_j \\end{array} $$ \u6b64\u65f6\u6709 $$ \\tag{1} t_i t_{i+1} \u00b7\u00b7\u00b7 t_{i+j-1}=p_0 p_1 \u00b7\u00b7\u00b7 p_{j-1} $$ \u5982\u679c\u6309\u7167\u66b4\u529b\u5339\u914d\uff0c\u5219\u4e0b\u4e00\u6b65\u5e94\u5339\u914d $$ \\notag t_{i+1} t_{i+2} \u00b7\u00b7\u00b7 t_{i+m}\\stackrel{?}{=}p_0 p_1 \u00b7\u00b7\u00b7 p_{m-1} $$ \u5982\u679c\u5728 \\(P\\) \u4e2d\uff0c\u6709 $$ \\tag{2} p_0 p_1 \u00b7\u00b7\u00b7~p_{j-2}\\ne p_1 p_2 \u00b7\u00b7\u00b7~p_{j-1} $$ \u5219\u6839\u636e \\((1)\\) \u5f0f\u548c \\((2)\\) \u5f0f\u53ef\u77e5\u8fd9\u4e00\u6b65\u5fc5\u7136\u5339\u914d\u5931\u8d25\uff1a $$ \\notag p_0 p_1 \u00b7\u00b7\u00b7~p_{j-2}\\ne p_1 p_2 \u00b7\u00b7\u00b7 p_{j-1}=t_{i+1} t_{i+2} \u00b7\u00b7\u00b7 t_{i+j-1} $$ \u4ece\u800c\u53ef\u4ee5\u5ffd\u7565\u8fd9\u4e00\u6b65\u3002\u540c\u7406\u5982\u679c\u6709 $$ \\tag{3} p_0 p_1 \u00b7\u00b7\u00b7~p_{j-3}\\ne p_2 p_3 \u00b7\u00b7\u00b7~p_{j-1} $$ \u7ed3\u5408 \\((1)\\) \u5f0f\u548c \\((3)\\) \u5f0f\u4ecd\u7136\u6709 $$ \\notag p_0 p_1 \u00b7\u00b7\u00b7~p_{j-3}\\ne p_2 p_3 \u00b7\u00b7\u00b7 p_{j-1}=t_{i+2} t_{i+3} \u00b7\u00b7\u00b7 t_{i+j-1} $$ \u4ee5\u6b64\u7c7b\u63a8\uff0c\u76f4\u5230\u5b58\u5728\u503c \\(k\\) \uff0c\u4f7f\u5f97 $$ \\begin{align} \\tag{4} p_0 p_1 \u00b7\u00b7\u00b7~p_k&\\ne p_{j-k-1} p_{j-k} \u00b7\u00b7\u00b7~p_{j-1}\\ \\tag{5} \u4e14\\qquad p_0 p_1 \u00b7\u00b7\u00b7~p_ {k-1}&= p_{j-k} p_{j-k+1} \u00b7\u00b7\u00b7~p_{j-1} \\end{align} $$ \u7ed3\u5408 \\((0)\\) \u5f0f\u6709 $$ \\tag{6} \\begin{array} \\quad \u00b7\u00b7\u00b7\\quad&t_i\\quad&\u00b7\u00b7\u00b7\\quad&t_{i+j-k} &t_{i+j-k+1}\\quad&\u00b7\u00b7\u00b7\\quad &t_{i+j-1}\\quad &t_{i+j}\\quad&\u00b7\u00b7\u00b7\\ &| & &| &| & &| &|\\ &p_0 &\u00b7\u00b7\u00b7 &p_{j-k} &p_{j-k+1} &\u00b7\u00b7\u00b7 &p_{j-1} &??\\ & & &| &| & &| &|\\ \\Longrightarrow && \\quad &p_0 &p_1&\u00b7\u00b7\u00b7 &p_ {k-1} &p_k&\u00b7\u00b7\u00b7 \\end{array} $$ \u56e0\u6b64\u5f53\u5339\u914d\u5931\u8d25\uff08 \\(t_{i+j}\\ne p_j\\) \uff09\u65f6\uff0c\u4fdd\u6301 \\(T\\) \u4e0d\u52a8\uff0c\u5c06 \\(P\\) \u53f3\u79fb \\(j-k\\) \uff0c\u4f7f\u5f97 \\(t_{i+j-k}\\) \u548c \\(p_0\\) \u5bf9\u9f50,\uff0c\u7136\u540e\u4ece \\(t_ {i+j}\\) \u548c \\(p_k\\) \u5f00\u59cb\u5339\u914d\u5373\u53ef\u3002","title":"\u627e\u5230\u4e0b\u4e00\u4e2a\u4f4d\u7f6e"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html#_3","text":"\u89c2\u5bdf \\((2)\\) \u5f0f\u3001 \\((3)\\) \u5f0f\u3001 \\((4)\\) \u5f0f\u548c \\((5)\\) \u5f0f\uff0c\u5bb9\u6613\u53d1\u73b0\uff0c\u7b49\u5f0f\u5de6\u4fa7\u5747\u4e3a \\(p_0~p_1~\u00b7\u00b7\u00b7~p_{j-1}\\) \u7684**\u524d\u7f00\u5b50\u4e32**\uff0c\u7b49\u5f0f\u53f3\u4fa7\u5219\u662f\u5176**\u540e\u7f00\u5b50\u4e32**\uff0c\u4e24\u8005\u662f\u5426\u5339\u914d\u51b3\u5b9a\u4e86 \\(k\\) \u7684\u503c\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c \\(k\\) \u5176\u5b9e\u5c31\u662f \\(p_j\\) \u524d\u7684\u5b57\u7b26\u4e32\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u540e\u7f00\u7684\u957f\u5ea6\uff0c\u79f0\u4e3a \\(P\\) \u7684**\u7279\u5f81\u51fd\u6570**\uff0c\u8bb0\u4f5c \\(next(j)\\) \uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a $$ \\notag next(j)=\\begin{cases} -1, &j=0\\ max{k | 0\\le k 0 \\end{cases} $$ \u5982\u4f55\u8ba1\u7b97\u51fa\u7279\u5f81\u51fd\u6570 \\(next(j)\\) \uff0c\u662f\u5b9e\u73b0 KMP \u7b97\u6cd5\u7684\u5173\u952e\uff0c\u4e0b\u9762\u4f7f\u7528\u9012\u63a8\u8ba1\u7b97 \\(next(j)\\) \u7684\u503c\u3002 \u8bbe\u5df2\u77e5 \\(next(j)=k\\) \uff0c\u5373\u6709 $$ \\tag{7}p_0 p_1 \u00b7\u00b7\u00b7~p_{k-1}= p_{j-k} p_{j-k+1} \u00b7\u00b7\u00b7~p_{j-1} $$ \uff08\u4e00\uff09\u5982\u679c \\(p_k=p_j\\) \uff0c\u7ed3\u5408 \\((7)\\) \u5f0f\uff0c\u6613\u77e5 $$ \\tag{8}p_0 p_1 \u00b7\u00b7\u00b7~p_{k}= p_{j-k} p_{j-k+1} \u00b7\u00b7\u00b7~p_{j} $$ \u5373 \\(next(j+1)=k+1=next(j)+1\\) ; \uff08\u4e8c\uff09\u5982\u679c \\(p_k\\ne p_j\\) \uff0c\u5219\u5728 \\(p_0~p_1~\u00b7\u00b7\u00b7~p_{k-1}\\) \u4e2d\u5bfb\u627e \\(h\\) \u4f7f\u5f97 $$ \\tag{9}p_0 p_1 \u00b7\u00b7\u00b7~p_{h-1}= p_{k-h} p_{k-h+1} \u00b7\u00b7\u00b7~p_{k-1} $$ \u5373 \\(next(k)=h\\) \uff1b \uff081\uff09\u5982\u679c\u5b58\u5728\u8fd9\u6837\u7684 \\(h\\) \uff0c\u7ed3\u5408 \\((7)\\) \u5f0f\u548c \\((9)\\) \u5f0f\uff0c $$ \\tag{10} p_0 p_1 \u00b7\u00b7\u00b7~p_{h-1}= p_{k-h} p_{k-h+1} \u00b7\u00b7\u00b7 p_{k-1}=p_{j-h} p_{j-h+1}~ \u00b7\u00b7\u00b7~p_{j-1} $$ \u518d\u5206\u4e24\u79cd\u60c5\u51b5\uff1a \u5982\u679c \\(p_h=p_j\\) \uff0c\u5219 \\(next(j+1)=h+1=next(k)+1=next(next(j))+1\\) \uff1b \u5982\u679c \\(p_h\\ne p_j\\) \uff0c\u5219\u5728 \\(p_0~p_1~\u00b7\u00b7\u00b7~p_{h-1}\\) \u4e2d\u7ee7\u7eed\u5bfb\u627e\u66f4\u5c0f\u7684 \\(t\\) \uff0c\u76f4\u81f3 \\(next(t)=-1\\) \uff1b \uff082\uff09\u5982\u679c \\(h\\) \u4e0d\u5b58\u5728\uff0c\u6b64\u65f6 \\(next(k)=-1\\) .","title":"\u6700\u957f\u516c\u5171\u524d\u7f00\u540e\u7f00"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html#_4","text":"\u603b\u7684\u6765\u8bf4\uff0c\u5728\u66b4\u529b\u5339\u914d\u7b97\u6cd5\u4e2d\uff0c\u4e00\u65e6\u5339\u914d\u5931\u8d25\uff0c\u6a21\u5f0f\u4e32\u4f1a\u5411\u540e\u79fb\u52a8\u4e00\u4f4d\uff0c\u800c\u5728 KMP \u7b97\u6cd5\u901a\u8fc7\u9884\u5904\u7406\u6a21\u5f0f\u4e32\uff0c\u4f7f\u5f97\u5339\u914d\u5931\u8d25\u65f6\uff0c\u53ef\u4ee5\u5c06\u6a21\u5f0f\u4e32\u5411\u540e\u79fb\u52a8\u591a\u4f4d\uff0c\u4e0d\u7528\u91cd\u590d\u6bd4\u8f83\u4e4b\u524d\u7684\u90e8\u5206\u3002 \u6574\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u9884\u5904\u7406\u65f6\u904d\u5386\u4e86\u4e00\u904d\u6a21\u5f0f\u4e32\uff0c\u5339\u914d\u65f6\u81f3\u591a\u904d\u5386\u4e00\u904d\u6587\u672c\u4e32\uff0c\u56e0\u6b64\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(T=O(m+n)\\) \uff0c\u5176\u4e2d \\(n\\) \u548c \\(m\\) \u5206\u522b\u4e3a\u6587\u672c\u4e32\u548c\u6a21\u5f0f\u4e32\u7684\u957f\u5ea6\u3002\u9884\u5904\u7406\u540e\u9700\u8981\u4fdd\u5b58\u6a21\u5f0f\u4e32\u7684\u7279\u5f81\u51fd\u6570\uff0c\u56e0\u6b64\u7b97\u6cd5\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a \\(S=O(m)\\) .","title":"\u603b\u7ed3"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html#_5","text":"class PatternSearching { // \u8ba1\u7b97\u7279\u5f81\u51fd\u6570 int [] computeNext ( char [] pat ) { int j = 0 , k = - 1 , len = pat . length ; int [] next = new int [ len ] ; // \u521d\u59cb\u5316\u4e3a-1 next [ 0 ] = - 1 ; while ( j < len - 1 ) { // \u5df2\u77e5next[j]=k\uff0c\u6bd4\u8f83p[j]\u548cp[k] if ( k == - 1 || pat [ j ] == pat [ k ] ) { // \u5982\u679c\u76f8\u7b49\uff0cnext[j+1]=next[j]+1=k+1 k ++ ; j ++ ; next [ j ] = k ; } else { // \u5426\u5219\uff0c\u5bfb\u627enext[k]=h k = next [ k ] ; } } return next ; } // kmp \u7b97\u6cd5 int kmpSearch ( char [] txt , char [] pat ) { // \u8ba1\u7b97\u7279\u5f81\u51fd\u6570 int [] next = computeNext ( pat ); int pLen = pat . length ; int i = 0 , j = 0 ; while ( i < txt . length && j < pLen ) { if ( txt [ i ] == pat [ j ] ) { i ++ ; j ++ ; } else { // \u5339\u914d\u5931\u8d25\uff0c\u79fb\u52a8\u6a21\u5f0f\u4e32 if ( next [ j ] == - 1 ) { i ++ ; } else { j = next [ j ] ; } } } return j == pLen ? i - j : - 1 ; } }","title":"\u5b9e\u73b0"},{"location":"cs/algorithms/pattern-searching/knuth-morris-pratt-algorithm.html#_6","text":"KMP Algorithm for Pattern Searching - GeeksforGeeks Knuth\u2013Morris\u2013Pratt algorithm - Wikipedia \uff08\u539f\u521b\uff09\u8be6\u89e3KMP\u7b97\u6cd5 - \u5b64~\u5f71 - \u535a\u5ba2\u56ed","title":"\u53c2\u8003"},{"location":"cs/algorithms/pattern-searching/sunday-algorithm.html","text":"TODO \u95ee\u9898 \u00b6 \u7ed9\u5b9a\u6587\u672c\u5b57\u7b26\u4e32 \\(txt[0,n-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(T\\) \uff09 \u548c\u6a21\u5f0f\u5b57\u7b26\u4e32 \\(pat[0,m-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(P\\) \uff09\uff0c\u5728 \\(T\\) \u4e2d\u67e5\u627e \\(P\\) \uff08\u5047\u5b9a \\(n\\ge m\\ge 1\\) \uff09\u3002","title":"Sunday\u7b97\u6cd5"},{"location":"cs/algorithms/pattern-searching/sunday-algorithm.html#_1","text":"\u7ed9\u5b9a\u6587\u672c\u5b57\u7b26\u4e32 \\(txt[0,n-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(T\\) \uff09 \u548c\u6a21\u5f0f\u5b57\u7b26\u4e32 \\(pat[0,m-1]\\) \uff08\u4ee5\u4e0b\u79f0\u4e3a \\(P\\) \uff09\uff0c\u5728 \\(T\\) \u4e2d\u67e5\u627e \\(P\\) \uff08\u5047\u5b9a \\(n\\ge m\\ge 1\\) \uff09\u3002","title":"\u95ee\u9898"},{"location":"cs/algorithms/sorting/index.html","text":"\u95ee\u9898 \u00b6 \u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 \\(A[0..n-1]\\) \uff0c\u5176\u4e2d \\(n\\) \u4e3a\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5c06\u5176\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002 \u6392\u5e8f\u7b97\u6cd5 \u00b6 Selection Sort Bubble Sort \u63d2\u5165\u6392\u5e8f \u5f52\u5e76\u6392\u5e8f QuickSort - GeeksforGeeks \u5806\u6392\u5e8f Counting Sort Radix Sort Bucket Sort Shell Sort","title":"\u6392\u5e8f"},{"location":"cs/algorithms/sorting/index.html#_1","text":"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 \\(A[0..n-1]\\) \uff0c\u5176\u4e2d \\(n\\) \u4e3a\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u5c06\u5176\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002","title":"\u95ee\u9898"},{"location":"cs/algorithms/sorting/index.html#_2","text":"Selection Sort Bubble Sort \u63d2\u5165\u6392\u5e8f \u5f52\u5e76\u6392\u5e8f QuickSort - GeeksforGeeks \u5806\u6392\u5e8f Counting Sort Radix Sort Bucket Sort Shell Sort","title":"\u6392\u5e8f\u7b97\u6cd5"},{"location":"cs/algorithms/sorting/bucket-sort.html","text":"TODO Overview \u00b6 Bucket sort is mainly useful when input is uniformly distributed over a range. For array \\(A[0,n-1]\\) to be sorted, if there exist a finite number of buckets \\(B[0,m-1]\\) and \\(B=f(A)\\) which means meeting definition of a function, bucket sort is applicable. Algorithm \u00b6 Analyze distributions of the source array \\(A\\) to decide the mapping relationship \\(f\\) and values of buckets \\(B\\) . Iterate through \\(A\\) to move elements into corresponding buckets. Sort individual buckets, maybe with different sorting algorithms which decide the complexity of this algorithm. Concatenate all sorted buckets. Implementation \u00b6 Assume that \\(0\\le A_i<12\\) and all elements are integers. So we create 4 buckets, each with size of 3. def bucket_sort ( arr ): # depend on features of the arr bucket_num = 4 bucket_size = 3 buckets = [] for i in range ( bucket_num ): buckets . append ([]) # put array elements in different buckets for x in arr : bucket_index = int ( x / bucket_size ) buckets [ bucket_index ] . append ( j ) # sort individual buckets for i in range ( bucket_num ): buckets [ i ] = sort ( buckets [ i ]) # sorting algorithm to apply # concatenate the result k = 0 for i in range ( bucket_num ): for j in range ( len ( buckets [ i ])): arr [ k ] = buckets [ i ][ j ] arr += 1 return arr Time Complexity \u00b6 It depends on sorting algorithm chosen to sort individual buckets.","title":"\u6876\u6392\u5e8f"},{"location":"cs/algorithms/sorting/bucket-sort.html#overview","text":"Bucket sort is mainly useful when input is uniformly distributed over a range. For array \\(A[0,n-1]\\) to be sorted, if there exist a finite number of buckets \\(B[0,m-1]\\) and \\(B=f(A)\\) which means meeting definition of a function, bucket sort is applicable.","title":"Overview"},{"location":"cs/algorithms/sorting/bucket-sort.html#algorithm","text":"Analyze distributions of the source array \\(A\\) to decide the mapping relationship \\(f\\) and values of buckets \\(B\\) . Iterate through \\(A\\) to move elements into corresponding buckets. Sort individual buckets, maybe with different sorting algorithms which decide the complexity of this algorithm. Concatenate all sorted buckets.","title":"Algorithm"},{"location":"cs/algorithms/sorting/bucket-sort.html#implementation","text":"Assume that \\(0\\le A_i<12\\) and all elements are integers. So we create 4 buckets, each with size of 3. def bucket_sort ( arr ): # depend on features of the arr bucket_num = 4 bucket_size = 3 buckets = [] for i in range ( bucket_num ): buckets . append ([]) # put array elements in different buckets for x in arr : bucket_index = int ( x / bucket_size ) buckets [ bucket_index ] . append ( j ) # sort individual buckets for i in range ( bucket_num ): buckets [ i ] = sort ( buckets [ i ]) # sorting algorithm to apply # concatenate the result k = 0 for i in range ( bucket_num ): for j in range ( len ( buckets [ i ])): arr [ k ] = buckets [ i ][ j ] arr += 1 return arr","title":"Implementation"},{"location":"cs/algorithms/sorting/bucket-sort.html#time-complexity","text":"It depends on sorting algorithm chosen to sort individual buckets.","title":"Time Complexity"},{"location":"cs/algorithms/sorting/insertion-sort.html","text":"\u7b97\u6cd5 \u00b6 INSERTION-SORT(A) for j = 1 to A.length key = A[j] i = j - 1 while i > 0 and A[i] > key A[i+1] = A[i] i-- A[i + 1] = key \u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) .","title":"\u63d2\u5165\u6392\u5e8f"},{"location":"cs/algorithms/sorting/insertion-sort.html#_1","text":"INSERTION-SORT(A) for j = 1 to A.length key = A[j] i = j - 1 while i > 0 and A[i] > key A[i+1] = A[i] i-- A[i + 1] = key \u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(n^2)\\) .","title":"\u7b97\u6cd5"},{"location":"cs/algorithms/sorting/merge-sort.html","text":"\u7b97\u6cd5 \u00b6 \u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u4e2a \u5206\u6cbb\u7b97\u6cd5 . \u5c06\u6570\u7ec4\u5206\u4e3a\u4e24\u4e2a\u5b50\u6570\u7ec4\uff1b \u9012\u5f52\u8c03\u7528 \u5f52\u5e76\u6392\u5e8f \u6392\u5e8f\u4e24\u4e2a\u5b50\u6570\u7ec4\uff1b \u5408\u5e76\u4e24\u4e2a\u6392\u597d\u5e8f\u7684\u5b50\u6570\u7ec4\uff08\u8fd9\u662f\u7b97\u6cd5\u7684\u6838\u5fc3\uff09\u3002 \u5b9e\u73b0 \u00b6 def merge_sort ( arr : list ): if len ( arr ) <= 1 : return mid_idx = len ( arr ) // 2 left = arr [: mid_idx ] right = arr [ mid_idx :] merge_sort ( left ) merge_sort ( right ) # \u5408\u5e76\u4e24\u4e2a\u5b50\u6570\u7ec4 i = j = k = 0 while i < len ( left ) and j < len ( right ): if left [ i ] <= right [ j ]: arr [ k ] = left [ i ] i += 1 else : arr [ k ] = right [ j ] j += 1 k += 1 while i < len ( left ): arr [ k ] = left [ i ] i += 1 k += 1 while j < len ( right ): arr [ k ] = right [ j ] j += 1 k += 1 \u590d\u6742\u5ea6 \u00b6 \\[ \\begin{array}{rl} T(n)&=2\u00b7T(\\frac{n}{2})+O(n) \\\\ &=2^2\u00b7T(\\frac{n}{2^2})+2\u00b7O(n)+O(n) \\\\ &\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 \\\\ &=2^{\\lg{n}}\u00b7T(\\frac{n}{2^{\\lg{n}}})+O(n)\u00b7\\lg{n} \\\\ &=O(n\\lg n) \\end{array} \\] \u53c2\u8003 \u00b6 Merge Sort - GeeksforGeeks","title":"\u5f52\u5e76\u6392\u5e8f"},{"location":"cs/algorithms/sorting/merge-sort.html#_1","text":"\u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u4e2a \u5206\u6cbb\u7b97\u6cd5 . \u5c06\u6570\u7ec4\u5206\u4e3a\u4e24\u4e2a\u5b50\u6570\u7ec4\uff1b \u9012\u5f52\u8c03\u7528 \u5f52\u5e76\u6392\u5e8f \u6392\u5e8f\u4e24\u4e2a\u5b50\u6570\u7ec4\uff1b \u5408\u5e76\u4e24\u4e2a\u6392\u597d\u5e8f\u7684\u5b50\u6570\u7ec4\uff08\u8fd9\u662f\u7b97\u6cd5\u7684\u6838\u5fc3\uff09\u3002","title":"\u7b97\u6cd5"},{"location":"cs/algorithms/sorting/merge-sort.html#_2","text":"def merge_sort ( arr : list ): if len ( arr ) <= 1 : return mid_idx = len ( arr ) // 2 left = arr [: mid_idx ] right = arr [ mid_idx :] merge_sort ( left ) merge_sort ( right ) # \u5408\u5e76\u4e24\u4e2a\u5b50\u6570\u7ec4 i = j = k = 0 while i < len ( left ) and j < len ( right ): if left [ i ] <= right [ j ]: arr [ k ] = left [ i ] i += 1 else : arr [ k ] = right [ j ] j += 1 k += 1 while i < len ( left ): arr [ k ] = left [ i ] i += 1 k += 1 while j < len ( right ): arr [ k ] = right [ j ] j += 1 k += 1","title":"\u5b9e\u73b0"},{"location":"cs/algorithms/sorting/merge-sort.html#_3","text":"\\[ \\begin{array}{rl} T(n)&=2\u00b7T(\\frac{n}{2})+O(n) \\\\ &=2^2\u00b7T(\\frac{n}{2^2})+2\u00b7O(n)+O(n) \\\\ &\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 \\\\ &=2^{\\lg{n}}\u00b7T(\\frac{n}{2^{\\lg{n}}})+O(n)\u00b7\\lg{n} \\\\ &=O(n\\lg n) \\end{array} \\]","title":"\u590d\u6742\u5ea6"},{"location":"cs/algorithms/sorting/merge-sort.html#_4","text":"Merge Sort - GeeksforGeeks","title":"\u53c2\u8003"},{"location":"cs/algorithms/sorting/topological-sorting.html","text":"TODO \u53c2\u8003 \u00b6 Topological Sorting - GeeksforGeeks","title":"\u62d3\u6251\u6392\u5e8f"},{"location":"cs/algorithms/sorting/topological-sorting.html#_1","text":"Topological Sorting - GeeksforGeeks","title":"\u53c2\u8003"},{"location":"cs/data-structure/index.html","text":"\u76ee\u5f55 \u00b6 Array Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure \u4e8c\u53c9\u6811 Binary Search Tree \u5806 Hashing Data Structure Graph Data Structure And Algorithms Matrix Data Structure Advanced Data Structures","title":"\u6570\u636e\u7ed3\u6784"},{"location":"cs/data-structure/index.html#_1","text":"Array Data Structure Linked List Data Structure Stack Data Structure Queue Data Structure \u4e8c\u53c9\u6811 Binary Search Tree \u5806 Hashing Data Structure Graph Data Structure And Algorithms Matrix Data Structure Advanced Data Structures","title":"\u76ee\u5f55"},{"location":"cs/data-structure/binary-tree.html","text":"\u6982\u8ff0 \u00b6 \u4e8c\u53c9\u6811\u662f\u4e00\u79cd\u91cd\u8981\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u5176\u7279\u70b9\u662f\u6bcf\u4e2a\u7ed3\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u5b50\u6811\uff0c\u4e14\u6709\u5de6\u53f3\u4e4b\u5206\u3002 \u8868\u793a \u00b6 \u94fe\u8868 \u00b6 class TreeNode { int val ; TreeNode left ; TreeNode right ; } \u6570\u7ec4 \u00b6 \u7528\u6570\u7ec4 num[0,1,...,n-1] \u6765\u8868\u793a\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\uff0c nums[0] \u4e3a\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\uff0c\u5bf9\u4e8e\u4efb\u610f\u7236\u7ed3\u70b9 nums[i] \uff0c\u5176\u5de6\u53f3\u5b50\u7ed3\u70b9\u5206\u522b\u4e3a nums[2*i+1] \u548c nums[2*i+2] . \u904d\u5386 \u00b6 \u7ed9\u5b9a\u5982\u56fe\u6240\u793a\u4e8c\u53c9\u6811\uff1a \u66f4\u6539\u56fe\u7247 \u524d\u5e8f\u904d\u5386 VLR \u00b6 \u5148\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\uff0c\u518d\u8bbf\u95ee\u5176\u5de6\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u5176\u53f3\u5b50\u6811\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[1,2,3,4,5,6,7,8,9]. class BinaryTree { // \u9012\u5f52\u5b9e\u73b0 public void preorderTraversal ( TreeNode node , Consumer < Integer > action ) { if ( node != null ) { // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( node . val ); preorderTraversal ( node . left , action ); preorderTraversal ( node . right , action ); } } } class BinaryTree { // \u6808\u5b9e\u73b0 public void preorderTraversalWithStack ( TreeNode root , Consumer < Integer > action ) { Stack < TreeNode > stack = new Stack <> (); stack . push ( root ); while ( ! stack . isEmpty ()) { TreeNode current = stack . pop (); // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( current . val ); // \u5148\u540e\u5c06\u53f3\u5b50\u7ed3\u70b9\u548c\u5de6\u5b50\u7ed3\u70b9\u5165\u6808 if ( current . right != null ) { stack . push ( current . right ); } if ( current . left != null ) { stack . push ( current . left ); } } } } \u4e2d\u5e8f\u904d\u5386 LVR \u00b6 \u5148\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\uff0c\u6700\u540e\u8bbf\u95ee\u5176\u53f3\u5b50\u6811\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[3,2,,5,4,1,7,8,6,9]. class BinaryTree { // \u9012\u5f52\u5b9e\u73b0 public void inorderTraversal ( TreeNode node , Consumer < Integer > action ) { if ( node != null ) { inorderTraversal ( node . left , action ); // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( node . val ); inorderTraversal ( node . right , action ); } } } class BinaryTree { // \u6808\u5b9e\u73b0 public void inorderTraversalWithStack ( TreeNode root , Consumer < Integer > action ) { Stack < TreeNode > stack = new Stack <> (); TreeNode current = root ; do { // \u5c06\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u5de6\u8def\u5f84\uff08\u5305\u62ec\u81ea\u8eab\uff09\u5165\u6808\uff0c\u5373\u5148\u8fdb\u5165\u5de6\u5b50\u6811 while ( current != null ) { stack . push ( current ); current = current . left ; } if ( ! stack . isEmpty ()) { // \u9000\u6808\u5e76\u8bbf\u95ee\u7ed3\u70b9 current = stack . pop (); action . accept ( current . val ); // \u8f6c\u5411\u53f3\u5b50\u6811 current = current . right ; } } while ( current != null || ! stack . isEmpty ()); } } \u540e\u5e8f\u904d\u5386 LRV \u00b6 \u5148\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u5176\u53f3\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[3,5,4,2,8,7,9,6,1]. class BinaryTree { // \u9012\u5f52\u5b9e\u73b0 public void postorderTraversal ( TreeNode node , Consumer < Integer > action ) { if ( node != null ) { inorderTraversal ( node . left , action ); inorderTraversal ( node . right , action ); // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( node . val ); } } } class BinaryTree { // \u6808\u5b9e\u73b0 public void postorderTraversalWithStack ( TreeNode root , Consumer < Integer > action ) { TreeNode current = root ; // \u6807\u8bb0\u6700\u540e\u4e00\u6b21\u8bbf\u95ee\u7684\u7ed3\u70b9 TreeNode last = null ; Stack < TreeNode > stack = new Stack <> (); while ( ! stack . isEmpty () || current != null ) { // \u5148\u5c06\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u5de6\u8def\u5f84\u4e0a\u6240\u6709\u7ed3\u70b9\uff08\u5305\u62ec\u81ea\u8eab\uff09\u5165\u6808\uff0c\u5373\u5148\u8bbf\u95ee\u5de6\u5b50\u6811 while ( current != null ) { stack . push ( current ); current = current . left ; } current = stack . peek (); // \u5224\u65ad\u5f53\u524d\u7ed3\u70b9\u662f\u5426\u6709\u53f3\u5b50\u6811\uff0c\u6216\u8005\u53f3\u5b50\u6811\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee\u7ed3\u675f if ( current . right == null || current . right == last ) { // \u5982\u679c\u662f\uff0c\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( current . val ); // \u5c06\u5f53\u524d\u7ed3\u70b9\u51fa\u6808 stack . pop (); // \u8bb0\u4e0b\u8be5\u7ed3\u70b9 last = current ; current = null ; } else { // \u53f3\u5b50\u6811\u5b58\u5728\u4e14\u8bbf\u95ee\uff0c\u5219\u8f6c\u5411\u8bbf\u95ee\u53f3\u5b50\u6811 current = current . right ; } } } } \u5c42\u5e8f\u904d\u5386 \u00b6 \u6309\u5c42\u4ece\u5de6\u81f3\u53f3\u8bbf\u95ee\u7ed3\u70b9\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[1,2,6,3,4,7,9,5,6]. class BinaryTree { // \u961f\u5217\u5b9e\u73b0\uff08\u4e0d\u5206\u5c42\uff09 public void levelOrderTraversal ( TreeNode root , Consumer < Integer > action ) { if ( root == null ) { return ; } Queue < TreeNode > queue = new LinkedList <> (); queue . add ( root ); while ( ! queue . isEmpty ()) { // \u8bbf\u95ee\u961f\u5217\u524d\u7aef\u7684\u7ed3\u70b9 TreeNode current = queue . remove (); action . accept ( current . val ); // \u5c06\u8be5\u7ed3\u70b9\u5de6\u53f3\u5b50\u7ed3\u70b9\u8fdb\u961f if ( current . left != null ) { queue . add ( current . left ); } if ( current . right != null ) { queue . add ( current . right ); } } } // \u961f\u5217\u5b9e\u73b0\uff08\u5206\u5c42\uff09 public void traverseLevels ( TreeNode root , Consumer < List < Integer >> levelAction ) { if ( root == null ) { return ; } Queue < TreeNode > queue = new LinkedList <> (); queue . add ( root ); while ( ! queue . isEmpty ()) { // \u8bbf\u95ee\u5f53\u524d\u5c42\uff0c\u5e76\u5c06\u5de6\u53f3\u5b50\u7ed3\u70b9\u8fdb\u961f int size = queue . size (); List < Integer > level = new ArrayList <> ( size ); for ( int i = 0 ; i < size ; i ++ ) { TreeNode node = queue . remove (); level . add ( node . val ); if ( node . left != null ) { queue . add ( node . left ); } if ( node . right != null ) { queue . add ( node . right ); } } levelAction . accept ( level ); } } } \u53c2\u8003 \u00b6 Binary Tree Data Structure","title":"\u4e8c\u53c9\u6811"},{"location":"cs/data-structure/binary-tree.html#_1","text":"\u4e8c\u53c9\u6811\u662f\u4e00\u79cd\u91cd\u8981\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u5176\u7279\u70b9\u662f\u6bcf\u4e2a\u7ed3\u70b9\u6700\u591a\u53ea\u6709\u4e24\u4e2a\u5b50\u6811\uff0c\u4e14\u6709\u5de6\u53f3\u4e4b\u5206\u3002","title":"\u6982\u8ff0"},{"location":"cs/data-structure/binary-tree.html#_2","text":"","title":"\u8868\u793a"},{"location":"cs/data-structure/binary-tree.html#_3","text":"class TreeNode { int val ; TreeNode left ; TreeNode right ; }","title":"\u94fe\u8868"},{"location":"cs/data-structure/binary-tree.html#_4","text":"\u7528\u6570\u7ec4 num[0,1,...,n-1] \u6765\u8868\u793a\u4e00\u9897\u4e8c\u53c9\u6811\uff0c\u5176\u4e2d\uff0c nums[0] \u4e3a\u4e8c\u53c9\u6811\u7684\u6839\u7ed3\u70b9\uff0c\u5bf9\u4e8e\u4efb\u610f\u7236\u7ed3\u70b9 nums[i] \uff0c\u5176\u5de6\u53f3\u5b50\u7ed3\u70b9\u5206\u522b\u4e3a nums[2*i+1] \u548c nums[2*i+2] .","title":"\u6570\u7ec4"},{"location":"cs/data-structure/binary-tree.html#_5","text":"\u7ed9\u5b9a\u5982\u56fe\u6240\u793a\u4e8c\u53c9\u6811\uff1a \u66f4\u6539\u56fe\u7247","title":"\u904d\u5386"},{"location":"cs/data-structure/binary-tree.html#vlr","text":"\u5148\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\uff0c\u518d\u8bbf\u95ee\u5176\u5de6\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u5176\u53f3\u5b50\u6811\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u524d\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[1,2,3,4,5,6,7,8,9]. class BinaryTree { // \u9012\u5f52\u5b9e\u73b0 public void preorderTraversal ( TreeNode node , Consumer < Integer > action ) { if ( node != null ) { // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( node . val ); preorderTraversal ( node . left , action ); preorderTraversal ( node . right , action ); } } } class BinaryTree { // \u6808\u5b9e\u73b0 public void preorderTraversalWithStack ( TreeNode root , Consumer < Integer > action ) { Stack < TreeNode > stack = new Stack <> (); stack . push ( root ); while ( ! stack . isEmpty ()) { TreeNode current = stack . pop (); // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( current . val ); // \u5148\u540e\u5c06\u53f3\u5b50\u7ed3\u70b9\u548c\u5de6\u5b50\u7ed3\u70b9\u5165\u6808 if ( current . right != null ) { stack . push ( current . right ); } if ( current . left != null ) { stack . push ( current . left ); } } } }","title":"\u524d\u5e8f\u904d\u5386 VLR"},{"location":"cs/data-structure/binary-tree.html#lvr","text":"\u5148\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\uff0c\u6700\u540e\u8bbf\u95ee\u5176\u53f3\u5b50\u6811\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u4e2d\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[3,2,,5,4,1,7,8,6,9]. class BinaryTree { // \u9012\u5f52\u5b9e\u73b0 public void inorderTraversal ( TreeNode node , Consumer < Integer > action ) { if ( node != null ) { inorderTraversal ( node . left , action ); // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( node . val ); inorderTraversal ( node . right , action ); } } } class BinaryTree { // \u6808\u5b9e\u73b0 public void inorderTraversalWithStack ( TreeNode root , Consumer < Integer > action ) { Stack < TreeNode > stack = new Stack <> (); TreeNode current = root ; do { // \u5c06\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u5de6\u8def\u5f84\uff08\u5305\u62ec\u81ea\u8eab\uff09\u5165\u6808\uff0c\u5373\u5148\u8fdb\u5165\u5de6\u5b50\u6811 while ( current != null ) { stack . push ( current ); current = current . left ; } if ( ! stack . isEmpty ()) { // \u9000\u6808\u5e76\u8bbf\u95ee\u7ed3\u70b9 current = stack . pop (); action . accept ( current . val ); // \u8f6c\u5411\u53f3\u5b50\u6811 current = current . right ; } } while ( current != null || ! stack . isEmpty ()); } }","title":"\u4e2d\u5e8f\u904d\u5386 LVR"},{"location":"cs/data-structure/binary-tree.html#lrv","text":"\u5148\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\u7684\u5de6\u5b50\u6811\uff0c\u518d\u8bbf\u95ee\u5176\u53f3\u5b50\u6811\uff0c\u6700\u540e\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u540e\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[3,5,4,2,8,7,9,6,1]. class BinaryTree { // \u9012\u5f52\u5b9e\u73b0 public void postorderTraversal ( TreeNode node , Consumer < Integer > action ) { if ( node != null ) { inorderTraversal ( node . left , action ); inorderTraversal ( node . right , action ); // \u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( node . val ); } } } class BinaryTree { // \u6808\u5b9e\u73b0 public void postorderTraversalWithStack ( TreeNode root , Consumer < Integer > action ) { TreeNode current = root ; // \u6807\u8bb0\u6700\u540e\u4e00\u6b21\u8bbf\u95ee\u7684\u7ed3\u70b9 TreeNode last = null ; Stack < TreeNode > stack = new Stack <> (); while ( ! stack . isEmpty () || current != null ) { // \u5148\u5c06\u5f53\u524d\u7ed3\u70b9\u7684\u6700\u5de6\u8def\u5f84\u4e0a\u6240\u6709\u7ed3\u70b9\uff08\u5305\u62ec\u81ea\u8eab\uff09\u5165\u6808\uff0c\u5373\u5148\u8bbf\u95ee\u5de6\u5b50\u6811 while ( current != null ) { stack . push ( current ); current = current . left ; } current = stack . peek (); // \u5224\u65ad\u5f53\u524d\u7ed3\u70b9\u662f\u5426\u6709\u53f3\u5b50\u6811\uff0c\u6216\u8005\u53f3\u5b50\u6811\u662f\u5426\u5df2\u7ecf\u8bbf\u95ee\u7ed3\u675f if ( current . right == null || current . right == last ) { // \u5982\u679c\u662f\uff0c\u8bbf\u95ee\u5f53\u524d\u7ed3\u70b9 action . accept ( current . val ); // \u5c06\u5f53\u524d\u7ed3\u70b9\u51fa\u6808 stack . pop (); // \u8bb0\u4e0b\u8be5\u7ed3\u70b9 last = current ; current = null ; } else { // \u53f3\u5b50\u6811\u5b58\u5728\u4e14\u8bbf\u95ee\uff0c\u5219\u8f6c\u5411\u8bbf\u95ee\u53f3\u5b50\u6811 current = current . right ; } } } }","title":"\u540e\u5e8f\u904d\u5386 LRV"},{"location":"cs/data-structure/binary-tree.html#_6","text":"\u6309\u5c42\u4ece\u5de6\u81f3\u53f3\u8bbf\u95ee\u7ed3\u70b9\u3002\u56fe\u793a\u4e8c\u53c9\u6811\u7684\u5c42\u5e8f\u904d\u5386\u7ed3\u679c\u4e3a[1,2,6,3,4,7,9,5,6]. class BinaryTree { // \u961f\u5217\u5b9e\u73b0\uff08\u4e0d\u5206\u5c42\uff09 public void levelOrderTraversal ( TreeNode root , Consumer < Integer > action ) { if ( root == null ) { return ; } Queue < TreeNode > queue = new LinkedList <> (); queue . add ( root ); while ( ! queue . isEmpty ()) { // \u8bbf\u95ee\u961f\u5217\u524d\u7aef\u7684\u7ed3\u70b9 TreeNode current = queue . remove (); action . accept ( current . val ); // \u5c06\u8be5\u7ed3\u70b9\u5de6\u53f3\u5b50\u7ed3\u70b9\u8fdb\u961f if ( current . left != null ) { queue . add ( current . left ); } if ( current . right != null ) { queue . add ( current . right ); } } } // \u961f\u5217\u5b9e\u73b0\uff08\u5206\u5c42\uff09 public void traverseLevels ( TreeNode root , Consumer < List < Integer >> levelAction ) { if ( root == null ) { return ; } Queue < TreeNode > queue = new LinkedList <> (); queue . add ( root ); while ( ! queue . isEmpty ()) { // \u8bbf\u95ee\u5f53\u524d\u5c42\uff0c\u5e76\u5c06\u5de6\u53f3\u5b50\u7ed3\u70b9\u8fdb\u961f int size = queue . size (); List < Integer > level = new ArrayList <> ( size ); for ( int i = 0 ; i < size ; i ++ ) { TreeNode node = queue . remove (); level . add ( node . val ); if ( node . left != null ) { queue . add ( node . left ); } if ( node . right != null ) { queue . add ( node . right ); } } levelAction . accept ( level ); } } }","title":"\u5c42\u5e8f\u904d\u5386"},{"location":"cs/data-structure/binary-tree.html#_7","text":"Binary Tree Data Structure","title":"\u53c2\u8003"},{"location":"cs/data-structure/disjoint.html","text":"TODO \u95ee\u9898 \u00b6 \u89c4\u5b9a\uff1a\u5982\u679ca\u548cb\u662f\u4eb2\u621a\uff0cb\u548cc\u662f\u4eb2\u621a\uff0c\u5219a\u548cc\u4e5f\u662f\u4eb2\u621a\uff0c\u5373\u4eb2\u621a\u5173\u7cfb\u5177\u6709\u4f20\u9012\u6027\u3002\u73b0\u5728\u7ed9\u5b9a\u4e00\u7ec4\u4eb2\u621a\u5173\u7cfb\uff0c\u6c42\u5176\u4e2d\u4efb\u610f\u7684\u4e24\u4ebax\u548cy\u662f\u5426\u662f\u4eb2\u621a\uff1f \u5e76\u67e5\u96c6 \u00b6 \u8003\u8651\u5efa\u7acb\u96c6\u5408A\u5305\u62eca\u7684\u4eb2\u621a\uff0c\u96c6\u5408B\u5305\u62ecb\u7684\u4eb2\u621a\uff0c\u5982\u679ca\u548cb\u662f\u4eb2\u621a\uff0c\u5219\u5c06\u96c6\u5408A\u548cB\u5408\u5e76\uff0c\u5224\u65adx\u548cy\u662f\u5426\u662f\u4eb2\u621a\u5373\u5224\u65adx\u548cy\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\u4e3a\u4e86\u5b8c\u6210\u4ee5\u4e0a\u7684\u64cd\u4f5c\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u4f7f\u7528\u5e76\u67e5\u96c6\u4e86\u3002 \u5e76\u67e5\u96c6\u7684\u91cd\u8981\u601d\u60f3\u5728\u4e8e\uff0c \u9009\u5b9a\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u6574\u4e2a\u96c6\u5408 \uff0c\u5373\u96c6\u5408\u7684\u6839\u5143\u7d20\u3002\u56f4\u7ed5\u6839\u5143\u7d20\uff0c\u5e76\u67e5\u96c6\u9700\u8981\u5b9e\u73b0\u4e24\u4e2a\u64cd\u4f5c\uff1a \u67e5\u627e-Find : \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5143\u7d20x\uff0c\u627e\u51fa\u5176\u6240\u5728\u7684\u96c6\u5408\uff08\u4ee5\u96c6\u5408\u7684\u6839\u5143\u7d20\u8868\u793a\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8f7b\u677e\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u3002 \u5408\u5e76-Union : \u5408\u5e76\u4e24\u4e2a\u76f8\u5173\u7684\u96c6\u5408\u4e3a\u540c\u4e00\u4e2a\u96c6\u5408\u3002 /** * \u4f7f\u7528\u6811\u7ed3\u6784\u8868\u793a\u4e00\u4e2a\u96c6\u5408\uff0c\u6811\u7684\u6839\u7ed3\u70b9\u5373\u96c6\u5408\u7684\u6839\u5143\u7d20\u3002 */ public class MergeFindSet { // \u5bf9\u4e8e\u5143\u7d20i\uff0cparents[i]\u6307\u5411\u5176\u7236\u5143\u7d20 // \u5982\u679c\u662f\u6839\u5143\u7d20\uff0c\u5219\u6307\u5411\u81ea\u8eab private final int [] parents ; // \u8bb0\u5f55\u6811\u7684\u9ad8\u5ea6\uff0c\u4f7f\u5f97\u5728\u5408\u5e76\u65f6\uff0c\u4fdd\u6301\u6811\u7684\u9ad8\u5ea6\u8f83\u4f4e\uff0c\u4ee5\u63d0\u9ad8\u67e5\u8be2\u6548\u7387 private final int [] height ; // initialize every single element as a set public MergeFindSet ( int capacity ) { parents = new int [ capacity ] ; height = new int [ capacity ] ; for ( int i = 0 ; i < capacity ; i ++ ) { parents [ i ] = i ; height [ i ] = 1 ; } } // \u67e5\u627e\u6839\u5143\u7d20\uff0c\u5373\u6240\u5728\u6811\u7684\u6839\u7ed3\u70b9 private int find ( int x ) { int p = x ; while ( p != parents [ p ] ) { p = parents [ p ] ; } return p ; } // \u5408\u5e76\u4e24\u4e2a\u96c6\u5408 public void join ( int a , int b ) { int ap = find ( a ); int bp = find ( b ); if ( height [ ap ] > height [ bp ] ) { parents [ bp ] = ap ; height [ bp ] = 0 ; } else { parents [ ap ] = bp ; if ( height [ ap ] == height [ bp ] ) { height [ bp ]++ ; } height [ ap ] = 0 ; } } // \u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u76f8\u5173 public boolean isRelated ( int a , int b ) { return find ( a ) == find ( b ); } } References \u00b6 Disjoint Set (Or Union-Find) | Set 1 (Detect Cycle in an Undirected Graph) - GeeksforGeeks .","title":"\u5e76\u67e5\u96c6"},{"location":"cs/data-structure/disjoint.html#_1","text":"\u89c4\u5b9a\uff1a\u5982\u679ca\u548cb\u662f\u4eb2\u621a\uff0cb\u548cc\u662f\u4eb2\u621a\uff0c\u5219a\u548cc\u4e5f\u662f\u4eb2\u621a\uff0c\u5373\u4eb2\u621a\u5173\u7cfb\u5177\u6709\u4f20\u9012\u6027\u3002\u73b0\u5728\u7ed9\u5b9a\u4e00\u7ec4\u4eb2\u621a\u5173\u7cfb\uff0c\u6c42\u5176\u4e2d\u4efb\u610f\u7684\u4e24\u4ebax\u548cy\u662f\u5426\u662f\u4eb2\u621a\uff1f","title":"\u95ee\u9898"},{"location":"cs/data-structure/disjoint.html#_2","text":"\u8003\u8651\u5efa\u7acb\u96c6\u5408A\u5305\u62eca\u7684\u4eb2\u621a\uff0c\u96c6\u5408B\u5305\u62ecb\u7684\u4eb2\u621a\uff0c\u5982\u679ca\u548cb\u662f\u4eb2\u621a\uff0c\u5219\u5c06\u96c6\u5408A\u548cB\u5408\u5e76\uff0c\u5224\u65adx\u548cy\u662f\u5426\u662f\u4eb2\u621a\u5373\u5224\u65adx\u548cy\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\u3002\u4e3a\u4e86\u5b8c\u6210\u4ee5\u4e0a\u7684\u64cd\u4f5c\uff0c\u6b64\u65f6\u5c31\u9700\u8981\u4f7f\u7528\u5e76\u67e5\u96c6\u4e86\u3002 \u5e76\u67e5\u96c6\u7684\u91cd\u8981\u601d\u60f3\u5728\u4e8e\uff0c \u9009\u5b9a\u4e00\u4e2a\u5143\u7d20\u4ee3\u8868\u6574\u4e2a\u96c6\u5408 \uff0c\u5373\u96c6\u5408\u7684\u6839\u5143\u7d20\u3002\u56f4\u7ed5\u6839\u5143\u7d20\uff0c\u5e76\u67e5\u96c6\u9700\u8981\u5b9e\u73b0\u4e24\u4e2a\u64cd\u4f5c\uff1a \u67e5\u627e-Find : \u5bf9\u4e8e\u7ed9\u5b9a\u7684\u5143\u7d20x\uff0c\u627e\u51fa\u5176\u6240\u5728\u7684\u96c6\u5408\uff08\u4ee5\u96c6\u5408\u7684\u6839\u5143\u7d20\u8868\u793a\uff09\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u8f7b\u677e\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u3002 \u5408\u5e76-Union : \u5408\u5e76\u4e24\u4e2a\u76f8\u5173\u7684\u96c6\u5408\u4e3a\u540c\u4e00\u4e2a\u96c6\u5408\u3002 /** * \u4f7f\u7528\u6811\u7ed3\u6784\u8868\u793a\u4e00\u4e2a\u96c6\u5408\uff0c\u6811\u7684\u6839\u7ed3\u70b9\u5373\u96c6\u5408\u7684\u6839\u5143\u7d20\u3002 */ public class MergeFindSet { // \u5bf9\u4e8e\u5143\u7d20i\uff0cparents[i]\u6307\u5411\u5176\u7236\u5143\u7d20 // \u5982\u679c\u662f\u6839\u5143\u7d20\uff0c\u5219\u6307\u5411\u81ea\u8eab private final int [] parents ; // \u8bb0\u5f55\u6811\u7684\u9ad8\u5ea6\uff0c\u4f7f\u5f97\u5728\u5408\u5e76\u65f6\uff0c\u4fdd\u6301\u6811\u7684\u9ad8\u5ea6\u8f83\u4f4e\uff0c\u4ee5\u63d0\u9ad8\u67e5\u8be2\u6548\u7387 private final int [] height ; // initialize every single element as a set public MergeFindSet ( int capacity ) { parents = new int [ capacity ] ; height = new int [ capacity ] ; for ( int i = 0 ; i < capacity ; i ++ ) { parents [ i ] = i ; height [ i ] = 1 ; } } // \u67e5\u627e\u6839\u5143\u7d20\uff0c\u5373\u6240\u5728\u6811\u7684\u6839\u7ed3\u70b9 private int find ( int x ) { int p = x ; while ( p != parents [ p ] ) { p = parents [ p ] ; } return p ; } // \u5408\u5e76\u4e24\u4e2a\u96c6\u5408 public void join ( int a , int b ) { int ap = find ( a ); int bp = find ( b ); if ( height [ ap ] > height [ bp ] ) { parents [ bp ] = ap ; height [ bp ] = 0 ; } else { parents [ ap ] = bp ; if ( height [ ap ] == height [ bp ] ) { height [ bp ]++ ; } height [ ap ] = 0 ; } } // \u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u76f8\u5173 public boolean isRelated ( int a , int b ) { return find ( a ) == find ( b ); } }","title":"\u5e76\u67e5\u96c6"},{"location":"cs/data-structure/disjoint.html#references","text":"Disjoint Set (Or Union-Find) | Set 1 (Detect Cycle in an Undirected Graph) - GeeksforGeeks .","title":"References"},{"location":"cs/data-structure/heap.html","text":"\u6982\u8ff0 \u00b6 \u5806\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u7528\u6570\u7ec4\u8868\u793a\u3002\u8bbe\u8868\u793a\u5806\u7684\u6570\u7ec4\u4e3a \\(A[0..n-1]\\) \uff0c\u5176\u4e2d \\(n\\) \u4e3a\u8be5\u5806\u7684\u5927\u5c0f\uff0c \\(A[0]\\) \u4e3a\u5806\u7684\u6839\u7ed3\u70b9\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9 \\(i\\) \uff0c\u5bb9\u6613\u8ba1\u7b97\u5f97\u5230\u5b83\u7684\u7236\u7ed3\u70b9\u548c\u5de6\u53f3\u5b50\u7ed3\u70b9\uff1a Heap.java int parent ( int i ) { return ( i - 1 ) >> 1 ; } int left ( int i ) { return ( i << 1 ) + 1 ; } int right ( int i ) { return ( i + 1 ) << 1 ; } \u5806\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u5f62\u5f0f\uff1a \u6700\u5927\u5806\uff1a\u9664\u6839\u7ed3\u70b9\u5916\u7684\u4efb\u610f\u7ed3\u70b9\u7684\u503c\u603b\u662f\u4e0d\u5927\u4e8e\u5176\u7236\u7ed3\u70b9\uff0c\u5176\u6839\u7ed3\u70b9\u503c\u6700\u5927\uff0c\u5373\u5f53 \\(0\\lt i\\lt n\\) \u65f6\uff0c\u6709 \\[ A[parent(i)] \\ge A[i] \\] \u6700\u5c0f\u5806\uff1a\u9664\u6839\u7ed3\u70b9\u5916\u7684\u4efb\u610f\u7ed3\u70b9\u7684\u503c\u603b\u662f\u4e0d\u5c0f\u4e8e\u5176\u7236\u7ed3\u70b9\uff0c\u5176\u6839\u7ed3\u70b9\u503c\u6700\u5c0f\uff0c\u5373\u5f53 \\(0\\lt i\\lt n\\) \u65f6\uff0c\u6709 \\[ A[parent(i)] \\le A[i] \\] \u4ee5\u4e0b\u4ee5\u6700\u5927\u5806\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5176\u5982\u4f55\u5b9e\u73b0\u3002 \u7ef4\u62a4\u5806\u7684\u6027\u8d28 \u00b6 heapify \u7528\u4e8e\u7ef4\u62a4\u5806\u7684\u6027\u8d28\u3002\u5176\u8f93\u5165\u4e3a i \uff0c\u8868\u793a\u4ee5 \\(A[i]\\) \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5728\u8c03\u7528 heapify \u65f6\uff0c\u5047\u8bbe\u5176\u5de6\u5b50\u6811\uff08\u6839\u7ed3\u70b9\u4e3a \\(A[left(i)]\\) \uff09\u548c\u53f3\u5b50\u6811\uff08\u6839\u7ed3\u70b9\u4e3a \\(A[right(i)]\\) \uff09\u5747\u4e3a\u6700\u5927\u5806\uff0c\u901a\u8fc7\u8ba9 \\(A[i]\\) \u5728\u5806\u4e2d\u9010\u7ea7\u4e0b\u964d\uff0c\u4f7f\u5f97\u4ee5 \\(A[i]\\) \u4e3a\u6839\u7684\u5b50\u6811\u6ee1\u8db3\u6700\u5927\u5806\u7684\u6027\u8d28\u3002 void heapify ( int [] array , int size , int i ) { while ( true ) { int l = left ( i ), r = right ( i ), largest = i ; if ( l < size && array [ l ] > array [ largest ] ) { largest = l ; } if ( r < size && array [ r ] > array [ largest ] ) { largest = r ; } if ( largest == i ) { break ; } swap ( array , largest , i ); i = largest ; } } \u6613\u77e5 heapify \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(h)\\) \uff0c \\(h\\) \u4e3a\u4ee5 \\(A[i]\\) \u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u7684\u9ad8\u5ea6\u3002 \u5efa\u5806 \u00b6 \u5bf9\u4e8e\u8f93\u5165\u7684\u6570\u7ec4 \\(A\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u5f0f\uff08\u5f52\u7eb3\u6cd5\uff09\u8c03\u7528 heapify \u5c06 \\(A\\) \u8f6c\u4e3a\u6700\u5927\u5806\u3002\u56e0\u4e3a\u53f6\u5b50\u7ed3\u70b9\u663e\u7136\u6210\u7acb\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002 void buildHeap ( int [] array ) { for ( int i = array . length / 2 - 1 ; i >= 0 ; i -- ) { heapify ( array , array . length , i ); } } \u6613\u77e5\u5305\u542b \\(n\\) \u4e2a\u5143\u7d20\u7684\u5806\u7684\u9ad8\u5ea6\u4e3a \\(\\lfloor \\lg n\\rfloor\\) \uff0c\u800c\u9ad8\u5ea6\u4e3a \\(h\\) \u7684\u5b50\u5806\u6700\u591a\u6709 \\(\\frac{n}{2^{h+1}}\\) \u4e2a\uff0c\u56e0\u6b64 buildHeap \u7684\u8fd0\u884c\u65f6\u95f4\u4e3a \\[ \\sum_{h=0}^{\\lfloor \\lg n\\rfloor}\\lceil \\frac{n}{2^{h+1}}\\rceil O(h) =O(n\\sum_{h=0}^{\\lfloor \\lg n\\rfloor}\\frac{h}{2^h}) \\] \u7531 \u6c42\u548c\u516c\u5f0f \u6613\u77e5 \\[ \\sum_{h=0}^{\\infty}\\frac{h}{2^h}=2 \\] \u4ece\u800c\u53ef\u5f97 buildHeap \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\[ O(n\\sum_{h=0}^{\\lfloor \\lg n\\rfloor}\\frac{h}{2^h}) =O(n\\sum_{h=0}^{\\infty}\\frac{h}{2^h}) =O(n) \\] \u5373\u5728\u7ebf\u6027\u65f6\u95f4\u5185\uff0c\u628a\u4e00\u4e2a\u65e0\u5e8f\u6570\u7ec4\u6784\u9020\u4e3a\u4e00\u4e2a\u6700\u5927\u5806\u3002 \u5806\u6392\u5e8f \u00b6 \u521d\u59cb\u65f6\uff0c\u5229\u7528 buildHeap \u5c06\u6570\u7ec4 \\(A\\) \u6784\u9020\u4e3a\u4e00\u4e2a\u6700\u5927\u5806\uff0c\u6b64\u65f6\uff0c\u6839\u7ed3\u70b9 \\(A[0]\\) \u4e3a\u6700\u5927\u503c\uff1b \u5c06 \\(A[0]\\) \u548c\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u4ea4\u6362\uff0c\u5219\u6700\u5927\u503c\u88ab\u653e\u5230\u4e86\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\uff1b \u7136\u540e\u5c06\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u4ece\u5806\u4e2d\u53bb\u6389\uff0c\u5269\u4f59\u7ed3\u70b9\u4e2d\uff0c\u9664\u6839\u7ed3\u70b9 \\(A[0]\\) \u5916\u4f9d\u7136\u662f\u6700\u5927\u5806\uff0c\u8c03\u7528 heapify \u5c06\u5269\u4f59\u7ed3\u70b9\u91cd\u65b0\u6784\u9020\u4e3a\u4e00\u4e2a\u6700\u5927\u5806\uff1b \u91cd\u590d\u4e0a\u8ff0\u4e24\u6b65\uff0c\u76f4\u81f3\u5806\u4e2d\u53ea\u5269\u4e24\u4e2a\u5143\u7d20\u3002 void heapSort ( int [] array ) { buildHeap ( array ); for ( int i = array . length - 1 ; i > 0 ; i -- ) { swap ( array , i , 0 ); heapify ( array , i , 0 ); } } \u5176\u8fd0\u884c\u65f6\u95f4\u4e3a \\[ O(n)+(n-1)O(\\lg n)=O(n\\lg n) \\] \u53c2\u8003 \u00b6 \u7b97\u6cd5\u5bfc\u8bba. \u539f\u4e66\u7b2c3\u7248. \u7b2c6\u7ae0.","title":"\u5806"},{"location":"cs/data-structure/heap.html#_1","text":"\u5806\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u7528\u6570\u7ec4\u8868\u793a\u3002\u8bbe\u8868\u793a\u5806\u7684\u6570\u7ec4\u4e3a \\(A[0..n-1]\\) \uff0c\u5176\u4e2d \\(n\\) \u4e3a\u8be5\u5806\u7684\u5927\u5c0f\uff0c \\(A[0]\\) \u4e3a\u5806\u7684\u6839\u7ed3\u70b9\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7ed3\u70b9 \\(i\\) \uff0c\u5bb9\u6613\u8ba1\u7b97\u5f97\u5230\u5b83\u7684\u7236\u7ed3\u70b9\u548c\u5de6\u53f3\u5b50\u7ed3\u70b9\uff1a Heap.java int parent ( int i ) { return ( i - 1 ) >> 1 ; } int left ( int i ) { return ( i << 1 ) + 1 ; } int right ( int i ) { return ( i + 1 ) << 1 ; } \u5806\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\u5f62\u5f0f\uff1a \u6700\u5927\u5806\uff1a\u9664\u6839\u7ed3\u70b9\u5916\u7684\u4efb\u610f\u7ed3\u70b9\u7684\u503c\u603b\u662f\u4e0d\u5927\u4e8e\u5176\u7236\u7ed3\u70b9\uff0c\u5176\u6839\u7ed3\u70b9\u503c\u6700\u5927\uff0c\u5373\u5f53 \\(0\\lt i\\lt n\\) \u65f6\uff0c\u6709 \\[ A[parent(i)] \\ge A[i] \\] \u6700\u5c0f\u5806\uff1a\u9664\u6839\u7ed3\u70b9\u5916\u7684\u4efb\u610f\u7ed3\u70b9\u7684\u503c\u603b\u662f\u4e0d\u5c0f\u4e8e\u5176\u7236\u7ed3\u70b9\uff0c\u5176\u6839\u7ed3\u70b9\u503c\u6700\u5c0f\uff0c\u5373\u5f53 \\(0\\lt i\\lt n\\) \u65f6\uff0c\u6709 \\[ A[parent(i)] \\le A[i] \\] \u4ee5\u4e0b\u4ee5\u6700\u5927\u5806\u4e3a\u4f8b\uff0c\u8bf4\u660e\u5176\u5982\u4f55\u5b9e\u73b0\u3002","title":"\u6982\u8ff0"},{"location":"cs/data-structure/heap.html#_2","text":"heapify \u7528\u4e8e\u7ef4\u62a4\u5806\u7684\u6027\u8d28\u3002\u5176\u8f93\u5165\u4e3a i \uff0c\u8868\u793a\u4ee5 \\(A[i]\\) \u4e3a\u6839\u7684\u5b50\u6811\uff0c\u5728\u8c03\u7528 heapify \u65f6\uff0c\u5047\u8bbe\u5176\u5de6\u5b50\u6811\uff08\u6839\u7ed3\u70b9\u4e3a \\(A[left(i)]\\) \uff09\u548c\u53f3\u5b50\u6811\uff08\u6839\u7ed3\u70b9\u4e3a \\(A[right(i)]\\) \uff09\u5747\u4e3a\u6700\u5927\u5806\uff0c\u901a\u8fc7\u8ba9 \\(A[i]\\) \u5728\u5806\u4e2d\u9010\u7ea7\u4e0b\u964d\uff0c\u4f7f\u5f97\u4ee5 \\(A[i]\\) \u4e3a\u6839\u7684\u5b50\u6811\u6ee1\u8db3\u6700\u5927\u5806\u7684\u6027\u8d28\u3002 void heapify ( int [] array , int size , int i ) { while ( true ) { int l = left ( i ), r = right ( i ), largest = i ; if ( l < size && array [ l ] > array [ largest ] ) { largest = l ; } if ( r < size && array [ r ] > array [ largest ] ) { largest = r ; } if ( largest == i ) { break ; } swap ( array , largest , i ); i = largest ; } } \u6613\u77e5 heapify \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(h)\\) \uff0c \\(h\\) \u4e3a\u4ee5 \\(A[i]\\) \u4e3a\u6839\u7ed3\u70b9\u7684\u5b50\u6811\u7684\u9ad8\u5ea6\u3002","title":"\u7ef4\u62a4\u5806\u7684\u6027\u8d28"},{"location":"cs/data-structure/heap.html#_3","text":"\u5bf9\u4e8e\u8f93\u5165\u7684\u6570\u7ec4 \\(A\\) \uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u65b9\u5f0f\uff08\u5f52\u7eb3\u6cd5\uff09\u8c03\u7528 heapify \u5c06 \\(A\\) \u8f6c\u4e3a\u6700\u5927\u5806\u3002\u56e0\u4e3a\u53f6\u5b50\u7ed3\u70b9\u663e\u7136\u6210\u7acb\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002 void buildHeap ( int [] array ) { for ( int i = array . length / 2 - 1 ; i >= 0 ; i -- ) { heapify ( array , array . length , i ); } } \u6613\u77e5\u5305\u542b \\(n\\) \u4e2a\u5143\u7d20\u7684\u5806\u7684\u9ad8\u5ea6\u4e3a \\(\\lfloor \\lg n\\rfloor\\) \uff0c\u800c\u9ad8\u5ea6\u4e3a \\(h\\) \u7684\u5b50\u5806\u6700\u591a\u6709 \\(\\frac{n}{2^{h+1}}\\) \u4e2a\uff0c\u56e0\u6b64 buildHeap \u7684\u8fd0\u884c\u65f6\u95f4\u4e3a \\[ \\sum_{h=0}^{\\lfloor \\lg n\\rfloor}\\lceil \\frac{n}{2^{h+1}}\\rceil O(h) =O(n\\sum_{h=0}^{\\lfloor \\lg n\\rfloor}\\frac{h}{2^h}) \\] \u7531 \u6c42\u548c\u516c\u5f0f \u6613\u77e5 \\[ \\sum_{h=0}^{\\infty}\\frac{h}{2^h}=2 \\] \u4ece\u800c\u53ef\u5f97 buildHeap \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\[ O(n\\sum_{h=0}^{\\lfloor \\lg n\\rfloor}\\frac{h}{2^h}) =O(n\\sum_{h=0}^{\\infty}\\frac{h}{2^h}) =O(n) \\] \u5373\u5728\u7ebf\u6027\u65f6\u95f4\u5185\uff0c\u628a\u4e00\u4e2a\u65e0\u5e8f\u6570\u7ec4\u6784\u9020\u4e3a\u4e00\u4e2a\u6700\u5927\u5806\u3002","title":"\u5efa\u5806"},{"location":"cs/data-structure/heap.html#_4","text":"\u521d\u59cb\u65f6\uff0c\u5229\u7528 buildHeap \u5c06\u6570\u7ec4 \\(A\\) \u6784\u9020\u4e3a\u4e00\u4e2a\u6700\u5927\u5806\uff0c\u6b64\u65f6\uff0c\u6839\u7ed3\u70b9 \\(A[0]\\) \u4e3a\u6700\u5927\u503c\uff1b \u5c06 \\(A[0]\\) \u548c\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u4ea4\u6362\uff0c\u5219\u6700\u5927\u503c\u88ab\u653e\u5230\u4e86\u6b63\u786e\u7684\u4f4d\u7f6e\u4e0a\uff1b \u7136\u540e\u5c06\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u4ece\u5806\u4e2d\u53bb\u6389\uff0c\u5269\u4f59\u7ed3\u70b9\u4e2d\uff0c\u9664\u6839\u7ed3\u70b9 \\(A[0]\\) \u5916\u4f9d\u7136\u662f\u6700\u5927\u5806\uff0c\u8c03\u7528 heapify \u5c06\u5269\u4f59\u7ed3\u70b9\u91cd\u65b0\u6784\u9020\u4e3a\u4e00\u4e2a\u6700\u5927\u5806\uff1b \u91cd\u590d\u4e0a\u8ff0\u4e24\u6b65\uff0c\u76f4\u81f3\u5806\u4e2d\u53ea\u5269\u4e24\u4e2a\u5143\u7d20\u3002 void heapSort ( int [] array ) { buildHeap ( array ); for ( int i = array . length - 1 ; i > 0 ; i -- ) { swap ( array , i , 0 ); heapify ( array , i , 0 ); } } \u5176\u8fd0\u884c\u65f6\u95f4\u4e3a \\[ O(n)+(n-1)O(\\lg n)=O(n\\lg n) \\]","title":"\u5806\u6392\u5e8f"},{"location":"cs/data-structure/heap.html#_5","text":"\u7b97\u6cd5\u5bfc\u8bba. \u539f\u4e66\u7b2c3\u7248. \u7b2c6\u7ae0.","title":"\u53c2\u8003"},{"location":"cs/data-structure/monotonic-stack.html","text":"TODO \u6982\u8ff0 \u00b6 \u987e\u540d\u601d\u4e49\uff0c\u5355\u8c03\u6808\u5373\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u6808\u3002\u76f8\u8f83\u4e8e\u5176\u4ed6\u7ed3\u6784\uff0c\u5355\u8c03\u6808\u65e2\u7ef4\u62a4\u4e86\u5143\u7d20\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4e5f\u901a\u8fc7\u5165\u6808\u987a\u5e8f\u7ef4\u62a4\u4e86\u5143\u7d20\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\uff0c\u4f46\u662f\u4f1a\u4e22\u5931\u4e00\u90e8\u5206\u5143\u7d20\u3002 \u53c2\u8003 \u00b6 \u5355\u8c03\u6808 - OI Wiki .","title":"\u5355\u8c03\u6808"},{"location":"cs/data-structure/monotonic-stack.html#_1","text":"\u987e\u540d\u601d\u4e49\uff0c\u5355\u8c03\u6808\u5373\u6ee1\u8db3\u5355\u8c03\u6027\u7684\u6808\u3002\u76f8\u8f83\u4e8e\u5176\u4ed6\u7ed3\u6784\uff0c\u5355\u8c03\u6808\u65e2\u7ef4\u62a4\u4e86\u5143\u7d20\u95f4\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u4e5f\u901a\u8fc7\u5165\u6808\u987a\u5e8f\u7ef4\u62a4\u4e86\u5143\u7d20\u95f4\u7684\u76f8\u5bf9\u4f4d\u7f6e\u5173\u7cfb\uff0c\u4f46\u662f\u4f1a\u4e22\u5931\u4e00\u90e8\u5206\u5143\u7d20\u3002","title":"\u6982\u8ff0"},{"location":"cs/data-structure/monotonic-stack.html#_2","text":"\u5355\u8c03\u6808 - OI Wiki .","title":"\u53c2\u8003"},{"location":"cs/data-structure/red-black-tree.html","text":"TODO","title":"\u7ea2\u9ed1\u6811"},{"location":"cs/data-structure/segment-tree.html","text":"TODO \u53c2\u8003 \u00b6 \u7ebf\u6bb5\u6811 - OI Wiki (oi-wiki.org)","title":"\u7ebf\u6bb5\u6811"},{"location":"cs/data-structure/segment-tree.html#_1","text":"\u7ebf\u6bb5\u6811 - OI Wiki (oi-wiki.org)","title":"\u53c2\u8003"},{"location":"cs/data-structure/skiplist.html","text":"TODO \u6982\u8ff0 \u00b6 \u8df3\u8868\u662f\u53ef\u4ee5\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e\u7684\u6709\u5e8f\u94fe\u8868\uff0c\u5b83\u901a\u8fc7\u5bf9\u539f\u59cb\u94fe\u8868\u5efa\u7acb\u591a\u7ea7\u7d22\u5f15\uff0c\u80fd\u591f\u4f7f\u5f97\u63d2\u5165\u548c\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230 \\(O(\\log{n})\\) \u3002 \u57fa\u672c\u7ed3\u6784 \u00b6 \u53c2\u8003 \u00b6 Skip List--\u8df3\u8868\uff08\u5168\u7f51\u6700\u8be6\u7ec6\u7684\u8df3\u8868\u6587\u7ae0\u6ca1\u6709\u4e4b\u4e00\uff09 - \u7b80\u4e66 .","title":"Skiplist"},{"location":"cs/data-structure/skiplist.html#_1","text":"\u8df3\u8868\u662f\u53ef\u4ee5\u5b9e\u73b0\u4e8c\u5206\u67e5\u627e\u7684\u6709\u5e8f\u94fe\u8868\uff0c\u5b83\u901a\u8fc7\u5bf9\u539f\u59cb\u94fe\u8868\u5efa\u7acb\u591a\u7ea7\u7d22\u5f15\uff0c\u80fd\u591f\u4f7f\u5f97\u63d2\u5165\u548c\u67e5\u627e\u7684\u5e73\u5747\u65f6\u95f4\u590d\u6742\u5ea6\u8fbe\u5230 \\(O(\\log{n})\\) \u3002","title":"\u6982\u8ff0"},{"location":"cs/data-structure/skiplist.html#_2","text":"","title":"\u57fa\u672c\u7ed3\u6784"},{"location":"cs/data-structure/skiplist.html#_3","text":"Skip List--\u8df3\u8868\uff08\u5168\u7f51\u6700\u8be6\u7ec6\u7684\u8df3\u8868\u6587\u7ae0\u6ca1\u6709\u4e4b\u4e00\uff09 - \u7b80\u4e66 .","title":"\u53c2\u8003"},{"location":"cs/deep-learning/convolutional-neural-networks.html","text":"\u6982\u8ff0 \u00b6 \u5168\u8fde\u63a5\u7684\u795e\u7ecf\u7f51\u7edc\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\uff08Affine\u5c42\uff09\u5c06\u76f8\u90bb\u5c42\u7684\u795e\u7ecf\u5355\u5143\u8fde\u63a5\u8d77\u6765\uff0c\u8f93\u51fa\u7684\u6570\u91cf\u53ef\u4ee5\u4efb\u610f\u51b3\u5b9a\u3002\u4f46\u662f\u5f53\u8f93\u5165\u6570\u636e\u4e0d\u662f\u4e00\u7ef4\u6570\u636e\u65f6\uff08\u4f8b\u5982\u56fe\u50cf\u662f\u9ad8\u3001\u5bbd\u3001\u901a\u9053\u65b9\u5411\u4e0a\u7684\u4e09\u7ef4\u6570\u636e\uff09\uff0c\u5168\u8fde\u63a5\u5c42\u4f1a\u5c06\u5176\u62c9\u5e73\u4e3a\u4e00\u7ef4\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u635f\u5931\u4e86\u8f93\u5165\u6570\u636e\u4e2d\u5305\u542b\u7684\u7a7a\u95f4\u4fe1\u606f\u3002 \u800c\u5377\u79ef\u5c42\u53ef\u4ee5\u4fdd\u6301\u8f93\u5165\u6570\u636e\u7a7a\u95f4\u7ed3\u6784\u4e0d\u53d8\uff0c\u5e76\u4ee5\u540c\u6837\u7684\u7a7a\u95f4\u7ed3\u6784\u8f93\u51fa\u81f3\u4e0b\u4e00\u5c42\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u6b63\u786e\u5730\u7406\u89e3\u8f93\u5165\u6570\u636e\u3002 \u539f\u7406 \u00b6 \u53c2\u6570\u548c\u53d8\u91cf \u00b6 \\(x_{ij}\\) \uff1a\u8f93\u5165\u5c42\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u8f93\u5165\u503c\uff0c\u4e0e\u8f93\u51fa\u503c \\(a^I_{ij}\\) \u76f8\u540c\uff1b \\(w^{F_k}_{ij}\\) \uff1a\u7528\u4e8e\u5efa\u7acb\u7b2c \\(k\\) \u4e2a\u7279\u5f81\u6620\u5c04\u7684\u8fc7\u6ee4\u5668\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u503c\uff1b \\(z^{F_k}_{ij}\\) \uff1a\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff1b \\(b^{F_k}\\) \uff1a\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5355\u5143\u7684\u504f\u7f6e\uff1b \\(a^{F_k}_{ij}\\) \uff1a\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\uff08\u6fc0\u6d3b\u51fd\u6570\u7684\u503c\uff09\uff1b \\(z^{P_k}_{ij}\\) \uff1a\u6c60\u5316\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u5165\uff0c\u901a\u5e38\u662f\u5bf9\u5e94\u5377\u79ef\u5c42\u8f93\u51fa\u503c\u7684\u975e\u7ebf\u6027\u51fd\u6570\u503c\uff1b \\(a^{P_k}_{ij}\\) \uff1a\u6c60\u5316\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\uff0c\u4e0e\u8f93\u5165\u503c \\(z^{P_k}_{ij}\\) \u4e00\u81f4\uff1b \\(w^{O_n}_{k-ij}\\) \uff1a\u4ece\u6c60\u5316\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u6307\u5411\u8f93\u51fa\u5c42\u7b2c \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u6743\u91cd\uff1b \\(z^O_i\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff1b \\(b^O_i\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u504f\u7f6e\uff1b \\(a^O_i\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\uff08\u6fc0\u6d3b\u51fd\u6570\u7684\u503c\uff09\uff1b \\(t_i\\) \uff1a\u5b66\u4e60\u6570\u636e\u7684\u7b2c \\(i\\) \u4e2a\u6b63\u89e3\u3002 \u5377\u79ef \u00b6 \u8bbe\u8fc7\u6ee4\u5668\uff08\u5377\u79ef\u6838\uff09\u4e3a \\(m\\times n\\) \u7684\u77e9\u9635\uff0c\u5219\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u5377\u79ef\u503c\uff08\u5373\u76f8\u4f3c\u5ea6\uff09\u5982\u4e0b\uff0c \\[ \\begin{equation} c^{F_k}_{ij}=\\sum_{1\\le r\\le m,1\\le c\\le n} w^{F_k}_{rc}x_{r+i-1,c+j-1} \\end{equation} \\] \u8bbe\u6fc0\u6d3b\u51fd\u6570\u4e3a \\(a(z)\\) \uff0c\u5219\u5176\u8f93\u51fa\u503c\u5982\u4e0b\uff0c \\[ \\begin{equation} a^{F_k}_{ij}=a(z^{F_k}_{ij})=a(c^{F_k}_{ij}+b^{F_k}) \\end{equation} \\] \u4f9d\u6b21\u6ed1\u52a8\u5377\u79ef\u6838\uff0c\u5373\u53ef\u5f97\u5230\u4f7f\u7528\u4efb\u4e00\u8fc7\u6ee4\u5668\u7684\u5377\u79ef\u7684\u7ed3\u679c\u3002 \u6c60\u5316 \u00b6 \u6c60\u5316\u5c42\u7528\u4e8e\u538b\u7f29\u5377\u79ef\u5c42\u7684\u4fe1\u606f\uff0c\u672c\u8d28\u4e0a\u4e5f\u662f\u795e\u7ecf\u5355\u5143\u7684\u96c6\u5408\uff0c\u4f46\u662f\u8ba1\u7b97\u8f93\u5165\u65f6\u6ca1\u6709\u6743\u91cd\u548c\u504f\u7f6e\u53c2\u6570\uff0c\u4e5f\u6ca1\u6709\u6fc0\u6d3b\u51fd\u6570\uff08\u6216\u8ba4\u4e3a\u662f \\(a(z)=z\\) \uff09\uff0c\u5373\u8f93\u5165\u503c\u548c\u8f93\u51fa\u503c\u662f\u76f8\u540c\u7684\u3002 \u5982\u679c\u4f7f\u7528\u6700\u5927\u6c60\u5316\u6cd5\uff0c\u5219\u6709\uff0c \\[ \\begin{equation} a^{P_k}_{ij}=z^{P_k}_{ij}=\\max(a^{P_k}_{2i-1,2j-1},a^{P_k}_{2i-1,2j},a^{P_k}_{2i,2j-1},a^{P_k}_{2i,2j}) \\end{equation} \\] \u8f93\u51fa\u5c42 \u00b6 \u8f93\u51fa\u5c42\u7b2c \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\u5982\u4e0b\uff0c \\[ \\begin{equation} z^O_n=\\sum_k\\sum_{i,j}w^{O_n}_{k-ij}a^{P_k}_{ij}+b^O_n \\end{equation} \\] \u8bbe\u6fc0\u6d3b\u51fd\u6570\u4e3a \\(a(z)\\) \uff0c\u5219\u5176\u8f93\u51fa\u503c\u5982\u4e0b\uff0c \\[ \\begin{equation} a^O_n=a(z^O_n) \\end{equation} \\] \u4ee3\u4ef7\u51fd\u6570 \u00b6 \u8bbe \\(t\\) \u4e3a\u6b63\u89e3\uff0c \\(k\\) \u4e3a\u5b66\u4e60\u5b9e\u4f8b\u5e8f\u53f7\uff0c\u5219\u6709\u4ee3\u4ef7\u51fd\u6570\u5982\u4e0b\uff0c \\[ \\begin{equation} C_T=\\sum_{k}\\sum_j(t_j-a^L_j)^2 \\end{equation} \\] \u6570\u5b57\u7167\u7247\u7684\u6570\u636e\u7ed3\u6784 \u00b6 \u56fe\u50cf\u5b9e\u9645\u4e0a\u5c31\u662f\u5de8\u5927\u7684\u6570\u5b57\u77e9\u9635\uff0c\u6bcf\u4e2a\u6570\u5b57\u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u5355\u72ec\u50cf\u7d20\u7684\u4eae\u5ea6\u3002 \u5728 RGB \u6a21\u578b\u4e2d\uff0c\u5f69\u8272\u56fe\u7247\u662f\u7531 3 \u4e2a\u8fd9\u6837\u7684\u77e9\u9635\u7ec4\u6210\u7684\uff0c\u6bcf\u4e2a\u77e9\u9635\u5bf9\u5e94\u7740 3 \u4e2a\u989c\u8272\u901a\u9053\uff08\u7ea2\u3001\u7eff\u3001\u84dd\uff09\u4e2d\u7684\u4e00\u4e2a\uff0c\u5728\u9ed1\u767d\u56fe\u50cf\uff08\u4e13\u4e1a\u8bf4\u6cd5\u4e3a\u7070\u5ea6\u6a21\u5f0f\uff09\u4e2d\uff0c\u6211\u4eec\u4ec5\u4f7f\u7528\u4e00\u4e2a\u77e9\u9635\u3002\u6bcf\u4e2a\u77e9\u9635\u90fd\u5b58\u50a8\u7740 0 \u5230 255 \u7684\u6570\u503c\u3002 \u5377\u79ef \u00b6 \u4e8c\u7ef4\u5377\u79ef \u00b6 \u6211\u4eec\u6709\u4e00\u4e2a\u5c0f\u7684\u6570\u5b57\u77e9\u9635\uff08\u79f0\u4f5c\u5377\u79ef\u6838\u6216\u6ee4\u6ce2\u5668\uff09\uff0c\u6211\u4eec\u5c06\u5b83\u4f20\u9012\u5230\u6211\u4eec\u7684\u56fe\u50cf\u4e0a\uff0c\u7136\u540e\u57fa\u4e8e\u5377\u79ef\u6838\u7684\u6570\u503c\u8fdb\u884c\u53d8\u6362\uff0c\u540e\u7eed\u7684\u7279\u5f81\u56fe\u7684\u503c\u8981\u901a\u8fc7\u4e0b\u9762\u7684\u516c\u5f0f\u8ba1\u7b97\uff1a \\[ G(m,n)=(f*h)[m,n]=\\sum_{i}\\sum_{j}f(m-i,n-j)*h(i,j) \\] \u5176\u4e2d\uff0c \\(f\\) \u4e3a\u8f93\u5165\u56fe\u50cf\uff0c \\(h\\) \u4e3a\u5377\u79ef\u6838\uff0c \\(m\\) \u548c \\(n\\) \u4e3a\u8ba1\u7b97\u7ed3\u679c\u7684\u884c\u5217\u7d22\u5f15\u3002 \u4e3a\u4e86\u89e3\u51b3\u6bcf\u6b21\u5377\u79ef\u540e\u56fe\u50cf\u90fd\u4f1a\u6536\u7f29\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u8fb9\u754c\u6765\u586b\u5145\u56fe\u50cf\uff0c\u586b\u5145\u540e\u77e9\u9635\u7684\u7ef4\u5ea6\u4e3a\uff1a \\[ n_{out}=\\lfloor \\frac{n_{in}+2p-f}{s}+1\\rfloor \\] \u5176\u4e2d\uff0c \\(p\\) \u4e3a\u586b\u5145\uff08padding\uff09\u7684\u5bbd\u5ea6\uff0c \\(f\\) \u4e3a\u5377\u79ef\u6838\u7684\u7ef4\u5ea6\uff08\u901a\u5e38\u662f\u5947\u6570\uff09\uff0c \\(s\\) \u4e3a\u6b65\u957f\u3002 \u7acb\u4f53\u5377\u79ef \u00b6 \u6b63\u5411\u4f20\u64ad \u00b6 \u53cd\u5411\u4f20\u64ad \u00b6","title":"\u5377\u79ef\u795e\u7ecf\u7f51\u7edc"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_1","text":"\u5168\u8fde\u63a5\u7684\u795e\u7ecf\u7f51\u7edc\u4f7f\u7528\u5168\u8fde\u63a5\u5c42\uff08Affine\u5c42\uff09\u5c06\u76f8\u90bb\u5c42\u7684\u795e\u7ecf\u5355\u5143\u8fde\u63a5\u8d77\u6765\uff0c\u8f93\u51fa\u7684\u6570\u91cf\u53ef\u4ee5\u4efb\u610f\u51b3\u5b9a\u3002\u4f46\u662f\u5f53\u8f93\u5165\u6570\u636e\u4e0d\u662f\u4e00\u7ef4\u6570\u636e\u65f6\uff08\u4f8b\u5982\u56fe\u50cf\u662f\u9ad8\u3001\u5bbd\u3001\u901a\u9053\u65b9\u5411\u4e0a\u7684\u4e09\u7ef4\u6570\u636e\uff09\uff0c\u5168\u8fde\u63a5\u5c42\u4f1a\u5c06\u5176\u62c9\u5e73\u4e3a\u4e00\u7ef4\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u635f\u5931\u4e86\u8f93\u5165\u6570\u636e\u4e2d\u5305\u542b\u7684\u7a7a\u95f4\u4fe1\u606f\u3002 \u800c\u5377\u79ef\u5c42\u53ef\u4ee5\u4fdd\u6301\u8f93\u5165\u6570\u636e\u7a7a\u95f4\u7ed3\u6784\u4e0d\u53d8\uff0c\u5e76\u4ee5\u540c\u6837\u7684\u7a7a\u95f4\u7ed3\u6784\u8f93\u51fa\u81f3\u4e0b\u4e00\u5c42\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u6b63\u786e\u5730\u7406\u89e3\u8f93\u5165\u6570\u636e\u3002","title":"\u6982\u8ff0"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_2","text":"","title":"\u539f\u7406"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_3","text":"\\(x_{ij}\\) \uff1a\u8f93\u5165\u5c42\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u8f93\u5165\u503c\uff0c\u4e0e\u8f93\u51fa\u503c \\(a^I_{ij}\\) \u76f8\u540c\uff1b \\(w^{F_k}_{ij}\\) \uff1a\u7528\u4e8e\u5efa\u7acb\u7b2c \\(k\\) \u4e2a\u7279\u5f81\u6620\u5c04\u7684\u8fc7\u6ee4\u5668\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u503c\uff1b \\(z^{F_k}_{ij}\\) \uff1a\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff1b \\(b^{F_k}\\) \uff1a\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u6240\u6709\u795e\u7ecf\u5355\u5143\u7684\u504f\u7f6e\uff1b \\(a^{F_k}_{ij}\\) \uff1a\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\uff08\u6fc0\u6d3b\u51fd\u6570\u7684\u503c\uff09\uff1b \\(z^{P_k}_{ij}\\) \uff1a\u6c60\u5316\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u5165\uff0c\u901a\u5e38\u662f\u5bf9\u5e94\u5377\u79ef\u5c42\u8f93\u51fa\u503c\u7684\u975e\u7ebf\u6027\u51fd\u6570\u503c\uff1b \\(a^{P_k}_{ij}\\) \uff1a\u6c60\u5316\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\uff0c\u4e0e\u8f93\u5165\u503c \\(z^{P_k}_{ij}\\) \u4e00\u81f4\uff1b \\(w^{O_n}_{k-ij}\\) \uff1a\u4ece\u6c60\u5316\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u795e\u7ecf\u5355\u5143\u6307\u5411\u8f93\u51fa\u5c42\u7b2c \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u6743\u91cd\uff1b \\(z^O_i\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff1b \\(b^O_i\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u504f\u7f6e\uff1b \\(a^O_i\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\uff08\u6fc0\u6d3b\u51fd\u6570\u7684\u503c\uff09\uff1b \\(t_i\\) \uff1a\u5b66\u4e60\u6570\u636e\u7684\u7b2c \\(i\\) \u4e2a\u6b63\u89e3\u3002","title":"\u53c2\u6570\u548c\u53d8\u91cf"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_4","text":"\u8bbe\u8fc7\u6ee4\u5668\uff08\u5377\u79ef\u6838\uff09\u4e3a \\(m\\times n\\) \u7684\u77e9\u9635\uff0c\u5219\u5377\u79ef\u5c42\u7b2c \\(k\\) \u4e2a\u5b50\u5c42\u7684\u7b2c \\(i\\) \u884c\u7b2c \\(j\\) \u5217\u7684\u5377\u79ef\u503c\uff08\u5373\u76f8\u4f3c\u5ea6\uff09\u5982\u4e0b\uff0c \\[ \\begin{equation} c^{F_k}_{ij}=\\sum_{1\\le r\\le m,1\\le c\\le n} w^{F_k}_{rc}x_{r+i-1,c+j-1} \\end{equation} \\] \u8bbe\u6fc0\u6d3b\u51fd\u6570\u4e3a \\(a(z)\\) \uff0c\u5219\u5176\u8f93\u51fa\u503c\u5982\u4e0b\uff0c \\[ \\begin{equation} a^{F_k}_{ij}=a(z^{F_k}_{ij})=a(c^{F_k}_{ij}+b^{F_k}) \\end{equation} \\] \u4f9d\u6b21\u6ed1\u52a8\u5377\u79ef\u6838\uff0c\u5373\u53ef\u5f97\u5230\u4f7f\u7528\u4efb\u4e00\u8fc7\u6ee4\u5668\u7684\u5377\u79ef\u7684\u7ed3\u679c\u3002","title":"\u5377\u79ef"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_5","text":"\u6c60\u5316\u5c42\u7528\u4e8e\u538b\u7f29\u5377\u79ef\u5c42\u7684\u4fe1\u606f\uff0c\u672c\u8d28\u4e0a\u4e5f\u662f\u795e\u7ecf\u5355\u5143\u7684\u96c6\u5408\uff0c\u4f46\u662f\u8ba1\u7b97\u8f93\u5165\u65f6\u6ca1\u6709\u6743\u91cd\u548c\u504f\u7f6e\u53c2\u6570\uff0c\u4e5f\u6ca1\u6709\u6fc0\u6d3b\u51fd\u6570\uff08\u6216\u8ba4\u4e3a\u662f \\(a(z)=z\\) \uff09\uff0c\u5373\u8f93\u5165\u503c\u548c\u8f93\u51fa\u503c\u662f\u76f8\u540c\u7684\u3002 \u5982\u679c\u4f7f\u7528\u6700\u5927\u6c60\u5316\u6cd5\uff0c\u5219\u6709\uff0c \\[ \\begin{equation} a^{P_k}_{ij}=z^{P_k}_{ij}=\\max(a^{P_k}_{2i-1,2j-1},a^{P_k}_{2i-1,2j},a^{P_k}_{2i,2j-1},a^{P_k}_{2i,2j}) \\end{equation} \\]","title":"\u6c60\u5316"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_6","text":"\u8f93\u51fa\u5c42\u7b2c \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\u5982\u4e0b\uff0c \\[ \\begin{equation} z^O_n=\\sum_k\\sum_{i,j}w^{O_n}_{k-ij}a^{P_k}_{ij}+b^O_n \\end{equation} \\] \u8bbe\u6fc0\u6d3b\u51fd\u6570\u4e3a \\(a(z)\\) \uff0c\u5219\u5176\u8f93\u51fa\u503c\u5982\u4e0b\uff0c \\[ \\begin{equation} a^O_n=a(z^O_n) \\end{equation} \\]","title":"\u8f93\u51fa\u5c42"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_7","text":"\u8bbe \\(t\\) \u4e3a\u6b63\u89e3\uff0c \\(k\\) \u4e3a\u5b66\u4e60\u5b9e\u4f8b\u5e8f\u53f7\uff0c\u5219\u6709\u4ee3\u4ef7\u51fd\u6570\u5982\u4e0b\uff0c \\[ \\begin{equation} C_T=\\sum_{k}\\sum_j(t_j-a^L_j)^2 \\end{equation} \\]","title":"\u4ee3\u4ef7\u51fd\u6570"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_8","text":"\u56fe\u50cf\u5b9e\u9645\u4e0a\u5c31\u662f\u5de8\u5927\u7684\u6570\u5b57\u77e9\u9635\uff0c\u6bcf\u4e2a\u6570\u5b57\u4ee3\u8868\u7684\u662f\u4e00\u4e2a\u5355\u72ec\u50cf\u7d20\u7684\u4eae\u5ea6\u3002 \u5728 RGB \u6a21\u578b\u4e2d\uff0c\u5f69\u8272\u56fe\u7247\u662f\u7531 3 \u4e2a\u8fd9\u6837\u7684\u77e9\u9635\u7ec4\u6210\u7684\uff0c\u6bcf\u4e2a\u77e9\u9635\u5bf9\u5e94\u7740 3 \u4e2a\u989c\u8272\u901a\u9053\uff08\u7ea2\u3001\u7eff\u3001\u84dd\uff09\u4e2d\u7684\u4e00\u4e2a\uff0c\u5728\u9ed1\u767d\u56fe\u50cf\uff08\u4e13\u4e1a\u8bf4\u6cd5\u4e3a\u7070\u5ea6\u6a21\u5f0f\uff09\u4e2d\uff0c\u6211\u4eec\u4ec5\u4f7f\u7528\u4e00\u4e2a\u77e9\u9635\u3002\u6bcf\u4e2a\u77e9\u9635\u90fd\u5b58\u50a8\u7740 0 \u5230 255 \u7684\u6570\u503c\u3002","title":"\u6570\u5b57\u7167\u7247\u7684\u6570\u636e\u7ed3\u6784"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_9","text":"","title":"\u5377\u79ef"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_10","text":"\u6211\u4eec\u6709\u4e00\u4e2a\u5c0f\u7684\u6570\u5b57\u77e9\u9635\uff08\u79f0\u4f5c\u5377\u79ef\u6838\u6216\u6ee4\u6ce2\u5668\uff09\uff0c\u6211\u4eec\u5c06\u5b83\u4f20\u9012\u5230\u6211\u4eec\u7684\u56fe\u50cf\u4e0a\uff0c\u7136\u540e\u57fa\u4e8e\u5377\u79ef\u6838\u7684\u6570\u503c\u8fdb\u884c\u53d8\u6362\uff0c\u540e\u7eed\u7684\u7279\u5f81\u56fe\u7684\u503c\u8981\u901a\u8fc7\u4e0b\u9762\u7684\u516c\u5f0f\u8ba1\u7b97\uff1a \\[ G(m,n)=(f*h)[m,n]=\\sum_{i}\\sum_{j}f(m-i,n-j)*h(i,j) \\] \u5176\u4e2d\uff0c \\(f\\) \u4e3a\u8f93\u5165\u56fe\u50cf\uff0c \\(h\\) \u4e3a\u5377\u79ef\u6838\uff0c \\(m\\) \u548c \\(n\\) \u4e3a\u8ba1\u7b97\u7ed3\u679c\u7684\u884c\u5217\u7d22\u5f15\u3002 \u4e3a\u4e86\u89e3\u51b3\u6bcf\u6b21\u5377\u79ef\u540e\u56fe\u50cf\u90fd\u4f1a\u6536\u7f29\u7684\u95ee\u9898\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e2a\u989d\u5916\u7684\u8fb9\u754c\u6765\u586b\u5145\u56fe\u50cf\uff0c\u586b\u5145\u540e\u77e9\u9635\u7684\u7ef4\u5ea6\u4e3a\uff1a \\[ n_{out}=\\lfloor \\frac{n_{in}+2p-f}{s}+1\\rfloor \\] \u5176\u4e2d\uff0c \\(p\\) \u4e3a\u586b\u5145\uff08padding\uff09\u7684\u5bbd\u5ea6\uff0c \\(f\\) \u4e3a\u5377\u79ef\u6838\u7684\u7ef4\u5ea6\uff08\u901a\u5e38\u662f\u5947\u6570\uff09\uff0c \\(s\\) \u4e3a\u6b65\u957f\u3002","title":"\u4e8c\u7ef4\u5377\u79ef"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_11","text":"","title":"\u7acb\u4f53\u5377\u79ef"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_12","text":"","title":"\u6b63\u5411\u4f20\u64ad"},{"location":"cs/deep-learning/convolutional-neural-networks.html#_13","text":"","title":"\u53cd\u5411\u4f20\u64ad"},{"location":"cs/deep-learning/neural-networks.html","text":"\u53c2\u6570\u548c\u53d8\u91cf \u00b6 \\(x_i\\) \uff1a\u8f93\u5165\u5c42\uff08\u7b2c\u4e00\u5c42\uff09\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u5165\u503c\uff0c\u4e0e\u8f93\u51fa\u503c\u76f8\u540c\uff1b \\(w^l_{ji}\\) \uff1a\u4ece\u7b2c \\(l-1\\) \u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u6307\u5411\u7b2c \\(l\\) \u5c42\u7684\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u6743\u91cd\uff1b \\(b^l_j\\) \uff1a\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u504f\u7f6e\uff1b \\(z^l_j\\) \uff1a\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff1b \\(a^l_j\\) \uff1a\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u503c\uff0c\u5f53 \\(l=1\\) \u65f6\uff0c\u6709 \\(a^1_j=x_j\\) \uff1b \\(y_j\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u503c\uff08\u6700\u7ec8\u7684\u9884\u6d4b\u503c\uff09\uff0c\u6709 \\(y_j=a^L_j\\) \uff1b \\(t_j\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u5bf9\u5e94\u7684\u6b63\u89e3\uff1b \\(x_i[k],z^l_j[k],a^l_j[k]\\) \uff1a\u7b2c \\(k\\) \u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7684\u53d8\u91cf\u503c\u3002 \u6bcf\u5c42\uff08\u9664\u8f93\u5165\u5c42\u5916\uff09\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff0c\u4e0e\u4e0a\u4e00\u5c42\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u4ee5\u53ca\u4e4b\u95f4\u7684\u6743\u91cd\u548c\u504f\u7f6e\u6709\u5173\uff0c\u8bbe\u7b2c \\(l-1\\) \u5c42\u6709 \\(m\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u5219\u5176\u5173\u7cfb\uff08\u6b63\u5411\u4f20\u64ad\uff09\u5982\u4e0b\uff0c \\[ \\begin{equation} z^l_j=\\sum_{i=1}^{m} w^l_{ji}a^{l-1}_i+b^l_j \\end{equation} \\] \u8bbe\u7b2c \\(l\\) \u5c42\u7684\u795e\u7ecf\u5355\u5143\u7684\u4e2a\u6570\u4e3a \\(n\\) \uff0c\u5219\u4e24\u5c42\u4e4b\u95f4\u7684\u77e9\u9635\u8868\u793a\u5982\u4e0b\uff0c \\[ \\begin{equation} \\begin{pmatrix} z^l_1 \\\\ \\mathellipsis \\\\ z^l_n \\end{pmatrix} = \\begin{pmatrix} w^l_{11} & w^l_{12} & \\mathellipsis & w^l_{1m} \\\\ &&\\mathellipsis \\\\ w^l_{n1} & w^l_{n2} & \\mathellipsis & w^l_{nm} \\\\ \\end{pmatrix} \\begin{pmatrix} a^{l-1}_1 \\\\ a^{l-1}_2 \\\\ \\mathellipsis \\\\ a^{l-1}_m \\end{pmatrix} + \\begin{pmatrix} b^l_1 \\\\ \\mathellipsis \\\\ b^l_n \\end{pmatrix} \\end{equation} \\] \u6fc0\u6d3b\u51fd\u6570 \u00b6 \u6bcf\u4e00\u4e2a\u795e\u7ecf\u5355\u5143\u8f93\u51fa\u503c\u548c\u8f93\u5165\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\u79f0\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u8bbe \\(f\\) \u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5219\u6709\uff0c \\[ \\begin{equation} \\quad a^l_j=f(z^l_j) \\end{equation} \\] \u4ee5\u4e0b\u662f\u51e0\u79cd\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u3002 Sigmoid \u51fd\u6570 \u00b6 \\[ \\begin{equation} \\sigma(z)=\\frac{1}{1+e^{-z}} \\end{equation} \\] ReLU \u51fd\u6570 \u00b6 \\[ \\begin{equation} f(z)=\\begin{cases} z\\quad (z>0) \\\\ 0 \\quad (z\\le0) \\end{cases} \\end{equation} \\] softmax \u51fd\u6570 \u00b6 \u795e\u7ecf\u7f51\u7edc\u5728\u5904\u7406\u5206\u7c7b\u95ee\u9898\u65f6\uff0c\u5e38\u4f7f\u7528 softmax \u51fd\u6570\u4f5c\u4e3a\u8f93\u51fa\u5c42\u7684\u6fc0\u6d3b\u51fd\u6570\u3002\u8bbe\u8f93\u51fa\u5c42\u6709 \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u5219 softmax \u51fd\u6570\u5982\u4e0b\uff0c \\[ \\begin{equation} y_j=\\frac{\\exp(z^L_j)}{\\sum_{i=1}^{n}\\exp(z^L_j)} \\end{equation} \\] \u7531\u4e0a\u5f0f\u6613\u77e5\uff0csoftmax \u51fd\u6570\u7684\u8f93\u51fa\u603b\u548c\u4e3a \\(1\\) \uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5176\u8f93\u51fa\u89e3\u91ca\u4e3a\u6bcf\u79cd\u8f93\u51fa\u7c7b\u522b\u7684\u6982\u7387\u3002 \u5728\u5b9e\u9645\u8ba1\u7b97\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u6ea2\u51fa\uff0c\u901a\u5e38\u5728\u6307\u6570\u8fd0\u7b97\u524d\uff0c\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570 \\(C\\) \uff08\u4e00\u822c\u53d6\u8f93\u5165\u503c\u7684\u6700\u5927\u503c\u7684\u8d1f\u503c\uff09\uff0c\u5373\u7b49\u4ef7\u4e8e\uff0c \\[ \\begin{equation} y_j=\\frac{\\exp(z^L_j+C)}{\\sum_{i=1}^{n}\\exp(z^L_j+C)} \\end{equation} \\] \u635f\u5931\u51fd\u6570 \u00b6 \u635f\u5931\u51fd\u6570\u8868\u793a\u795e\u7ecf\u7f51\u7edc\u5bf9\u7ed9\u5b9a\u8f93\u5165\u7684\u9884\u6d4b\u503c\u548c\u6b63\u89e3\u4e4b\u95f4\u7684\u8bef\u5dee\u7a0b\u5ea6\u3002 \u5747\u65b9\u8bef\u5dee \u00b6 \u635f\u5931\u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u5747\u65b9\u8bef\u5dee\uff08mean squared error\uff09\uff0c\u8bbe\u8f93\u51fa\u5c42\u6709 \\(N\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u8bad\u7ec3\u5b9e\u4f8b\u603b\u6570\u4e3a \\(K\\) \uff0c\u5219\u5747\u65b9\u8bef\u5dee\u7684\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff0c \\[ \\begin{equation} E=\\frac{1}{2}\\sum_{k=1}^K\\sum_{i=1}^N(t_i-y_i)^2 \\end{equation} \\] \u4ea4\u53c9\u71b5\u8bef\u5dee \u00b6 \u635f\u5931\u51fd\u6570\u7684\u53e6\u4e00\u4e2a\u5e38\u7528\u7684\u4f8b\u5b50\u662f\u4ea4\u53c9\u71b5\u8bef\u5dee\uff08cross entropy error\uff09\uff0c\u5176\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff0c \\[ \\begin{equation} E=-\\frac{1}{n}\\sum_{k=1}^K\\sum_{i=1}^N t_i\\log y_i \\end{equation} \\] \u68af\u5ea6 \u00b6 \u7531\u591a\u5143\u51fd\u6570\u7684\u5168\u90e8\u81ea\u53d8\u91cf\u7684\u504f\u5bfc\u6570\u6c47\u603b\u800c\u6210\u7684\u5411\u91cf\u79f0\u4e3a\u68af\u5ea6\uff08gradient\uff09\uff0c\u8bbe\u6709\u51fd\u6570 \\(f(x_1,x_2,\\mathellipsis,x_n)\\) \uff0c\u5219\u5176\u68af\u5ea6\u8868\u793a\u5982\u4e0b\uff0c \\[ \\begin{equation} \\nabla f=(\\frac{\\partial f}{\\partial x_1},\\frac{\\partial f}{\\partial x_2},\\mathellipsis,\\frac{\\partial f}{x_n}) \\end{equation} \\] \u6570\u503c\u5fae\u5206 \u00b6 \u5229\u7528\u5fae\u5c0f\u7684\u5dee\u5206\u6c42\u504f\u5bfc\u6570\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6570\u503c\u5fae\u5206\uff0c\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff0c \\[ \\begin{equation} \\frac{\\partial f}{\\partial x}\\approx\\frac{f(x+\\Delta x)-f(x-\\Delta x)}{2\\Delta x} \\end{equation} \\] \u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u6cd5 \u00b6 \u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u6cd5\u7684\u7279\u70b9\u662f\u5c06\u7e41\u6742\u7684\u5bfc\u6570\u8ba1\u7b97\u66ff\u6362\u4e3a\u6570\u5217\u7684\u9012\u63a8\u5173\u7cfb\u5f0f\uff0c\u4ece\u800c\u7b80\u5316\u68af\u5ea6\u6c42\u89e3\u3002\u8bbe\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u8bef\u5dee\u4e3a \\(\\delta^{l}_{j}\\) \uff0c\u5b9a\u4e49\u5982\u4e0b\uff0c \\[ \\begin{equation} \\delta^l_j=\\frac{\\partial E}{\\partial z^l_j}\\quad (l=2,3,\\mathellipsis) \\end{equation} \\] \u6839\u636e\u5f0f \\((1)\\) \u548c\u94fe\u5f0f\u6cd5\u5219\uff0c\u6613\u77e5\u8bef\u5dee\u5bf9\u6743\u91cd\u548c\u504f\u7f6e\u7684\u504f\u5bfc\u6570\u5982\u4e0b\uff0c \\[ \\begin{equation} \\frac{\\partial E}{\\partial w^l_{ji}}=\\delta^l_j a^{l-1}_i \\qquad \\frac{\\partial E}{\\partial b^l_j}=\\delta^l_j \\end{equation} \\] \u56e0\u6b64\uff0c\u53ea\u8981\u6c42\u51fa\u5404\u4e2a\u795e\u7ecf\u5355\u5143\u8bef\u5dee \\(\\delta^l_j\\) \uff0c\u5373\u53ef\u5f97\u5230\u68af\u5ea6\u4e0b\u964d\u6240\u9700\u7684\u504f\u5bfc\u6570\uff08\u68af\u5ea6\uff09\u3002 \u8bbe \\(f\\) \u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u6839\u636e\u94fe\u5f0f\u6cd5\u5219\u6709\uff0c \\[ \\begin{equation} \\delta^L_j=\\frac{\\partial E}{\\partial a^L_j}\\frac{\\partial a^L_j}{\\partial z^L_j} =\\frac{\\partial E}{\\partial y_j}f'(z^L_j) \\end{equation} \\] \u6839\u636e\u9009\u62e9\u7684\u635f\u5931\u51fd\u6570\u548c\u6fc0\u6d3b\u51fd\u6570\u5373\u53ef\u6c42\u5f97\u8f93\u51fa\u5c42\u7684\u795e\u7ecf\u5355\u5143\u8bef\u5dee\u3002 \u8bbe\u7b2c \\(l\\) \u5c42\u6709 \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u6839\u636e\u591a\u5143\u51fd\u6570\u7684\u94fe\u5f0f\u6cd5\u5219\u53ca\u5f0f \\((1)\\) \u6709\uff0c \\[ \\begin{equation} \\delta^{l-1}_i=\\frac{\\partial a^{l-1}_i}{\\partial z^{l-1}_i}\\sum_{j=1}^n \\frac{\\partial E}{\\partial z^l_j}\\frac{\\partial z^l_j}{\\partial a^{l-1}_i} \\\\ =f'(z^{l-1}_i)\\sum_{j=1}^n \\delta^l_j w^l_{ji} \\end{equation} \\] \u8bbe\u7b2c \\(l-1\\) \u5c42\u6709 \\(m\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u5219\u4e0a\u8ff0\u9012\u63a8\u5173\u7cfb\u7684\u77e9\u9635\u8868\u793a\u5982\u4e0b\uff08\u5176\u4e2d \\(\\odot\\) \u8868\u793a Hadamard \u4e58\u79ef\uff09\uff0c \\[ \\begin{equation} \\begin{pmatrix} \\delta^{l-1}_1 \\\\ \\delta^{l-1}_2 \\\\ \\mathellipsis \\\\ \\delta^{l-1}_m \\end{pmatrix} = \\begin{bmatrix} \\begin{pmatrix} w^l_{11} & \\mathellipsis & w^l_{n1} \\\\ w^l_{12} & \\mathellipsis & w^l_{n2} \\\\ & \\mathellipsis \\\\ w^l_{1m} & \\mathellipsis & w^l_{nm} \\\\ \\end{pmatrix} \\begin{pmatrix} \\delta^l_1 \\\\ \\mathellipsis \\\\ \\delta^l_n \\end{pmatrix} \\end{bmatrix} \\odot \\begin{pmatrix} f'(z^{l-1}_1) \\\\ f'(z^{l-1}_2) \\\\ \\mathellipsis \\\\ f'(z^{l-1}_m) \\end{pmatrix} \\end{equation} \\] \u4ece\u8f93\u51fa\u5c42\u5f00\u59cb\uff0c\u6839\u636e\u4ee5\u4e0a\u9012\u63a8\u5173\u7cfb\uff08\u53cd\u5411\u4f20\u64ad\uff09\u5373\u53ef\u4f9d\u6b21\u6c42\u5f97\u9690\u85cf\u5c42\u7684\u795e\u7ecf\u5355\u5143\u8bef\u5dee\uff0c\u518d\u4ee3\u5165\u5f0f \\((14)\\) \uff0c\u4ece\u800c\u6c42\u5f97\u635f\u5931\u51fd\u6570\u5728\u5f53\u524d\u53c2\u6570\u5904\u7684\u68af\u5ea6\u3002 \u53c2\u6570\u4f18\u5316 \u00b6 \u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u7684\u76ee\u7684\u662f\u627e\u5230\u4f7f\u635f\u5931\u51fd\u6570\u7684\u503c\u5c3d\u53ef\u80fd\u5c0f\u7684\u53c2\u6570\u3002\u8fd9\u662f\u5bfb\u627e\u6700\u4f18\u53c2\u6570\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6700\u4f18\u5316\uff08optimization\uff09\uff0c\u4ee5\u4e0b\u662f\u51e0\u79cd\u5e38\u89c1\u7684\u6700\u4f18\u5316\u65b9\u6cd5\uff08\u53c2\u6570\u96c6\u5408\u8bb0\u4f5c \\(W\\) \uff0c\u68af\u5ea6\u8bb0\u4f5c \\(g\\) \uff09\u3002 \u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5 \u00b6 \u5f53\u53c2\u6570\u6cbf\u7740\u68af\u5ea6\u53cd\u65b9\u5411\uff08\u53cd\u5411\u5171\u7ebf\uff09\u79fb\u52a8\u65f6\uff0c\u8bef\u5dee\u51cf\u5c0f\u5f97\u6700\u5feb\uff0c\u8868\u793a\u5982\u4e0b\uff0c \\[ \\begin{equation} W\\larr W-\\eta \\cdot g \\end{equation} \\] \u5176\u4e2d\uff0c \\(\\eta\\) \u662f\u4e00\u4e2a\u5fae\u5c0f\u7684\u6b63\u6570\uff0c\u79f0\u4f5c\u5b66\u4e60\u7387\u3002 \\(\\eta\\) \u662f\u4e00\u4e2a\u8d85\u53c2\u6570\u3002 \u4ee5\u4e0a\u53c2\u6570\u4f18\u5316\u65b9\u6cd5\u79f0\u4e3a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08stochastic gradient descent\uff09\uff0c\u7b80\u79f0 SGD\u3002\u4f46\u662f\u5728 SGD \u4e2d\uff0c\u68af\u5ea6\u5411\u91cf\u7684\u65b9\u5411\u5e76\u6ca1\u6709\u6307\u5411\u6700\u5c0f\u503c\u7684\u65b9\u5411\uff0c\u5982\u679c\u51fd\u6570\u662f\u5404\u5411\u5f02\u6027\u7684\uff0c\u5219\u5176\u641c\u7d22\u8def\u5f84\u662f\u6bd4\u8f83\u4f4e\u6548\u7684\u3002 \u52a8\u91cf\u6cd5\uff08Momentum\uff09 \u00b6 \\[ \\begin{gather} v\\larr \\alpha v-\\eta \\cdot g \\\\ W\\larr W+v \\end{gather} \\] \u5176\u4e2d\uff0c \\(v\\) \u5bf9\u5e94\u7269\u7406\u4e0a\u7684\u901f\u5ea6\uff0c\u968f\u7740\u53c2\u6570\u6cbf\u7740\u68af\u5ea6\u53cd\u65b9\u5411\u79fb\u52a8\uff0c \\(v\\) \u4f1a\u9010\u6e10\u589e\u52a0\u3002 AdaGrad \u00b6 \u5b66\u4e60\u7387\u8870\u51cf\uff0c\u6307\u7684\u662f\u968f\u7740\u5b66\u4e60\u7684\u8fdb\u884c\uff0c\u4f7f\u5b66\u4e60\u7387\u9010\u6e10\u51cf\u5c0f\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u7684\u5b66\u4e60\u7387\u51cf\u5c0f\u662f\u9488\u5bf9\u6240\u6709\u7684\u53c2\u6570\u3002AdaGrad \u8fdb\u4e00\u6b65\u53d1\u5c55\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e0d\u540c\u7684\u53c2\u6570\u4f7f\u7528\u4e0d\u540c\u7684\u5b66\u4e60\u7387\uff0c\u5e76\u968f\u7740\u5b66\u4e60\u800c\u51cf\u5c0f\u3002 \\[ \\begin{gather} h\\larr h + g\\odot g \\\\ W\\larr W-\\frac{\\eta}{\\epsilon + \\sqrt h} \\cdot g \\end{gather} \\] \u5176\u4e2d\uff0c \\(h\\) \u4fdd\u5b58\u4e86\u4e4b\u524d\u6240\u6709\u68af\u5ea6\u503c\u7684\u5e73\u65b9\u548c\uff0c\u7136\u540e\u901a\u8fc7\u7cfb\u6570 \\(\\frac{1}{\\epsilon + \\sqrt{h}}\\) \u8c03\u6574\u6bcf\u4e2a\u53c2\u6570\u5b66\u4e60\u7684\u5c3a\u5ea6\uff0c\u5982\u679c\u53c2\u6570\u53d8\u5316\u8f83\u5927\uff0c\u5176\u5b66\u4e60\u7387\u4e5f\u4f1a\u8870\u51cf\u5730\u8f83\u5feb\u3002 \\(\\epsilon\\) \u5e38\u53d6 \\(10^{-7}\\) \uff0c\u9632\u6b62\u5206\u6bcd\u4e3a\u96f6\u3002 RMSProp \u00b6 \u5728 AdaGrad \u7b97\u6cd5\u4e2d\uff0c\u968f\u7740\u5b66\u4e60\u7684\u8fdb\u884c\uff0c \\(h\\) \u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u5bfc\u81f4\u5b66\u4e60\u7387\u592a\u4f4e\uff0c\u5373 \\(\\frac{1}{\\sqrt{h}}\\rarr0\\) \u3002\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 RMSProp \u65b9\u6cd5\uff0c\u52a0\u6743\u8ba1\u7b97\u68af\u5ea6\u503c\u7684\u5e73\u65b9\u548c\uff0c\u4ee5\u66f4\u591a\u5730\u53cd\u6620\u65b0\u7684\u68af\u5ea6\u53d8\u5316\uff0c\u5373\u201c\u6307\u6570\u79fb\u52a8\u5e73\u5747\u201d\u3002 \\[ \\begin{gather} h\\larr \\rho h+(1-\\rho)g\\odot g \\\\ W\\larr W - \\frac{\\eta}{\\sqrt {\\epsilon + h}} \\cdot g \\end{gather} \\] \u5176\u4e2d\uff0c \\(\\rho\\) \u662f\u6307\u6570\u8870\u51cf\u7387\uff0c\u901a\u5e38\u53d6 \\(0.9\\) . Adam \u00b6 Adam \u7b97\u6cd5\u7ed3\u5408\u4e86 AdaGrad \u548c RMSProp \u4e24\u4e2a\u7b97\u6cd5\u7684\u4f18\u70b9\uff0c\u540c\u65f6\u8003\u8651\u4e86\u68af\u5ea6\u7684\u4e00\u9636\u77e9\u4f30\u8ba1\uff08\u68af\u5ea6\u7684\u5747\u503c\uff09\u548c\u4e8c\u9636\u77e9\u4f30\u8ba1\uff08\u68af\u5ea6\u7684\u65b9\u5dee\uff09\uff0c \\[ \\begin{gather} m_t\\larr \\beta_1 m_{t-1} + (1-\\beta_1) g_t \\\\ v_t\\larr \\beta_2 v_{t-1} + (1-\\beta_2) g \\odot g \\\\ \\hat{m}_t \\larr \\frac{m_t}{1-\\beta_1^t} \\\\ \\hat{v}_t \\larr \\frac{v_t}{1-\\beta_2^t} \\\\ W_t \\larr W_{t-1} - \\frac{\\alpha \\cdot \\hat{m}_t}{\\sqrt{\\hat{v}_t}+\\epsilon} \\end{gather} \\] \u5176\u4e2d\uff0c \\(\\beta_1\\) \u662f\u4e00\u9636\u77e9\u7684\u6307\u6570\u8870\u51cf\u7387\uff0c\u9ed8\u8ba4\u4e3a \\(0.9\\) \uff0c \\(\\beta_2\\) \u662f\u4e8c\u9636\u77e9\u7684\u6307\u6570\u8870\u51cf\u7387\uff0c\u9ed8\u8ba4\u4e3a \\(0.999\\) \u3002\u8bad\u7ec3\u521d\u671f\u65f6\uff0c \\(m_t\\) \u548c \\(v_t\\) \u504f\u5411\u96f6\uff0c\u56e0\u6b64\u8ba1\u7b97 \\(\\hat{m}_t\\) \u548c \\(\\hat{v}_t\\) \u8fdb\u884c\u4fee\u6b63\u3002\u6700\u540e\u6839\u636e\u5b66\u4e60\u7387 \\(\\alpha\\) \uff08\u9ed8\u8ba4\u4e3a \\(0.001\\) \uff09\u66f4\u65b0\u53c2\u6570\u3002 \u540e\u4e09\u884c\u516c\u5f0f\u53ef\u4ee5\u4fee\u6539\u5982\u4e0b\uff0c\u63d0\u9ad8\u7b97\u6cd5\u6548\u7387\u3002 \\[ \\begin{gather} \\alpha_t = \\alpha \\cdot \\frac{\\sqrt{1-\\beta_2^t}}{1-\\beta_1^t} \\\\ W_t \\larr W_{t-1} -\\frac{\\alpha_t \\cdot m_t}{\\sqrt{v_t}+\\epsilon} \\end{gather} \\] \u7b97\u6cd5 \u00b6 \u51c6\u5907\u8bad\u7ec3\u6570\u636e\uff1b \u521d\u59cb\u8bbe\u7f6e\u6743\u91cd \\(w\\) \u3001\u504f\u7f6e \\(b\\) \u548c\u5b66\u4e60\u7387 \\(\\eta\\) \uff1a \u901a\u5e38\u4f7f\u7528\u968f\u673a\u6570\u4f5c\u4e3a\u6743\u91cd\u548c\u504f\u7f6e\u7684\u521d\u59cb\u503c\uff1b \u9009\u62e9\u9002\u5f53\u5c0f\u7684\u6b63\u6570\u4f5c\u4e3a\u5b66\u4e60\u7387\uff1b \u5b66\u4e60\u7387\u7684\u8bbe\u7f6e\u5927\u591a\u9700\u8981\u53cd\u590d\u8bd5\u9519\u3002\u540c\u6837\u5730\uff0c\u5bf9\u4e8e\u6743\u91cd\u548c\u504f\u7f6e\u7684\u521d\u59cb\u503c\uff0c\u4e3a\u4e86\u53d6\u5f97\u597d\u7684\u7ed3\u679c\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u591a\u6b21\u53d8\u66f4\u8bbe\u7f6e\uff1b \u9009\u62e9\u5c0f\u6279\u91cf\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u503c \\(a\\) \u4ee5\u53ca\u8bef\u5dee \\(E\\) \uff1a \u5229\u7528\u5f0f \\((2)\\) \u548c\u6fc0\u6d3b\u51fd\u6570\uff0c\u6b63\u5411\u8ba1\u7b97\u5404\u5c42\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165 \\(z\\) \u3001\u8f93\u51fa\u503c \\(a\\) \uff1b \u6839\u636e\u9009\u62e9\u7684\u635f\u5931\u51fd\u6570\uff0c\u8ba1\u7b97\u51fa\u9884\u6d4b\u503c\u548c\u6b63\u89e3\u4e4b\u95f4\u7684\u8bef\u5dee\uff1b \u5229\u7528\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u6cd5\uff0c\u53cd\u5411\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u795e\u7ecf\u5355\u5143\u8bef\u5dee \\(\\delta\\) \uff0c\u4ee3\u5165\u5f0f \\((14)\\) \uff0c\u4ece\u800c\u8ba1\u7b97\u51fa\u6b64\u65f6\u7684\u68af\u5ea6\uff1b \u6839\u636e\u9009\u62e9\u7684\u53c2\u6570\u4f18\u5316\u7b97\u6cd5\uff0c\u66f4\u65b0\u6743\u91cd\u548c\u504f\u7f6e\uff1b \u91cd\u590d\u6267\u884c\u7b2c 3~5 \u6b65\uff0c\u76f4\u81f3\u5224\u5b9a\u8bef\u5dee \\(E\\) \u7684\u503c\u5145\u5206\u5c0f\u4e3a\u6b62\u3002 \u6743\u91cd\u521d\u59cb\u503c \u00b6 Xavier \u521d\u59cb\u503c \u00b6 \u5982\u679c\u524d\u4e00\u5c42\u7684\u8282\u70b9\u6570\u4e3a \\(n\\) \uff0c\u5219\u5f53\u524d\u5c42\u7684\u6743\u91cd\u521d\u59cb\u503c\u4f7f\u7528\u6807\u51c6\u5dee\u4e3a \\(\\frac{1}{\\sqrt{n}}\\) \u7684 \u6b63\u6001\u5206\u5e03 \uff0c\u6b64\u65f6\uff0c\u5404\u5c42\u7684\u8f93\u51fa\u503c \\(a^l_j\\) \u5177\u6709\u76f8\u540c\u5e7f\u5ea6\u7684\u5206\u5e03\u3002 ReLU \u521d\u59cb\u503c \u00b6 \u5f53\u9009\u62e9 ReLU \u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\u65f6\uff0c\u56e0\u4e3a\u5176\u8d1f\u503c\u533a\u57df\u7684\u503c\u4e3a\u96f6\uff0c\u4e3a\u4e86\u4f7f\u5176\u66f4\u6709\u5e7f\u5ea6\uff0c\u9700\u8981 2 \u500d\u7684\u7cfb\u6570\uff0c\u5373\u5982\u679c\u524d\u4e00\u5c42\u7684\u8282\u70b9\u6570\u4e3a \\(n\\) \uff0c\u5219\u5f53\u524d\u5c42\u7684\u6743\u91cd\u521d\u59cb\u503c\u4f7f\u7528\u6807\u51c6\u5dee\u4e3a \\(\\sqrt{\\frac{2}{n}}\\) \u7684\u6b63\u6001\u5206\u5e03\u3002 BatchNorm \u00b6 \u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6570\u636e\u5206\u5e03\u5bf9\u5b66\u4e60\u7684\u5f71\u54cd\u5f88\u5927\u3002\u5047\u8bbe\u67d0\u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u5165 \\(z_j=20\\) \uff0c\u5e76\u9009\u62e9\u50cf Sigmoid \u51fd\u6570\u8fd9\u6837\u7684\u975e\u7ebf\u6027\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5219\u5176\u8f93\u51fa\u503c \\(a_j\\approx 1\\) \uff0c\u5904\u4e8e\u6fc0\u6d3b\u51fd\u6570\u7684\u9971\u548c\u9636\u6bb5\uff0c\u5373\u65e0\u8bba \\(z_j\\) \u518d\u600e\u4e48\u6269\u5927\uff0c\u5176\u8f93\u51fa\u503c\u53d8\u5316\u4e5f\u5f88\u5c0f\uff08\u53ea\u80fd\u8d8b\u8fd1 \\(1\\) \uff09\uff0c\u6216\u8005\u8bf4\u795e\u7ecf\u7f51\u7edc\u5bf9\u8fd9\u4e2a\u8303\u56f4\u7684\u52a0\u6743\u8f93\u5165\u4e0d\u654f\u611f\u4e86\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cBatch Normalization \u7684\u601d\u8def\u662f\u5bf9\u5404\u5c42\u7684\u52a0\u6743\u8f93\u5165\u8fdb\u884c\u6b63\u89c4\u5316\u5904\u7406\uff0c\u4ece\u800c\u4f7f\u8f93\u51fa\u503c\u62e5\u6709\u9002\u5f53\u7684\u5e7f\u5ea6\u3002 \\[ \\begin{gather} \\mu_B \\larr \\frac{1}{m}\\sum_{i=1}^{m}x_i \\\\ \\sigma_B^2 \\larr \\frac{1}{m}\\sum_{i=1}^{m}(x_i-\\mu_B)^2 \\\\ \\hat{x}_i \\larr \\frac{x_i-\\mu_B}{\\sqrt{\\sigma_B^2+\\epsilon}} \\\\ y_i \\larr \\gamma\\hat{x}_i+\\beta \\equiv BN_{\\gamma,\\beta}(x_i) \\end{gather} \\] \u9996\u5148\u5bf9 mini-batch \u7684\u8f93\u5165\u7684\u96c6\u5408 \\(B=\\{z_1,z_2,...,z_n\\}\\) \u6c42\u5747\u503c \\(\\mu_B\\) \u548c\u65b9\u5dee \\(\\sigma_B^2\\) \uff0c\u7136\u540e\u5bf9\u8f93\u5165\u8fdb\u884c\u5747\u503c\u4e3a \\(0\\) \u3001\u65b9\u5dee\u4e3a \\(1\\) \u7684\u6b63\u89c4\u5316\uff0c\u6700\u540e\u5bf9\u6b63\u89c4\u5316\u540e\u7684\u6570\u636e\u8fdb\u884c\u7f29\u653e\u548c\u5e73\u79fb\u53d8\u6362\u3002\u521d\u59cb\u65f6\uff0c \\(\\gamma=1,\\beta=0\\) \uff0c\u7136\u540e\u901a\u8fc7\u5b66\u4e60\u8c03\u6574\u5230\u5408\u9002\u7684\u503c\u3002 \u53c2\u8003 \u00b6 \u6d8c\u4e95\u826f\u5e78, \u6d8c\u4e95\u8d1e\u7f8e. \u6df1\u5ea6\u5b66\u4e60\u7684\u6570\u5b66. \u658b\u85e4\u5eb7\u6bc5. \u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\uff1a\u57fa\u4e8e Python \u7684\u7406\u8bba\u4e0e\u5b9e\u73b0. Adam: A Method for Stochastic Optimization . Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift .","title":"\u795e\u7ecf\u7f51\u7edc"},{"location":"cs/deep-learning/neural-networks.html#_1","text":"\\(x_i\\) \uff1a\u8f93\u5165\u5c42\uff08\u7b2c\u4e00\u5c42\uff09\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u5165\u503c\uff0c\u4e0e\u8f93\u51fa\u503c\u76f8\u540c\uff1b \\(w^l_{ji}\\) \uff1a\u4ece\u7b2c \\(l-1\\) \u5c42\u7b2c \\(i\\) \u4e2a\u795e\u7ecf\u5355\u5143\u6307\u5411\u7b2c \\(l\\) \u5c42\u7684\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u6743\u91cd\uff1b \\(b^l_j\\) \uff1a\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u504f\u7f6e\uff1b \\(z^l_j\\) \uff1a\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff1b \\(a^l_j\\) \uff1a\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u503c\uff0c\u5f53 \\(l=1\\) \u65f6\uff0c\u6709 \\(a^1_j=x_j\\) \uff1b \\(y_j\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u503c\uff08\u6700\u7ec8\u7684\u9884\u6d4b\u503c\uff09\uff0c\u6709 \\(y_j=a^L_j\\) \uff1b \\(t_j\\) \uff1a\u8f93\u51fa\u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u5bf9\u5e94\u7684\u6b63\u89e3\uff1b \\(x_i[k],z^l_j[k],a^l_j[k]\\) \uff1a\u7b2c \\(k\\) \u4e2a\u8bad\u7ec3\u5b9e\u4f8b\u7684\u53d8\u91cf\u503c\u3002 \u6bcf\u5c42\uff08\u9664\u8f93\u5165\u5c42\u5916\uff09\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165\uff0c\u4e0e\u4e0a\u4e00\u5c42\u7684\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u4ee5\u53ca\u4e4b\u95f4\u7684\u6743\u91cd\u548c\u504f\u7f6e\u6709\u5173\uff0c\u8bbe\u7b2c \\(l-1\\) \u5c42\u6709 \\(m\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u5219\u5176\u5173\u7cfb\uff08\u6b63\u5411\u4f20\u64ad\uff09\u5982\u4e0b\uff0c \\[ \\begin{equation} z^l_j=\\sum_{i=1}^{m} w^l_{ji}a^{l-1}_i+b^l_j \\end{equation} \\] \u8bbe\u7b2c \\(l\\) \u5c42\u7684\u795e\u7ecf\u5355\u5143\u7684\u4e2a\u6570\u4e3a \\(n\\) \uff0c\u5219\u4e24\u5c42\u4e4b\u95f4\u7684\u77e9\u9635\u8868\u793a\u5982\u4e0b\uff0c \\[ \\begin{equation} \\begin{pmatrix} z^l_1 \\\\ \\mathellipsis \\\\ z^l_n \\end{pmatrix} = \\begin{pmatrix} w^l_{11} & w^l_{12} & \\mathellipsis & w^l_{1m} \\\\ &&\\mathellipsis \\\\ w^l_{n1} & w^l_{n2} & \\mathellipsis & w^l_{nm} \\\\ \\end{pmatrix} \\begin{pmatrix} a^{l-1}_1 \\\\ a^{l-1}_2 \\\\ \\mathellipsis \\\\ a^{l-1}_m \\end{pmatrix} + \\begin{pmatrix} b^l_1 \\\\ \\mathellipsis \\\\ b^l_n \\end{pmatrix} \\end{equation} \\]","title":"\u53c2\u6570\u548c\u53d8\u91cf"},{"location":"cs/deep-learning/neural-networks.html#_2","text":"\u6bcf\u4e00\u4e2a\u795e\u7ecf\u5355\u5143\u8f93\u51fa\u503c\u548c\u8f93\u5165\u503c\u4e4b\u95f4\u7684\u5173\u7cfb\u79f0\u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u8bbe \\(f\\) \u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u5219\u6709\uff0c \\[ \\begin{equation} \\quad a^l_j=f(z^l_j) \\end{equation} \\] \u4ee5\u4e0b\u662f\u51e0\u79cd\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u3002","title":"\u6fc0\u6d3b\u51fd\u6570"},{"location":"cs/deep-learning/neural-networks.html#sigmoid","text":"\\[ \\begin{equation} \\sigma(z)=\\frac{1}{1+e^{-z}} \\end{equation} \\]","title":"Sigmoid \u51fd\u6570"},{"location":"cs/deep-learning/neural-networks.html#relu","text":"\\[ \\begin{equation} f(z)=\\begin{cases} z\\quad (z>0) \\\\ 0 \\quad (z\\le0) \\end{cases} \\end{equation} \\]","title":"ReLU \u51fd\u6570"},{"location":"cs/deep-learning/neural-networks.html#softmax","text":"\u795e\u7ecf\u7f51\u7edc\u5728\u5904\u7406\u5206\u7c7b\u95ee\u9898\u65f6\uff0c\u5e38\u4f7f\u7528 softmax \u51fd\u6570\u4f5c\u4e3a\u8f93\u51fa\u5c42\u7684\u6fc0\u6d3b\u51fd\u6570\u3002\u8bbe\u8f93\u51fa\u5c42\u6709 \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u5219 softmax \u51fd\u6570\u5982\u4e0b\uff0c \\[ \\begin{equation} y_j=\\frac{\\exp(z^L_j)}{\\sum_{i=1}^{n}\\exp(z^L_j)} \\end{equation} \\] \u7531\u4e0a\u5f0f\u6613\u77e5\uff0csoftmax \u51fd\u6570\u7684\u8f93\u51fa\u603b\u548c\u4e3a \\(1\\) \uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5176\u8f93\u51fa\u89e3\u91ca\u4e3a\u6bcf\u79cd\u8f93\u51fa\u7c7b\u522b\u7684\u6982\u7387\u3002 \u5728\u5b9e\u9645\u8ba1\u7b97\u65f6\uff0c\u4e3a\u4e86\u9632\u6b62\u6ea2\u51fa\uff0c\u901a\u5e38\u5728\u6307\u6570\u8fd0\u7b97\u524d\uff0c\u52a0\u4e0a\u4e00\u4e2a\u5e38\u6570 \\(C\\) \uff08\u4e00\u822c\u53d6\u8f93\u5165\u503c\u7684\u6700\u5927\u503c\u7684\u8d1f\u503c\uff09\uff0c\u5373\u7b49\u4ef7\u4e8e\uff0c \\[ \\begin{equation} y_j=\\frac{\\exp(z^L_j+C)}{\\sum_{i=1}^{n}\\exp(z^L_j+C)} \\end{equation} \\]","title":"softmax \u51fd\u6570"},{"location":"cs/deep-learning/neural-networks.html#_3","text":"\u635f\u5931\u51fd\u6570\u8868\u793a\u795e\u7ecf\u7f51\u7edc\u5bf9\u7ed9\u5b9a\u8f93\u5165\u7684\u9884\u6d4b\u503c\u548c\u6b63\u89e3\u4e4b\u95f4\u7684\u8bef\u5dee\u7a0b\u5ea6\u3002","title":"\u635f\u5931\u51fd\u6570"},{"location":"cs/deep-learning/neural-networks.html#_4","text":"\u635f\u5931\u51fd\u6570\u7684\u4e00\u4e2a\u4f8b\u5b50\u662f\u5747\u65b9\u8bef\u5dee\uff08mean squared error\uff09\uff0c\u8bbe\u8f93\u51fa\u5c42\u6709 \\(N\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u8bad\u7ec3\u5b9e\u4f8b\u603b\u6570\u4e3a \\(K\\) \uff0c\u5219\u5747\u65b9\u8bef\u5dee\u7684\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff0c \\[ \\begin{equation} E=\\frac{1}{2}\\sum_{k=1}^K\\sum_{i=1}^N(t_i-y_i)^2 \\end{equation} \\]","title":"\u5747\u65b9\u8bef\u5dee"},{"location":"cs/deep-learning/neural-networks.html#_5","text":"\u635f\u5931\u51fd\u6570\u7684\u53e6\u4e00\u4e2a\u5e38\u7528\u7684\u4f8b\u5b50\u662f\u4ea4\u53c9\u71b5\u8bef\u5dee\uff08cross entropy error\uff09\uff0c\u5176\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff0c \\[ \\begin{equation} E=-\\frac{1}{n}\\sum_{k=1}^K\\sum_{i=1}^N t_i\\log y_i \\end{equation} \\]","title":"\u4ea4\u53c9\u71b5\u8bef\u5dee"},{"location":"cs/deep-learning/neural-networks.html#_6","text":"\u7531\u591a\u5143\u51fd\u6570\u7684\u5168\u90e8\u81ea\u53d8\u91cf\u7684\u504f\u5bfc\u6570\u6c47\u603b\u800c\u6210\u7684\u5411\u91cf\u79f0\u4e3a\u68af\u5ea6\uff08gradient\uff09\uff0c\u8bbe\u6709\u51fd\u6570 \\(f(x_1,x_2,\\mathellipsis,x_n)\\) \uff0c\u5219\u5176\u68af\u5ea6\u8868\u793a\u5982\u4e0b\uff0c \\[ \\begin{equation} \\nabla f=(\\frac{\\partial f}{\\partial x_1},\\frac{\\partial f}{\\partial x_2},\\mathellipsis,\\frac{\\partial f}{x_n}) \\end{equation} \\]","title":"\u68af\u5ea6"},{"location":"cs/deep-learning/neural-networks.html#_7","text":"\u5229\u7528\u5fae\u5c0f\u7684\u5dee\u5206\u6c42\u504f\u5bfc\u6570\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6570\u503c\u5fae\u5206\uff0c\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff0c \\[ \\begin{equation} \\frac{\\partial f}{\\partial x}\\approx\\frac{f(x+\\Delta x)-f(x-\\Delta x)}{2\\Delta x} \\end{equation} \\]","title":"\u6570\u503c\u5fae\u5206"},{"location":"cs/deep-learning/neural-networks.html#_8","text":"\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u6cd5\u7684\u7279\u70b9\u662f\u5c06\u7e41\u6742\u7684\u5bfc\u6570\u8ba1\u7b97\u66ff\u6362\u4e3a\u6570\u5217\u7684\u9012\u63a8\u5173\u7cfb\u5f0f\uff0c\u4ece\u800c\u7b80\u5316\u68af\u5ea6\u6c42\u89e3\u3002\u8bbe\u7b2c \\(l\\) \u5c42\u7b2c \\(j\\) \u4e2a\u795e\u7ecf\u5355\u5143\u8bef\u5dee\u4e3a \\(\\delta^{l}_{j}\\) \uff0c\u5b9a\u4e49\u5982\u4e0b\uff0c \\[ \\begin{equation} \\delta^l_j=\\frac{\\partial E}{\\partial z^l_j}\\quad (l=2,3,\\mathellipsis) \\end{equation} \\] \u6839\u636e\u5f0f \\((1)\\) \u548c\u94fe\u5f0f\u6cd5\u5219\uff0c\u6613\u77e5\u8bef\u5dee\u5bf9\u6743\u91cd\u548c\u504f\u7f6e\u7684\u504f\u5bfc\u6570\u5982\u4e0b\uff0c \\[ \\begin{equation} \\frac{\\partial E}{\\partial w^l_{ji}}=\\delta^l_j a^{l-1}_i \\qquad \\frac{\\partial E}{\\partial b^l_j}=\\delta^l_j \\end{equation} \\] \u56e0\u6b64\uff0c\u53ea\u8981\u6c42\u51fa\u5404\u4e2a\u795e\u7ecf\u5355\u5143\u8bef\u5dee \\(\\delta^l_j\\) \uff0c\u5373\u53ef\u5f97\u5230\u68af\u5ea6\u4e0b\u964d\u6240\u9700\u7684\u504f\u5bfc\u6570\uff08\u68af\u5ea6\uff09\u3002 \u8bbe \\(f\\) \u4e3a\u6fc0\u6d3b\u51fd\u6570\uff0c\u6839\u636e\u94fe\u5f0f\u6cd5\u5219\u6709\uff0c \\[ \\begin{equation} \\delta^L_j=\\frac{\\partial E}{\\partial a^L_j}\\frac{\\partial a^L_j}{\\partial z^L_j} =\\frac{\\partial E}{\\partial y_j}f'(z^L_j) \\end{equation} \\] \u6839\u636e\u9009\u62e9\u7684\u635f\u5931\u51fd\u6570\u548c\u6fc0\u6d3b\u51fd\u6570\u5373\u53ef\u6c42\u5f97\u8f93\u51fa\u5c42\u7684\u795e\u7ecf\u5355\u5143\u8bef\u5dee\u3002 \u8bbe\u7b2c \\(l\\) \u5c42\u6709 \\(n\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u6839\u636e\u591a\u5143\u51fd\u6570\u7684\u94fe\u5f0f\u6cd5\u5219\u53ca\u5f0f \\((1)\\) \u6709\uff0c \\[ \\begin{equation} \\delta^{l-1}_i=\\frac{\\partial a^{l-1}_i}{\\partial z^{l-1}_i}\\sum_{j=1}^n \\frac{\\partial E}{\\partial z^l_j}\\frac{\\partial z^l_j}{\\partial a^{l-1}_i} \\\\ =f'(z^{l-1}_i)\\sum_{j=1}^n \\delta^l_j w^l_{ji} \\end{equation} \\] \u8bbe\u7b2c \\(l-1\\) \u5c42\u6709 \\(m\\) \u4e2a\u795e\u7ecf\u5355\u5143\uff0c\u5219\u4e0a\u8ff0\u9012\u63a8\u5173\u7cfb\u7684\u77e9\u9635\u8868\u793a\u5982\u4e0b\uff08\u5176\u4e2d \\(\\odot\\) \u8868\u793a Hadamard \u4e58\u79ef\uff09\uff0c \\[ \\begin{equation} \\begin{pmatrix} \\delta^{l-1}_1 \\\\ \\delta^{l-1}_2 \\\\ \\mathellipsis \\\\ \\delta^{l-1}_m \\end{pmatrix} = \\begin{bmatrix} \\begin{pmatrix} w^l_{11} & \\mathellipsis & w^l_{n1} \\\\ w^l_{12} & \\mathellipsis & w^l_{n2} \\\\ & \\mathellipsis \\\\ w^l_{1m} & \\mathellipsis & w^l_{nm} \\\\ \\end{pmatrix} \\begin{pmatrix} \\delta^l_1 \\\\ \\mathellipsis \\\\ \\delta^l_n \\end{pmatrix} \\end{bmatrix} \\odot \\begin{pmatrix} f'(z^{l-1}_1) \\\\ f'(z^{l-1}_2) \\\\ \\mathellipsis \\\\ f'(z^{l-1}_m) \\end{pmatrix} \\end{equation} \\] \u4ece\u8f93\u51fa\u5c42\u5f00\u59cb\uff0c\u6839\u636e\u4ee5\u4e0a\u9012\u63a8\u5173\u7cfb\uff08\u53cd\u5411\u4f20\u64ad\uff09\u5373\u53ef\u4f9d\u6b21\u6c42\u5f97\u9690\u85cf\u5c42\u7684\u795e\u7ecf\u5355\u5143\u8bef\u5dee\uff0c\u518d\u4ee3\u5165\u5f0f \\((14)\\) \uff0c\u4ece\u800c\u6c42\u5f97\u635f\u5931\u51fd\u6570\u5728\u5f53\u524d\u53c2\u6570\u5904\u7684\u68af\u5ea6\u3002","title":"\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u6cd5"},{"location":"cs/deep-learning/neural-networks.html#_9","text":"\u795e\u7ecf\u7f51\u7edc\u5b66\u4e60\u7684\u76ee\u7684\u662f\u627e\u5230\u4f7f\u635f\u5931\u51fd\u6570\u7684\u503c\u5c3d\u53ef\u80fd\u5c0f\u7684\u53c2\u6570\u3002\u8fd9\u662f\u5bfb\u627e\u6700\u4f18\u53c2\u6570\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6700\u4f18\u5316\uff08optimization\uff09\uff0c\u4ee5\u4e0b\u662f\u51e0\u79cd\u5e38\u89c1\u7684\u6700\u4f18\u5316\u65b9\u6cd5\uff08\u53c2\u6570\u96c6\u5408\u8bb0\u4f5c \\(W\\) \uff0c\u68af\u5ea6\u8bb0\u4f5c \\(g\\) \uff09\u3002","title":"\u53c2\u6570\u4f18\u5316"},{"location":"cs/deep-learning/neural-networks.html#_10","text":"\u5f53\u53c2\u6570\u6cbf\u7740\u68af\u5ea6\u53cd\u65b9\u5411\uff08\u53cd\u5411\u5171\u7ebf\uff09\u79fb\u52a8\u65f6\uff0c\u8bef\u5dee\u51cf\u5c0f\u5f97\u6700\u5feb\uff0c\u8868\u793a\u5982\u4e0b\uff0c \\[ \\begin{equation} W\\larr W-\\eta \\cdot g \\end{equation} \\] \u5176\u4e2d\uff0c \\(\\eta\\) \u662f\u4e00\u4e2a\u5fae\u5c0f\u7684\u6b63\u6570\uff0c\u79f0\u4f5c\u5b66\u4e60\u7387\u3002 \\(\\eta\\) \u662f\u4e00\u4e2a\u8d85\u53c2\u6570\u3002 \u4ee5\u4e0a\u53c2\u6570\u4f18\u5316\u65b9\u6cd5\u79f0\u4e3a\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5\uff08stochastic gradient descent\uff09\uff0c\u7b80\u79f0 SGD\u3002\u4f46\u662f\u5728 SGD \u4e2d\uff0c\u68af\u5ea6\u5411\u91cf\u7684\u65b9\u5411\u5e76\u6ca1\u6709\u6307\u5411\u6700\u5c0f\u503c\u7684\u65b9\u5411\uff0c\u5982\u679c\u51fd\u6570\u662f\u5404\u5411\u5f02\u6027\u7684\uff0c\u5219\u5176\u641c\u7d22\u8def\u5f84\u662f\u6bd4\u8f83\u4f4e\u6548\u7684\u3002","title":"\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u6cd5"},{"location":"cs/deep-learning/neural-networks.html#momentum","text":"\\[ \\begin{gather} v\\larr \\alpha v-\\eta \\cdot g \\\\ W\\larr W+v \\end{gather} \\] \u5176\u4e2d\uff0c \\(v\\) \u5bf9\u5e94\u7269\u7406\u4e0a\u7684\u901f\u5ea6\uff0c\u968f\u7740\u53c2\u6570\u6cbf\u7740\u68af\u5ea6\u53cd\u65b9\u5411\u79fb\u52a8\uff0c \\(v\\) \u4f1a\u9010\u6e10\u589e\u52a0\u3002","title":"\u52a8\u91cf\u6cd5\uff08Momentum\uff09"},{"location":"cs/deep-learning/neural-networks.html#adagrad","text":"\u5b66\u4e60\u7387\u8870\u51cf\uff0c\u6307\u7684\u662f\u968f\u7740\u5b66\u4e60\u7684\u8fdb\u884c\uff0c\u4f7f\u5b66\u4e60\u7387\u9010\u6e10\u51cf\u5c0f\u7684\u65b9\u6cd5\uff0c\u8fd9\u91cc\u7684\u5b66\u4e60\u7387\u51cf\u5c0f\u662f\u9488\u5bf9\u6240\u6709\u7684\u53c2\u6570\u3002AdaGrad \u8fdb\u4e00\u6b65\u53d1\u5c55\u4e86\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u4e0d\u540c\u7684\u53c2\u6570\u4f7f\u7528\u4e0d\u540c\u7684\u5b66\u4e60\u7387\uff0c\u5e76\u968f\u7740\u5b66\u4e60\u800c\u51cf\u5c0f\u3002 \\[ \\begin{gather} h\\larr h + g\\odot g \\\\ W\\larr W-\\frac{\\eta}{\\epsilon + \\sqrt h} \\cdot g \\end{gather} \\] \u5176\u4e2d\uff0c \\(h\\) \u4fdd\u5b58\u4e86\u4e4b\u524d\u6240\u6709\u68af\u5ea6\u503c\u7684\u5e73\u65b9\u548c\uff0c\u7136\u540e\u901a\u8fc7\u7cfb\u6570 \\(\\frac{1}{\\epsilon + \\sqrt{h}}\\) \u8c03\u6574\u6bcf\u4e2a\u53c2\u6570\u5b66\u4e60\u7684\u5c3a\u5ea6\uff0c\u5982\u679c\u53c2\u6570\u53d8\u5316\u8f83\u5927\uff0c\u5176\u5b66\u4e60\u7387\u4e5f\u4f1a\u8870\u51cf\u5730\u8f83\u5feb\u3002 \\(\\epsilon\\) \u5e38\u53d6 \\(10^{-7}\\) \uff0c\u9632\u6b62\u5206\u6bcd\u4e3a\u96f6\u3002","title":"AdaGrad"},{"location":"cs/deep-learning/neural-networks.html#rmsprop","text":"\u5728 AdaGrad \u7b97\u6cd5\u4e2d\uff0c\u968f\u7740\u5b66\u4e60\u7684\u8fdb\u884c\uff0c \\(h\\) \u4f1a\u8d8a\u6765\u8d8a\u5927\uff0c\u5bfc\u81f4\u5b66\u4e60\u7387\u592a\u4f4e\uff0c\u5373 \\(\\frac{1}{\\sqrt{h}}\\rarr0\\) \u3002\u4e00\u4e2a\u89e3\u51b3\u65b9\u6848\u662f\u4f7f\u7528 RMSProp \u65b9\u6cd5\uff0c\u52a0\u6743\u8ba1\u7b97\u68af\u5ea6\u503c\u7684\u5e73\u65b9\u548c\uff0c\u4ee5\u66f4\u591a\u5730\u53cd\u6620\u65b0\u7684\u68af\u5ea6\u53d8\u5316\uff0c\u5373\u201c\u6307\u6570\u79fb\u52a8\u5e73\u5747\u201d\u3002 \\[ \\begin{gather} h\\larr \\rho h+(1-\\rho)g\\odot g \\\\ W\\larr W - \\frac{\\eta}{\\sqrt {\\epsilon + h}} \\cdot g \\end{gather} \\] \u5176\u4e2d\uff0c \\(\\rho\\) \u662f\u6307\u6570\u8870\u51cf\u7387\uff0c\u901a\u5e38\u53d6 \\(0.9\\) .","title":"RMSProp"},{"location":"cs/deep-learning/neural-networks.html#adam","text":"Adam \u7b97\u6cd5\u7ed3\u5408\u4e86 AdaGrad \u548c RMSProp \u4e24\u4e2a\u7b97\u6cd5\u7684\u4f18\u70b9\uff0c\u540c\u65f6\u8003\u8651\u4e86\u68af\u5ea6\u7684\u4e00\u9636\u77e9\u4f30\u8ba1\uff08\u68af\u5ea6\u7684\u5747\u503c\uff09\u548c\u4e8c\u9636\u77e9\u4f30\u8ba1\uff08\u68af\u5ea6\u7684\u65b9\u5dee\uff09\uff0c \\[ \\begin{gather} m_t\\larr \\beta_1 m_{t-1} + (1-\\beta_1) g_t \\\\ v_t\\larr \\beta_2 v_{t-1} + (1-\\beta_2) g \\odot g \\\\ \\hat{m}_t \\larr \\frac{m_t}{1-\\beta_1^t} \\\\ \\hat{v}_t \\larr \\frac{v_t}{1-\\beta_2^t} \\\\ W_t \\larr W_{t-1} - \\frac{\\alpha \\cdot \\hat{m}_t}{\\sqrt{\\hat{v}_t}+\\epsilon} \\end{gather} \\] \u5176\u4e2d\uff0c \\(\\beta_1\\) \u662f\u4e00\u9636\u77e9\u7684\u6307\u6570\u8870\u51cf\u7387\uff0c\u9ed8\u8ba4\u4e3a \\(0.9\\) \uff0c \\(\\beta_2\\) \u662f\u4e8c\u9636\u77e9\u7684\u6307\u6570\u8870\u51cf\u7387\uff0c\u9ed8\u8ba4\u4e3a \\(0.999\\) \u3002\u8bad\u7ec3\u521d\u671f\u65f6\uff0c \\(m_t\\) \u548c \\(v_t\\) \u504f\u5411\u96f6\uff0c\u56e0\u6b64\u8ba1\u7b97 \\(\\hat{m}_t\\) \u548c \\(\\hat{v}_t\\) \u8fdb\u884c\u4fee\u6b63\u3002\u6700\u540e\u6839\u636e\u5b66\u4e60\u7387 \\(\\alpha\\) \uff08\u9ed8\u8ba4\u4e3a \\(0.001\\) \uff09\u66f4\u65b0\u53c2\u6570\u3002 \u540e\u4e09\u884c\u516c\u5f0f\u53ef\u4ee5\u4fee\u6539\u5982\u4e0b\uff0c\u63d0\u9ad8\u7b97\u6cd5\u6548\u7387\u3002 \\[ \\begin{gather} \\alpha_t = \\alpha \\cdot \\frac{\\sqrt{1-\\beta_2^t}}{1-\\beta_1^t} \\\\ W_t \\larr W_{t-1} -\\frac{\\alpha_t \\cdot m_t}{\\sqrt{v_t}+\\epsilon} \\end{gather} \\]","title":"Adam"},{"location":"cs/deep-learning/neural-networks.html#_11","text":"\u51c6\u5907\u8bad\u7ec3\u6570\u636e\uff1b \u521d\u59cb\u8bbe\u7f6e\u6743\u91cd \\(w\\) \u3001\u504f\u7f6e \\(b\\) \u548c\u5b66\u4e60\u7387 \\(\\eta\\) \uff1a \u901a\u5e38\u4f7f\u7528\u968f\u673a\u6570\u4f5c\u4e3a\u6743\u91cd\u548c\u504f\u7f6e\u7684\u521d\u59cb\u503c\uff1b \u9009\u62e9\u9002\u5f53\u5c0f\u7684\u6b63\u6570\u4f5c\u4e3a\u5b66\u4e60\u7387\uff1b \u5b66\u4e60\u7387\u7684\u8bbe\u7f6e\u5927\u591a\u9700\u8981\u53cd\u590d\u8bd5\u9519\u3002\u540c\u6837\u5730\uff0c\u5bf9\u4e8e\u6743\u91cd\u548c\u504f\u7f6e\u7684\u521d\u59cb\u503c\uff0c\u4e3a\u4e86\u53d6\u5f97\u597d\u7684\u7ed3\u679c\uff0c\u4e5f\u53ef\u80fd\u9700\u8981\u591a\u6b21\u53d8\u66f4\u8bbe\u7f6e\uff1b \u9009\u62e9\u5c0f\u6279\u91cf\u7684\u8bad\u7ec3\u5b9e\u4f8b\uff0c\u8ba1\u7b97\u51fa\u6240\u6709\u795e\u7ecf\u5355\u5143\u7684\u8f93\u51fa\u503c \\(a\\) \u4ee5\u53ca\u8bef\u5dee \\(E\\) \uff1a \u5229\u7528\u5f0f \\((2)\\) \u548c\u6fc0\u6d3b\u51fd\u6570\uff0c\u6b63\u5411\u8ba1\u7b97\u5404\u5c42\u795e\u7ecf\u5355\u5143\u7684\u52a0\u6743\u8f93\u5165 \\(z\\) \u3001\u8f93\u51fa\u503c \\(a\\) \uff1b \u6839\u636e\u9009\u62e9\u7684\u635f\u5931\u51fd\u6570\uff0c\u8ba1\u7b97\u51fa\u9884\u6d4b\u503c\u548c\u6b63\u89e3\u4e4b\u95f4\u7684\u8bef\u5dee\uff1b \u5229\u7528\u8bef\u5dee\u53cd\u5411\u4f20\u64ad\u6cd5\uff0c\u53cd\u5411\u8ba1\u7b97\u51fa\u6240\u6709\u7684\u795e\u7ecf\u5355\u5143\u8bef\u5dee \\(\\delta\\) \uff0c\u4ee3\u5165\u5f0f \\((14)\\) \uff0c\u4ece\u800c\u8ba1\u7b97\u51fa\u6b64\u65f6\u7684\u68af\u5ea6\uff1b \u6839\u636e\u9009\u62e9\u7684\u53c2\u6570\u4f18\u5316\u7b97\u6cd5\uff0c\u66f4\u65b0\u6743\u91cd\u548c\u504f\u7f6e\uff1b \u91cd\u590d\u6267\u884c\u7b2c 3~5 \u6b65\uff0c\u76f4\u81f3\u5224\u5b9a\u8bef\u5dee \\(E\\) \u7684\u503c\u5145\u5206\u5c0f\u4e3a\u6b62\u3002","title":"\u7b97\u6cd5"},{"location":"cs/deep-learning/neural-networks.html#_12","text":"","title":"\u6743\u91cd\u521d\u59cb\u503c"},{"location":"cs/deep-learning/neural-networks.html#xavier","text":"\u5982\u679c\u524d\u4e00\u5c42\u7684\u8282\u70b9\u6570\u4e3a \\(n\\) \uff0c\u5219\u5f53\u524d\u5c42\u7684\u6743\u91cd\u521d\u59cb\u503c\u4f7f\u7528\u6807\u51c6\u5dee\u4e3a \\(\\frac{1}{\\sqrt{n}}\\) \u7684 \u6b63\u6001\u5206\u5e03 \uff0c\u6b64\u65f6\uff0c\u5404\u5c42\u7684\u8f93\u51fa\u503c \\(a^l_j\\) \u5177\u6709\u76f8\u540c\u5e7f\u5ea6\u7684\u5206\u5e03\u3002","title":"Xavier \u521d\u59cb\u503c"},{"location":"cs/deep-learning/neural-networks.html#relu_1","text":"\u5f53\u9009\u62e9 ReLU \u4f5c\u4e3a\u6fc0\u6d3b\u51fd\u6570\u65f6\uff0c\u56e0\u4e3a\u5176\u8d1f\u503c\u533a\u57df\u7684\u503c\u4e3a\u96f6\uff0c\u4e3a\u4e86\u4f7f\u5176\u66f4\u6709\u5e7f\u5ea6\uff0c\u9700\u8981 2 \u500d\u7684\u7cfb\u6570\uff0c\u5373\u5982\u679c\u524d\u4e00\u5c42\u7684\u8282\u70b9\u6570\u4e3a \\(n\\) \uff0c\u5219\u5f53\u524d\u5c42\u7684\u6743\u91cd\u521d\u59cb\u503c\u4f7f\u7528\u6807\u51c6\u5dee\u4e3a \\(\\sqrt{\\frac{2}{n}}\\) \u7684\u6b63\u6001\u5206\u5e03\u3002","title":"ReLU \u521d\u59cb\u503c"},{"location":"cs/deep-learning/neural-networks.html#batchnorm","text":"\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6570\u636e\u5206\u5e03\u5bf9\u5b66\u4e60\u7684\u5f71\u54cd\u5f88\u5927\u3002\u5047\u8bbe\u67d0\u4e2a\u795e\u7ecf\u5355\u5143\u7684\u8f93\u5165 \\(z_j=20\\) \uff0c\u5e76\u9009\u62e9\u50cf Sigmoid \u51fd\u6570\u8fd9\u6837\u7684\u975e\u7ebf\u6027\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u5219\u5176\u8f93\u51fa\u503c \\(a_j\\approx 1\\) \uff0c\u5904\u4e8e\u6fc0\u6d3b\u51fd\u6570\u7684\u9971\u548c\u9636\u6bb5\uff0c\u5373\u65e0\u8bba \\(z_j\\) \u518d\u600e\u4e48\u6269\u5927\uff0c\u5176\u8f93\u51fa\u503c\u53d8\u5316\u4e5f\u5f88\u5c0f\uff08\u53ea\u80fd\u8d8b\u8fd1 \\(1\\) \uff09\uff0c\u6216\u8005\u8bf4\u795e\u7ecf\u7f51\u7edc\u5bf9\u8fd9\u4e2a\u8303\u56f4\u7684\u52a0\u6743\u8f93\u5165\u4e0d\u654f\u611f\u4e86\u3002 \u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cBatch Normalization \u7684\u601d\u8def\u662f\u5bf9\u5404\u5c42\u7684\u52a0\u6743\u8f93\u5165\u8fdb\u884c\u6b63\u89c4\u5316\u5904\u7406\uff0c\u4ece\u800c\u4f7f\u8f93\u51fa\u503c\u62e5\u6709\u9002\u5f53\u7684\u5e7f\u5ea6\u3002 \\[ \\begin{gather} \\mu_B \\larr \\frac{1}{m}\\sum_{i=1}^{m}x_i \\\\ \\sigma_B^2 \\larr \\frac{1}{m}\\sum_{i=1}^{m}(x_i-\\mu_B)^2 \\\\ \\hat{x}_i \\larr \\frac{x_i-\\mu_B}{\\sqrt{\\sigma_B^2+\\epsilon}} \\\\ y_i \\larr \\gamma\\hat{x}_i+\\beta \\equiv BN_{\\gamma,\\beta}(x_i) \\end{gather} \\] \u9996\u5148\u5bf9 mini-batch \u7684\u8f93\u5165\u7684\u96c6\u5408 \\(B=\\{z_1,z_2,...,z_n\\}\\) \u6c42\u5747\u503c \\(\\mu_B\\) \u548c\u65b9\u5dee \\(\\sigma_B^2\\) \uff0c\u7136\u540e\u5bf9\u8f93\u5165\u8fdb\u884c\u5747\u503c\u4e3a \\(0\\) \u3001\u65b9\u5dee\u4e3a \\(1\\) \u7684\u6b63\u89c4\u5316\uff0c\u6700\u540e\u5bf9\u6b63\u89c4\u5316\u540e\u7684\u6570\u636e\u8fdb\u884c\u7f29\u653e\u548c\u5e73\u79fb\u53d8\u6362\u3002\u521d\u59cb\u65f6\uff0c \\(\\gamma=1,\\beta=0\\) \uff0c\u7136\u540e\u901a\u8fc7\u5b66\u4e60\u8c03\u6574\u5230\u5408\u9002\u7684\u503c\u3002","title":"BatchNorm"},{"location":"cs/deep-learning/neural-networks.html#_13","text":"\u6d8c\u4e95\u826f\u5e78, \u6d8c\u4e95\u8d1e\u7f8e. \u6df1\u5ea6\u5b66\u4e60\u7684\u6570\u5b66. \u658b\u85e4\u5eb7\u6bc5. \u6df1\u5ea6\u5b66\u4e60\u5165\u95e8\uff1a\u57fa\u4e8e Python \u7684\u7406\u8bba\u4e0e\u5b9e\u73b0. Adam: A Method for Stochastic Optimization . Batch Normalization: Accelerating Deep Network Training by Reducing Internal Covariate Shift .","title":"\u53c2\u8003"},{"location":"cs/math/fourier-transform.html","text":"TODO","title":"\u5085\u91cc\u53f6\u53d8\u6362"},{"location":"cs/math/normal-distribution.html","text":"\u6982\u8ff0 \u00b6 \u6b63\u6001\u5206\u5e03\uff08Normal Distribution\uff09\uff0c\u53c8\u79f0\u9ad8\u65af\u5206\u5e03\uff08Gaussian Distribution\uff09\uff0c\u4e00\u79cd\u91cd\u8981\u7684\u6982\u7387\u5206\u5e03\u3002","title":"\u6b63\u6001\u5206\u5e03"},{"location":"cs/math/normal-distribution.html#_1","text":"\u6b63\u6001\u5206\u5e03\uff08Normal Distribution\uff09\uff0c\u53c8\u79f0\u9ad8\u65af\u5206\u5e03\uff08Gaussian Distribution\uff09\uff0c\u4e00\u79cd\u91cd\u8981\u7684\u6982\u7387\u5206\u5e03\u3002","title":"\u6982\u8ff0"},{"location":"cs/math/summation.html","text":"\u6c42\u548c\u516c\u5f0f\u53ca\u5176\u6027\u8d28 \u00b6 \u7ed9\u5b9a\u6709\u9650\u6570\u5217 \\(a_1,a_2,...,a_n\\) \uff0c\u5176\u4e2d \\(n\\ge 0\\) \uff0c\u8bb0\u6709\u9650\u548c \\[ \\sum_{k=1}^{n}a_k=a_1+a_2+\u00b7\u00b7\u00b7+a_n \\] \u82e5 \\(n=0\\) \uff0c\u5b9a\u4e49\u8be5\u548c\u5f0f\u503c\u4e3a \\(0\\) \u3002 \u7ed9\u5b9a\u65e0\u9650\u6570\u5217 \\(a_1,a_2,...\\) \uff0c\u5c06\u5176\u65e0\u9650\u548c \\(a_1+a_2+\u00b7\u00b7\u00b7\\) \u8bb0\u4f5c \\[ \\sum_{k=1}^{\\infty}a_k=\\lim_{n\\to \\infty}\\sum_{k=1}^{n}a_k \\] \u7b49\u5dee\u7ea7\u6570 \u00b6 \\[ \\begin{array}{rl} \\displaystyle\\sum_{k=1}^{n}k&=\\frac{1}{2}n(n+1) \\\\ &=\\Theta(n^2) \\end{array} \\] \u5e73\u65b9\u548c\u4e0e\u7acb\u65b9\u548c \u00b6 \\[ \\sum_{k=1}^{n}k^2=\\frac{n(n+1)(2n+1)}{6} \\] \\[ \\sum_{k=1}^{n}k^3=\\frac{n^2(n+1)^2}{4} \\] \u51e0\u4f55\u7ea7\u6570 \u00b6 \u5bf9\u5b9e\u6570 \\(x\\ne 1\\) \uff0c\u548c\u5f0f \\[ \\sum_{k=0}^{n}x^k=1+x+x^2+\u00b7\u00b7\u00b7+x^n \\] \u79f0\u4f5c\u51e0\u4f55\u7ea7\u6570\uff08\u6216\u6307\u6570\u7ea7\u6570\uff09\uff0c\u5176\u503c\u4e3a \\[ \\sum_{k=0}^{n}x^k=\\frac{x^{n+1}-1}{x-1} \\] \u5f53 \\(n\\) \u8d8b\u4e8e\u65e0\u7a77\u4e14 \\(|x|\\lt 1\\) \u65f6\uff0c\u6709 \\[ \\sum_{k=0}^{\\infty}x^k=\\frac{1}{1-x} \\] \u7ea7\u6570\u79ef\u5206\u4e0e\u5fae\u5206 \u00b6 \u5bf9\u4e0a\u8ff0\u516c\u5f0f\u79ef\u5206\u53ef\u5f97 \\[ \\sum_{k=0}^{\\infty}kx^k=\\frac{x}{(1-x)^2} \\] \u53c2\u8003 \u00b6 \u7b97\u6cd5\u5bfc\u8bba. \u539f\u4e66\u7b2c3\u7248. \u9644\u5f55A.","title":"\u6c42\u548c\u516c\u5f0f"},{"location":"cs/math/summation.html#_1","text":"\u7ed9\u5b9a\u6709\u9650\u6570\u5217 \\(a_1,a_2,...,a_n\\) \uff0c\u5176\u4e2d \\(n\\ge 0\\) \uff0c\u8bb0\u6709\u9650\u548c \\[ \\sum_{k=1}^{n}a_k=a_1+a_2+\u00b7\u00b7\u00b7+a_n \\] \u82e5 \\(n=0\\) \uff0c\u5b9a\u4e49\u8be5\u548c\u5f0f\u503c\u4e3a \\(0\\) \u3002 \u7ed9\u5b9a\u65e0\u9650\u6570\u5217 \\(a_1,a_2,...\\) \uff0c\u5c06\u5176\u65e0\u9650\u548c \\(a_1+a_2+\u00b7\u00b7\u00b7\\) \u8bb0\u4f5c \\[ \\sum_{k=1}^{\\infty}a_k=\\lim_{n\\to \\infty}\\sum_{k=1}^{n}a_k \\]","title":"\u6c42\u548c\u516c\u5f0f\u53ca\u5176\u6027\u8d28"},{"location":"cs/math/summation.html#_2","text":"\\[ \\begin{array}{rl} \\displaystyle\\sum_{k=1}^{n}k&=\\frac{1}{2}n(n+1) \\\\ &=\\Theta(n^2) \\end{array} \\]","title":"\u7b49\u5dee\u7ea7\u6570"},{"location":"cs/math/summation.html#_3","text":"\\[ \\sum_{k=1}^{n}k^2=\\frac{n(n+1)(2n+1)}{6} \\] \\[ \\sum_{k=1}^{n}k^3=\\frac{n^2(n+1)^2}{4} \\]","title":"\u5e73\u65b9\u548c\u4e0e\u7acb\u65b9\u548c"},{"location":"cs/math/summation.html#_4","text":"\u5bf9\u5b9e\u6570 \\(x\\ne 1\\) \uff0c\u548c\u5f0f \\[ \\sum_{k=0}^{n}x^k=1+x+x^2+\u00b7\u00b7\u00b7+x^n \\] \u79f0\u4f5c\u51e0\u4f55\u7ea7\u6570\uff08\u6216\u6307\u6570\u7ea7\u6570\uff09\uff0c\u5176\u503c\u4e3a \\[ \\sum_{k=0}^{n}x^k=\\frac{x^{n+1}-1}{x-1} \\] \u5f53 \\(n\\) \u8d8b\u4e8e\u65e0\u7a77\u4e14 \\(|x|\\lt 1\\) \u65f6\uff0c\u6709 \\[ \\sum_{k=0}^{\\infty}x^k=\\frac{1}{1-x} \\]","title":"\u51e0\u4f55\u7ea7\u6570"},{"location":"cs/math/summation.html#_5","text":"\u5bf9\u4e0a\u8ff0\u516c\u5f0f\u79ef\u5206\u53ef\u5f97 \\[ \\sum_{k=0}^{\\infty}kx^k=\\frac{x}{(1-x)^2} \\]","title":"\u7ea7\u6570\u79ef\u5206\u4e0e\u5fae\u5206"},{"location":"cs/math/summation.html#_6","text":"\u7b97\u6cd5\u5bfc\u8bba. \u539f\u4e66\u7b2c3\u7248. \u9644\u5f55A.","title":"\u53c2\u8003"},{"location":"cs/problems/inversion-pairs.html","text":"TODO Question \u00b6 Given an array \\(a_1, a_2, ..., a_n\\) , count how many inversion pairs there are. \\(a_i\\) and \\(a_j\\) are inversion pairs if \\(i<j\\) and \\(a_i>a_j\\) . An example is as follows: Input: [3, 1, 2] Output: 2 Simple \u00b6 Use a nested loop. Its time complexity is \\(O(n^2)\\) . def inversion_pairs ( arr ): if not isinstance ( arr , list ) or len ( arr ) <= 1 : return 0 result = 0 for j in range ( 1 , len ( arr )): for i in range ( j ): if arr [ i ] > arr [ j ]: result += 1 return result Enhanced Merge Sort \u00b6 Like Merge Sort , the algorithm divides the array into two halves, counts and sorts the halves, then merges the two halves. Its time complexity is \\(O(n\\log{}n)\\) . def inversion_pairs ( arr ): temp = arr [:] return _inversion_pairs ( temp ) def _inversion_pairs ( arr ): if len ( arr ) <= 1 : return 0 m = len ( arr ) // 2 left = arr [: m ] right = arr [ m :] count = _inversion_pairs ( left ) + _inversion_pairs ( right ) # merge the two sorted halves i = j = k = 0 while i < len ( left ) and j < len ( right ): if left [ i ] <= right [ j ]: arr [ k ] = left [ i ] i += 1 else : arr [ k ] = right [ j ] count += ( m - i ) j += 1 k += 1 while i < len ( left ): arr [ k ] = left [ i ] i += 1 k += 1 while j < len ( right ): arr [ k ] = right [ j ] j += 1 k += 1 return count","title":"\u9006\u5e8f\u5bf9"},{"location":"cs/problems/inversion-pairs.html#question","text":"Given an array \\(a_1, a_2, ..., a_n\\) , count how many inversion pairs there are. \\(a_i\\) and \\(a_j\\) are inversion pairs if \\(i<j\\) and \\(a_i>a_j\\) . An example is as follows: Input: [3, 1, 2] Output: 2","title":"Question"},{"location":"cs/problems/inversion-pairs.html#simple","text":"Use a nested loop. Its time complexity is \\(O(n^2)\\) . def inversion_pairs ( arr ): if not isinstance ( arr , list ) or len ( arr ) <= 1 : return 0 result = 0 for j in range ( 1 , len ( arr )): for i in range ( j ): if arr [ i ] > arr [ j ]: result += 1 return result","title":"Simple"},{"location":"cs/problems/inversion-pairs.html#enhanced-merge-sort","text":"Like Merge Sort , the algorithm divides the array into two halves, counts and sorts the halves, then merges the two halves. Its time complexity is \\(O(n\\log{}n)\\) . def inversion_pairs ( arr ): temp = arr [:] return _inversion_pairs ( temp ) def _inversion_pairs ( arr ): if len ( arr ) <= 1 : return 0 m = len ( arr ) // 2 left = arr [: m ] right = arr [ m :] count = _inversion_pairs ( left ) + _inversion_pairs ( right ) # merge the two sorted halves i = j = k = 0 while i < len ( left ) and j < len ( right ): if left [ i ] <= right [ j ]: arr [ k ] = left [ i ] i += 1 else : arr [ k ] = right [ j ] count += ( m - i ) j += 1 k += 1 while i < len ( left ): arr [ k ] = left [ i ] i += 1 k += 1 while j < len ( right ): arr [ k ] = right [ j ] j += 1 k += 1 return count","title":"Enhanced Merge Sort"},{"location":"cs/problems/max-subsequence-sum.html","text":"TODO Question \u00b6 \u7ed9\u5b9a\u6570\u7ec4 \\(a_1, a_2, ..., a_n\\) \uff0c\u9009\u62e9\u4e00\u4e2a\u5b50\u5e8f\u5217\u4f7f\u5176\u548c\u6700\u5927\u3002 Solution 1 \u00b6 \u8bf7\u53c2\u8003 \u5206\u6cbb\u7b97\u6cd5 \uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(nlog{}n)\\) .","title":"\u6700\u5927\u5b50\u5e8f\u5217\u548c"},{"location":"cs/problems/max-subsequence-sum.html#question","text":"\u7ed9\u5b9a\u6570\u7ec4 \\(a_1, a_2, ..., a_n\\) \uff0c\u9009\u62e9\u4e00\u4e2a\u5b50\u5e8f\u5217\u4f7f\u5176\u548c\u6700\u5927\u3002","title":"Question"},{"location":"cs/problems/max-subsequence-sum.html#solution-1","text":"\u8bf7\u53c2\u8003 \u5206\u6cbb\u7b97\u6cd5 \uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a \\(O(nlog{}n)\\) .","title":"Solution 1"},{"location":"dev/docker.html","text":"","title":"Docker"},{"location":"dev/fastdfs.html","text":"TODO \u6982\u8ff0 \u00b6 FastFDS \u662f\u4e00\u4e2a\u7531C\u8bed\u8a00\u5b9e\u73b0\u7684\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002 FastDFS\u6709\u4e24\u4e2a\u89d2\u8272\uff1aTracker\uff0cStorage\uff1a Tracker \u4e3b\u8981\u505a\u8c03\u5ea6\u4f5c\u7528\uff0c\u8d77\u5230\u8d1f\u8f7d\u5747\u8861\u7684\u4f5c\u7528\uff1b\u8d1f\u8d23\u7ba1\u7406\u6240\u6709\u7684Storage\u548cGroup\uff0c\u6bcf\u4e00\u4e2aStorage\u518d\u542f\u52a8\u540e\u4f1a\u8fde\u63a5Tracker\uff0c\u544a\u77e5\u81ea\u5df1\u6240\u5c5e\u7684Group\uff0c\u5e76\u4fdd\u6301\u5468\u671f\u5fc3\u8df3\uff1b Storage \u5b58\u50a8\u8282\u70b9\uff0c\u4e3b\u8981\u63d0\u4f9b\u5bb9\u91cf\u548c\u5907\u4efd\u670d\u52a1\uff1b\u4ee5Group\u4e3a\u5355\u4f4d\uff0c\u6bcf\u4e2aGroup\u5185\u53ef\u4ee5\u6709\u591a\u53f0Storage\uff0c\u6570\u636e\u4e92\u76f8\u5907\u4efd\u3002 \u5b89\u88c5 \u00b6 \u5982\u679c Tracker \u548c Storage \u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u5219\u6bcf\u53f0\u670d\u52a1\u5668\u90fd\u9700\u8981\u5b89\u88c5\u3002 libfastcommon \u00b6 $ wget https://github.com/happyfish100/libfastcommon/archive/V1.0.7.tar.gz $ tar -zxvf V1.0.7.tar.gz $ cd libfastcommon-1.0.7 $ ./make.sh $ ./make.sh install FastDFS \u00b6 $ wget https://github.com/happyfish100/fastdfs/archive/V5.05.tar.gz $ tar -zxvf V5.05.tar.gz $ cd fastdfs-5.05 $ ./make.sh $ ./make.sh install \u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f1a\u751f\u6210 /etc/fdfs \u76ee\u5f55\uff0c\u5305\u542b\u4e09\u4e2a\u914d\u7f6e\u7684\u793a\u4f8b\u6587\u4ef6\u3002 \u914d\u7f6e Tracker \u548c Storage \u00b6 \u5728 /etc/fdfs \u76ee\u5f55\u4e0b\uff0c\u590d\u5236\u5e76\u4fee\u6539\u914d\u7f6e\uff1a $ cp tracker.conf.sample tracker.conf $ vim tracker.conf \u5173\u952e\u914d\u7f6e\uff1a base_path \u8bbe\u7f6e\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a /data/fastdfs/tracker port Tracker \u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4 22122 Tracker \u670d\u52a1\u547d\u4ee4 $ fdfs_trackerd /etc/fdfs/tracker.conf start $ fdfs_trackerd /etc/fdfs/tracker.conf stop \u542f\u52a8\u5b8c\u6210\u540e\uff0c base_path \u5bf9\u5e94\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210 data \u548c log \u4e24\u4e2a\u76ee\u5f55\u3002 \u5bf9\u4e8e Storage \u914d\u7f6e\u76f8\u4f3c\uff0c\u5728 /etc/fdfs \u76ee\u5f55\u4e0b\uff1a $ cp storage.conf.sample storage.conf $ vim storage.conf \u5173\u952e\u914d\u7f6e\uff1a base_path \u8bbe\u7f6e\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a /data/fastdfs/storage port Tracker \u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4 23000 tracker_server \u5bf9\u5e94 Tracker \u7684\u5730\u5740\uff0c\u5373 : Storage \u670d\u52a1\u547d\u4ee4 $ fdfs_storaged /etc/fdfs/storage.conf start $ fdfs_storaged /etc/fdfs/storage.conf stop \u542f\u52a8\u5b8c\u6210\u540e\uff0c base_path \u5bf9\u5e94\u76ee\u5f55\u4e0b\u4e5f\u4f1a\u751f\u6210 data \u548c log \u4e24\u4e2a\u76ee\u5f55\uff0c\u5176\u4e2d data \u5373\u662f\u4e0a\u4f20\u6587\u4ef6\u7684\u5b58\u50a8\u76ee\u5f55\u3002 \u6d4b\u8bd5 \u00b6 \u4efb\u610f\u673a\u5668\uff0c\u5728 etc/fdfs \u76ee\u5f55\u4e0b\uff0c\u590d\u5236\u4fee\u6539 client \u914d\u7f6e\uff1a $ cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf $ vim /etc/fdfs/client.conf \u5173\u952e\u914d\u7f6e\uff1a base_path \u8bbe\u7f6e\u65e5\u5fd7\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a /data/fastdfs/client tracker_server \u5bf9\u5e94 Tracker \u7684\u5730\u5740\uff0c\u5373 : \u4e0a\u4f20\u4efb\u610f\u6587\u4ef6\uff1a $ fdfs_test /etc/fdfs/client.conf upload <\u6587\u4ef6\u8def\u5f84> \u8fd4\u56de 'example file url' \u5373\u6210\u529f\uff0c\u540c\u65f6 Storage \u5b58\u50a8\u76ee\u5f55\u4e0b\u53ef\u4ee5\u53d1\u73b0\u4e0a\u4f20\u7684\u6587\u4ef6\u3002 HTTP \u8bbf\u95ee \u00b6 \u5728 Nginx \u7684\u914d\u7f6e\u4e2d\u6dfb\u52a0 location location /group1/M00 { alias /data/fastdfs/storage/data; } \u5f00\u673a\u542f\u52a8 \u00b6 \u7f16\u8f91 vim /etc/rc.d/rc.local \u6dfb\u52a0\u542f\u52a8\u547d\u4ee4\uff1a /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart \u5982\u679c\u5931\u8d25\uff0c\u4e3a\u8be5\u6587\u4ef6\u6dfb\u52a0\u6743\u9650\uff1a $ chmod +x /etc/rc.d/rc.local","title":"FasfDFS"},{"location":"dev/fastdfs.html#_1","text":"FastFDS \u662f\u4e00\u4e2a\u7531C\u8bed\u8a00\u5b9e\u73b0\u7684\u5f00\u6e90\u7684\u8f7b\u91cf\u7ea7\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u3002 FastDFS\u6709\u4e24\u4e2a\u89d2\u8272\uff1aTracker\uff0cStorage\uff1a Tracker \u4e3b\u8981\u505a\u8c03\u5ea6\u4f5c\u7528\uff0c\u8d77\u5230\u8d1f\u8f7d\u5747\u8861\u7684\u4f5c\u7528\uff1b\u8d1f\u8d23\u7ba1\u7406\u6240\u6709\u7684Storage\u548cGroup\uff0c\u6bcf\u4e00\u4e2aStorage\u518d\u542f\u52a8\u540e\u4f1a\u8fde\u63a5Tracker\uff0c\u544a\u77e5\u81ea\u5df1\u6240\u5c5e\u7684Group\uff0c\u5e76\u4fdd\u6301\u5468\u671f\u5fc3\u8df3\uff1b Storage \u5b58\u50a8\u8282\u70b9\uff0c\u4e3b\u8981\u63d0\u4f9b\u5bb9\u91cf\u548c\u5907\u4efd\u670d\u52a1\uff1b\u4ee5Group\u4e3a\u5355\u4f4d\uff0c\u6bcf\u4e2aGroup\u5185\u53ef\u4ee5\u6709\u591a\u53f0Storage\uff0c\u6570\u636e\u4e92\u76f8\u5907\u4efd\u3002","title":"\u6982\u8ff0"},{"location":"dev/fastdfs.html#_2","text":"\u5982\u679c Tracker \u548c Storage \u5728\u4e0d\u540c\u7684\u673a\u5668\u4e0a\uff0c\u5219\u6bcf\u53f0\u670d\u52a1\u5668\u90fd\u9700\u8981\u5b89\u88c5\u3002","title":"\u5b89\u88c5"},{"location":"dev/fastdfs.html#libfastcommon","text":"$ wget https://github.com/happyfish100/libfastcommon/archive/V1.0.7.tar.gz $ tar -zxvf V1.0.7.tar.gz $ cd libfastcommon-1.0.7 $ ./make.sh $ ./make.sh install","title":"libfastcommon"},{"location":"dev/fastdfs.html#fastdfs","text":"$ wget https://github.com/happyfish100/fastdfs/archive/V5.05.tar.gz $ tar -zxvf V5.05.tar.gz $ cd fastdfs-5.05 $ ./make.sh $ ./make.sh install \u5b89\u88c5\u6210\u529f\u540e\uff0c\u4f1a\u751f\u6210 /etc/fdfs \u76ee\u5f55\uff0c\u5305\u542b\u4e09\u4e2a\u914d\u7f6e\u7684\u793a\u4f8b\u6587\u4ef6\u3002","title":"FastDFS"},{"location":"dev/fastdfs.html#tracker-storage","text":"\u5728 /etc/fdfs \u76ee\u5f55\u4e0b\uff0c\u590d\u5236\u5e76\u4fee\u6539\u914d\u7f6e\uff1a $ cp tracker.conf.sample tracker.conf $ vim tracker.conf \u5173\u952e\u914d\u7f6e\uff1a base_path \u8bbe\u7f6e\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a /data/fastdfs/tracker port Tracker \u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4 22122 Tracker \u670d\u52a1\u547d\u4ee4 $ fdfs_trackerd /etc/fdfs/tracker.conf start $ fdfs_trackerd /etc/fdfs/tracker.conf stop \u542f\u52a8\u5b8c\u6210\u540e\uff0c base_path \u5bf9\u5e94\u76ee\u5f55\u4e0b\u4f1a\u751f\u6210 data \u548c log \u4e24\u4e2a\u76ee\u5f55\u3002 \u5bf9\u4e8e Storage \u914d\u7f6e\u76f8\u4f3c\uff0c\u5728 /etc/fdfs \u76ee\u5f55\u4e0b\uff1a $ cp storage.conf.sample storage.conf $ vim storage.conf \u5173\u952e\u914d\u7f6e\uff1a base_path \u8bbe\u7f6e\u6570\u636e\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a /data/fastdfs/storage port Tracker \u670d\u52a1\u7aef\u53e3\uff0c\u9ed8\u8ba4 23000 tracker_server \u5bf9\u5e94 Tracker \u7684\u5730\u5740\uff0c\u5373 : Storage \u670d\u52a1\u547d\u4ee4 $ fdfs_storaged /etc/fdfs/storage.conf start $ fdfs_storaged /etc/fdfs/storage.conf stop \u542f\u52a8\u5b8c\u6210\u540e\uff0c base_path \u5bf9\u5e94\u76ee\u5f55\u4e0b\u4e5f\u4f1a\u751f\u6210 data \u548c log \u4e24\u4e2a\u76ee\u5f55\uff0c\u5176\u4e2d data \u5373\u662f\u4e0a\u4f20\u6587\u4ef6\u7684\u5b58\u50a8\u76ee\u5f55\u3002","title":"\u914d\u7f6e Tracker \u548c Storage"},{"location":"dev/fastdfs.html#_3","text":"\u4efb\u610f\u673a\u5668\uff0c\u5728 etc/fdfs \u76ee\u5f55\u4e0b\uff0c\u590d\u5236\u4fee\u6539 client \u914d\u7f6e\uff1a $ cp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf $ vim /etc/fdfs/client.conf \u5173\u952e\u914d\u7f6e\uff1a base_path \u8bbe\u7f6e\u65e5\u5fd7\u5b58\u50a8\u76ee\u5f55\uff0c\u4f8b\u5982\uff1a /data/fastdfs/client tracker_server \u5bf9\u5e94 Tracker \u7684\u5730\u5740\uff0c\u5373 : \u4e0a\u4f20\u4efb\u610f\u6587\u4ef6\uff1a $ fdfs_test /etc/fdfs/client.conf upload <\u6587\u4ef6\u8def\u5f84> \u8fd4\u56de 'example file url' \u5373\u6210\u529f\uff0c\u540c\u65f6 Storage \u5b58\u50a8\u76ee\u5f55\u4e0b\u53ef\u4ee5\u53d1\u73b0\u4e0a\u4f20\u7684\u6587\u4ef6\u3002","title":"\u6d4b\u8bd5"},{"location":"dev/fastdfs.html#http","text":"\u5728 Nginx \u7684\u914d\u7f6e\u4e2d\u6dfb\u52a0 location location /group1/M00 { alias /data/fastdfs/storage/data; }","title":"HTTP \u8bbf\u95ee"},{"location":"dev/fastdfs.html#_4","text":"\u7f16\u8f91 vim /etc/rc.d/rc.local \u6dfb\u52a0\u542f\u52a8\u547d\u4ee4\uff1a /usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart /usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart \u5982\u679c\u5931\u8d25\uff0c\u4e3a\u8be5\u6587\u4ef6\u6dfb\u52a0\u6743\u9650\uff1a $ chmod +x /etc/rc.d/rc.local","title":"\u5f00\u673a\u542f\u52a8"},{"location":"dev/ftp.html","text":"TODO Overview \u00b6 FTP Get Started \u00b6 Install a FTP server on Linux and start service: $ yum -y install vsftpd $ systemctl start vsftpd $ firewall-cmd --zone = public --add-port = 21 /tcp [ --permanent ] Add a user for FTP: $ useradd <username> -s /sbin/nologin # can't log in system $ password <username> Customize relative configurations in /etc/vsftpd/vsftpd.conf like: anonymous_enable=NO userlist_enable=YES userlist_deny=NO userlist_file=/etc/vsftpd/user_list Then edit /etc/vsftpd/user_list , commenting other users and adding created above to specify the only user whose can access to FTP. Remember restarting the server. Notes : Users in the file ftpusers are always forbidden for security. If userlist_enable=NO , all users except those in ftpusers are allowed to access to the server. If userlist_enable=YES , who can access to the server depends on the file specified by userlist_file . It's a blacklist when userlist_deny=YES , otherwise, it's a whitelist. Access to the server (here is from Command Line): $ ftp <ip> $ User ( ip: ( none )) : anonymous # it will fail if anonymous_enable is set NO. $ password: # no password Login successful. ftp>","title":"FTP"},{"location":"dev/ftp.html#overview","text":"FTP","title":"Overview"},{"location":"dev/ftp.html#get-started","text":"Install a FTP server on Linux and start service: $ yum -y install vsftpd $ systemctl start vsftpd $ firewall-cmd --zone = public --add-port = 21 /tcp [ --permanent ] Add a user for FTP: $ useradd <username> -s /sbin/nologin # can't log in system $ password <username> Customize relative configurations in /etc/vsftpd/vsftpd.conf like: anonymous_enable=NO userlist_enable=YES userlist_deny=NO userlist_file=/etc/vsftpd/user_list Then edit /etc/vsftpd/user_list , commenting other users and adding created above to specify the only user whose can access to FTP. Remember restarting the server. Notes : Users in the file ftpusers are always forbidden for security. If userlist_enable=NO , all users except those in ftpusers are allowed to access to the server. If userlist_enable=YES , who can access to the server depends on the file specified by userlist_file . It's a blacklist when userlist_deny=YES , otherwise, it's a whitelist. Access to the server (here is from Command Line): $ ftp <ip> $ User ( ip: ( none )) : anonymous # it will fail if anonymous_enable is set NO. $ password: # no password Login successful. ftp>","title":"Get Started"},{"location":"dev/git.html","text":"TODO \u6982\u8ff0 \u00b6 Git \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002 .gitignore \u00b6 **Notes: ** \u539f\u5219 \u00b6 \u5ffd\u7565\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\u6587\u4ef6\uff0c\u4f8b\u5982 .idea \u76ee\u5f55\uff1b \u5ffd\u7565\u7f16\u8bd1\u751f\u6210\u7684\u6587\u4ef6\uff0c\u4f8b\u5982 .class \u6587\u4ef6\uff1b \u5ffd\u7565\u5305\u542b\u79c1\u6709\u4fe1\u606f\u7684\u6587\u4ef6\uff0c\u4f8b\u5982\u5305\u542b\u5bc6\u7801\u6216 token \u7684\u914d\u7f6e\u6587\u4ef6\u3002 Rules \u00b6 # \u5f00\u5934\u4e3a\u6ce8\u91ca\u884c; An optional prefix ! which negates the pattern. It is not possible to re-include a file if a parent directory of that file is excluded. The slash / is used as the directory separator. If there is a separator / at the end of the pattern then the pattern will only match directories. ** matches multi-directories. ? and [] are the same as those in regular expression. For example: /dir to ignore the whole directory *.zip to ignore all the files ending with '.zip' /dir/main.txt to ignore the specified file !/dir/main.txt not to ignore the file Notes \u00b6 Files already tracked by Git are not affected. To stop tracking a file that is currently tracked, use git rm --cached . $ git rm -r --cached target $ git commit -m '.gitignore' \u914d\u7f6e SSH \u00b6 ssh-keygen -t rsa -C \"example@email.com\" # \u751f\u6210\u516c\u94a5id_rsa.pub\u548c\u79c1\u94a5id_rsa ssh-add id_rsa # \u5c06\u79c1\u94a5\u52a0\u5165\u5230ssh\u4ee3\u7406\u4e2d # \u5c06\u516c\u94a5\u6dfb\u52a0\u5230 Git \u670d\u52a1\u5668\uff08\u4f8b\u5982 GitHub\uff09 ssh -T git@github.com # \u6d4b\u8bd5\u662f\u5426\u6210\u529f \u5982\u679c git clone \u5931\u8d25\uff0c\u5c1d\u8bd5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u914d\u7f6e Git \u4f7f\u7528\u7cfb\u7edf SSH \u800c\u975e\u81ea\u5e26\u7684 SSH. git config --global core.sshCommand \"'C:\\Windows\\System32\\OpenSSH\\ssh.exe'\" \u53c2\u8003 \u00b6 \u5b98\u65b9\u6587\u6863 . Git \u6559\u7a0b - \u5ed6\u96ea\u5cf0\u7684\u5b98\u65b9\u7f51\u7ad9 .","title":"Git"},{"location":"dev/git.html#_1","text":"Git \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u7248\u672c\u63a7\u5236\u7cfb\u7edf\u3002","title":"\u6982\u8ff0"},{"location":"dev/git.html#gitignore","text":"**Notes: **","title":".gitignore"},{"location":"dev/git.html#_2","text":"\u5ffd\u7565\u7cfb\u7edf\u81ea\u52a8\u751f\u6210\u7684\u6587\u4ef6\uff0c\u4f8b\u5982 .idea \u76ee\u5f55\uff1b \u5ffd\u7565\u7f16\u8bd1\u751f\u6210\u7684\u6587\u4ef6\uff0c\u4f8b\u5982 .class \u6587\u4ef6\uff1b \u5ffd\u7565\u5305\u542b\u79c1\u6709\u4fe1\u606f\u7684\u6587\u4ef6\uff0c\u4f8b\u5982\u5305\u542b\u5bc6\u7801\u6216 token \u7684\u914d\u7f6e\u6587\u4ef6\u3002","title":"\u539f\u5219"},{"location":"dev/git.html#rules","text":"# \u5f00\u5934\u4e3a\u6ce8\u91ca\u884c; An optional prefix ! which negates the pattern. It is not possible to re-include a file if a parent directory of that file is excluded. The slash / is used as the directory separator. If there is a separator / at the end of the pattern then the pattern will only match directories. ** matches multi-directories. ? and [] are the same as those in regular expression. For example: /dir to ignore the whole directory *.zip to ignore all the files ending with '.zip' /dir/main.txt to ignore the specified file !/dir/main.txt not to ignore the file","title":"Rules"},{"location":"dev/git.html#notes","text":"Files already tracked by Git are not affected. To stop tracking a file that is currently tracked, use git rm --cached . $ git rm -r --cached target $ git commit -m '.gitignore'","title":"Notes"},{"location":"dev/git.html#ssh","text":"ssh-keygen -t rsa -C \"example@email.com\" # \u751f\u6210\u516c\u94a5id_rsa.pub\u548c\u79c1\u94a5id_rsa ssh-add id_rsa # \u5c06\u79c1\u94a5\u52a0\u5165\u5230ssh\u4ee3\u7406\u4e2d # \u5c06\u516c\u94a5\u6dfb\u52a0\u5230 Git \u670d\u52a1\u5668\uff08\u4f8b\u5982 GitHub\uff09 ssh -T git@github.com # \u6d4b\u8bd5\u662f\u5426\u6210\u529f \u5982\u679c git clone \u5931\u8d25\uff0c\u5c1d\u8bd5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u914d\u7f6e Git \u4f7f\u7528\u7cfb\u7edf SSH \u800c\u975e\u81ea\u5e26\u7684 SSH. git config --global core.sshCommand \"'C:\\Windows\\System32\\OpenSSH\\ssh.exe'\"","title":"\u914d\u7f6e SSH"},{"location":"dev/git.html#_3","text":"\u5b98\u65b9\u6587\u6863 . Git \u6559\u7a0b - \u5ed6\u96ea\u5cf0\u7684\u5b98\u65b9\u7f51\u7ad9 .","title":"\u53c2\u8003"},{"location":"dev/kafka.html","text":"\u6982\u5ff5 \u00b6 Broker\uff1aKafka \u96c6\u7fa4\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u670d\u52a1\u5668\uff0c\u8fd9\u79cd\u670d\u52a1\u5668\u6210\u4e3a Broker \uff1b Topic\uff1a\u6bcf\u6761\u53d1\u9001\u5230 Kafka \u7684\u6d88\u606f\u90fd\u6709\u4e00\u4e2a\u7c7b\u522b\uff0c\u79f0\u4f5c Topic \uff1b Partition\uff1a Topic \u7684\u7269\u7406\u5206\u7247\uff0c\u6bcf\u4e2a Topic \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a Partition \uff1b Producer\uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff1b Consumer\uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff1b Consumer Group\uff1a\u6bcf\u4e00\u4e2a Consumer \u5c5e\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684 Group \u3002","title":"Kafka"},{"location":"dev/kafka.html#_1","text":"Broker\uff1aKafka \u96c6\u7fa4\u5305\u542b\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u670d\u52a1\u5668\uff0c\u8fd9\u79cd\u670d\u52a1\u5668\u6210\u4e3a Broker \uff1b Topic\uff1a\u6bcf\u6761\u53d1\u9001\u5230 Kafka \u7684\u6d88\u606f\u90fd\u6709\u4e00\u4e2a\u7c7b\u522b\uff0c\u79f0\u4f5c Topic \uff1b Partition\uff1a Topic \u7684\u7269\u7406\u5206\u7247\uff0c\u6bcf\u4e2a Topic \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a Partition \uff1b Producer\uff1a\u6d88\u606f\u751f\u4ea7\u8005\uff1b Consumer\uff1a\u6d88\u606f\u6d88\u8d39\u8005\uff1b Consumer Group\uff1a\u6bcf\u4e00\u4e2a Consumer \u5c5e\u4e8e\u4e00\u4e2a\u7279\u5b9a\u7684 Group \u3002","title":"\u6982\u5ff5"},{"location":"dev/linux.html","text":"TODO \u6982\u8ff0 \u00b6 Linux \u662f\u4e00\u79cd\u5f00\u6e90\u7684\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\uff0c\u5305\u62ec\u8bb8\u591a\u4e0d\u540c\u7684\u7248\u672c\uff0c\u8bf8\u5982 CentOS \u3001 Ubuntu \u7b49\u3002 \u5b89\u88c5 \u00b6 \u4e0b\u8f7d CentOS \u7684 ISO \u3002\u9664\u4e86\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u5b89\u88c5\u5728\u865a\u62df\u673a\u4e0a\uff0c\u6bd4\u5982 VMware \u3002 \u8fdc\u7a0b\u8fde\u63a5 \u00b6 \u4f7f\u7528 XShell \u53ef\u4ee5\u901a\u8fc7 SSH \uff08Linux \u901a\u5e38\u81ea\u5e26 SSH\uff09\u8fdc\u7a0b\u8fde\u63a5 Linux \u670d\u52a1\u5668\u3002\u67e5\u770b SSH \u72b6\u6001\uff1a service sshd status \uff0c\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a yum install openssh-server # \u5b89\u88c5 SSH vim /etc/ssh/ssh_config # \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 /bin/systemctl start sshd.service # \u542f\u52a8 SSH \u670d\u52a1 /bin/systemctl enable sshd.service # \u5f00\u673a\u81ea\u542f\u52a8 \u5927\u90e8\u5206\u7684\u8fdc\u7a0b\u8fde\u63a5\uff08\u6bd4\u5982 MySQL \u548c Redis \uff09\u90fd\u652f\u6301 SSH\uff0c\u6b64\u65f6\uff0cSSH \u9700\u8981\u914d\u7f6e\u4e3a\u5141\u8bb8 TCP \u8fde\u63a5\uff1a AllowTcpForwarding yes \u3002 \u955c\u50cf \u00b6 \u56fd\u5185\u53ef\u4ee5\u4fee\u6539\u8f6f\u4ef6\u670d\u52a1\u955c\u50cf\u4e3a aliyun\uff1a wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo # base wget -O /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo # epel yum clean all # \u66f4\u65b0\u955c\u50cf yum makecache # \u521b\u5efa\u7f13\u5b58 \u76ee\u5f55\u7ed3\u6784 \u00b6 RPM \u7ed3\u6784\u7684\u76ee\u5f55\u7ed3\u6784\u901a\u5e38\u8bbe\u7f6e\u5982\u4e0b\uff1a /etc : \u914d\u7f6e\u6587\u4ef6 /usr/bin : \u53ef\u6267\u884c\u6587\u4ef6 /usr/lib : \u52a8\u6001\u5e93 /usr/share/doc : \u7528\u6237\u6587\u6863 /usr/share/man : \u5e2e\u52a9\u6587\u6863 Get Started \u00b6 Linux \u662f\u4e00\u4e2a\u6743\u9650\u7ba1\u7406\u7684\u591a\u7528\u6237\u7cfb\u7edf. \u4f7f\u7528\u547d\u4ee4 su \u4ece\u666e\u901a\u7528\u6237\u5207\u6362\u4e3a root \u8eab\u4efd\uff0c\u4f7f\u7528\u547d\u4ee4 exit \u4ee5\u9000\u51fa\u3002 \u5f00\u53d1\u5de5\u5177 \u00b6 \u5b89\u88c5\u5e38\u89c1\u7684\u5f00\u53d1\u5de5\u5177 yum -y groupinstall \"Development tools\" yum install -y bash-completion vim lrzsz wget expect net-tools nc nmap tree dos2unix htop iftop iotop unzip telnet sl psmisc nethogs glances bc System and Partitions \u00b6 Each hardware device in Linux is regarded as a file . They are almost all under /dev directory. Service \u00b6 Relative commands are shown as follows: $ /bin/systemctl start <service> $ service <service> status $ /bin/systemctl enable <service> # start at startup User and Privilege \u00b6 id show ids useradd add a new user passwd [username] change password for users Files and Directories Management \u00b6 Path \u00b6 Absolute paths start with the root path / , such as /usr/share/doc . But on the contrary, relative paths don't start with / , share/etc for example. Commands \u00b6 Use -help to list some options of the command or use man / info commands to show details, such as man cd . Following are some common commands. Directory \u00b6 cd change directory pwd print working directory mkdir make a directory by a level. Append -p after the command if recursion is required. rmdir remove an empty directory by a level. Append -p if recursion is required. Operator \u00b6 ls list cp copy rm remove mv move Text Document \u00b6 cat concatenate content of file tac concatenate content in reverse direction nl print with line numbers more print one page. Click Space to next page or Enter to next line. less familiar to more head defaults to the first 10 lines tail familiar to head Upload and Download \u00b6 Install toolkit rz and sz by yum install lrzsz . Then use commands rz to upload or sz to download. Target files will be upload to current directory. Vim \u00b6 Misc \u00b6 Firewall \u00b6 The service name is firewalld and the command is firewall-cmd . Open the specific port when remote connections are refused. $ firewall-cmd --zone = public --add-port = <port/tcp> [ --permanent ] FAQ \u00b6 Pane is dead \u00b6 If it occurs to Pane is dead when installing, open settings of hardwares and then change CD/DVD (IDE) connection to the path of the ISO file. Connect to Internet \u00b6 If failed, open settings of current network connection of the host and allow Internet Connection Sharing . Static IP \u00b6 Edit the /etc/sysconfig/network-scripts/ifcfg-ens33 file: BOOTPROTO=\"static\" IPADDR=<ip> NETMASK=255.255.255.0 GATEWAY=<gateway> # same as that of the host DNS1=<dns1> # also same as those of the host DNS2=<dns2> References \u00b6 Linux \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b \u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc\\i","title":"Linux"},{"location":"dev/linux.html#_1","text":"Linux \u662f\u4e00\u79cd\u5f00\u6e90\u7684\u7c7b Unix \u64cd\u4f5c\u7cfb\u7edf\uff0c\u5305\u62ec\u8bb8\u591a\u4e0d\u540c\u7684\u7248\u672c\uff0c\u8bf8\u5982 CentOS \u3001 Ubuntu \u7b49\u3002","title":"\u6982\u8ff0"},{"location":"dev/linux.html#_2","text":"\u4e0b\u8f7d CentOS \u7684 ISO \u3002\u9664\u4e86\u670d\u52a1\u5668\uff0c\u4e5f\u53ef\u4ee5\u5b89\u88c5\u5728\u865a\u62df\u673a\u4e0a\uff0c\u6bd4\u5982 VMware \u3002","title":"\u5b89\u88c5"},{"location":"dev/linux.html#_3","text":"\u4f7f\u7528 XShell \u53ef\u4ee5\u901a\u8fc7 SSH \uff08Linux \u901a\u5e38\u81ea\u5e26 SSH\uff09\u8fdc\u7a0b\u8fde\u63a5 Linux \u670d\u52a1\u5668\u3002\u67e5\u770b SSH \u72b6\u6001\uff1a service sshd status \uff0c\u5982\u679c\u6ca1\u6709\uff0c\u53ef\u4ee5\u6309\u7167\u5982\u4e0b\u547d\u4ee4\u5b89\u88c5\uff1a yum install openssh-server # \u5b89\u88c5 SSH vim /etc/ssh/ssh_config # \u7f16\u8f91\u914d\u7f6e\u6587\u4ef6 /bin/systemctl start sshd.service # \u542f\u52a8 SSH \u670d\u52a1 /bin/systemctl enable sshd.service # \u5f00\u673a\u81ea\u542f\u52a8 \u5927\u90e8\u5206\u7684\u8fdc\u7a0b\u8fde\u63a5\uff08\u6bd4\u5982 MySQL \u548c Redis \uff09\u90fd\u652f\u6301 SSH\uff0c\u6b64\u65f6\uff0cSSH \u9700\u8981\u914d\u7f6e\u4e3a\u5141\u8bb8 TCP \u8fde\u63a5\uff1a AllowTcpForwarding yes \u3002","title":"\u8fdc\u7a0b\u8fde\u63a5"},{"location":"dev/linux.html#_4","text":"\u56fd\u5185\u53ef\u4ee5\u4fee\u6539\u8f6f\u4ef6\u670d\u52a1\u955c\u50cf\u4e3a aliyun\uff1a wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo # base wget -O /etc/yum.repos.d/epel-7.repo http://mirrors.aliyun.com/repo/epel-7.repo # epel yum clean all # \u66f4\u65b0\u955c\u50cf yum makecache # \u521b\u5efa\u7f13\u5b58","title":"\u955c\u50cf"},{"location":"dev/linux.html#_5","text":"RPM \u7ed3\u6784\u7684\u76ee\u5f55\u7ed3\u6784\u901a\u5e38\u8bbe\u7f6e\u5982\u4e0b\uff1a /etc : \u914d\u7f6e\u6587\u4ef6 /usr/bin : \u53ef\u6267\u884c\u6587\u4ef6 /usr/lib : \u52a8\u6001\u5e93 /usr/share/doc : \u7528\u6237\u6587\u6863 /usr/share/man : \u5e2e\u52a9\u6587\u6863","title":"\u76ee\u5f55\u7ed3\u6784"},{"location":"dev/linux.html#get-started","text":"Linux \u662f\u4e00\u4e2a\u6743\u9650\u7ba1\u7406\u7684\u591a\u7528\u6237\u7cfb\u7edf. \u4f7f\u7528\u547d\u4ee4 su \u4ece\u666e\u901a\u7528\u6237\u5207\u6362\u4e3a root \u8eab\u4efd\uff0c\u4f7f\u7528\u547d\u4ee4 exit \u4ee5\u9000\u51fa\u3002","title":"Get Started"},{"location":"dev/linux.html#_6","text":"\u5b89\u88c5\u5e38\u89c1\u7684\u5f00\u53d1\u5de5\u5177 yum -y groupinstall \"Development tools\" yum install -y bash-completion vim lrzsz wget expect net-tools nc nmap tree dos2unix htop iftop iotop unzip telnet sl psmisc nethogs glances bc","title":"\u5f00\u53d1\u5de5\u5177"},{"location":"dev/linux.html#system-and-partitions","text":"Each hardware device in Linux is regarded as a file . They are almost all under /dev directory.","title":"System and Partitions"},{"location":"dev/linux.html#service","text":"Relative commands are shown as follows: $ /bin/systemctl start <service> $ service <service> status $ /bin/systemctl enable <service> # start at startup","title":"Service"},{"location":"dev/linux.html#user-and-privilege","text":"id show ids useradd add a new user passwd [username] change password for users","title":"User and Privilege"},{"location":"dev/linux.html#files-and-directories-management","text":"","title":"Files and Directories Management"},{"location":"dev/linux.html#path","text":"Absolute paths start with the root path / , such as /usr/share/doc . But on the contrary, relative paths don't start with / , share/etc for example.","title":"Path"},{"location":"dev/linux.html#commands","text":"Use -help to list some options of the command or use man / info commands to show details, such as man cd . Following are some common commands.","title":"Commands"},{"location":"dev/linux.html#directory","text":"cd change directory pwd print working directory mkdir make a directory by a level. Append -p after the command if recursion is required. rmdir remove an empty directory by a level. Append -p if recursion is required.","title":"Directory"},{"location":"dev/linux.html#operator","text":"ls list cp copy rm remove mv move","title":"Operator"},{"location":"dev/linux.html#text-document","text":"cat concatenate content of file tac concatenate content in reverse direction nl print with line numbers more print one page. Click Space to next page or Enter to next line. less familiar to more head defaults to the first 10 lines tail familiar to head","title":"Text Document"},{"location":"dev/linux.html#upload-and-download","text":"Install toolkit rz and sz by yum install lrzsz . Then use commands rz to upload or sz to download. Target files will be upload to current directory.","title":"Upload and Download"},{"location":"dev/linux.html#vim","text":"","title":"Vim"},{"location":"dev/linux.html#misc","text":"","title":"Misc"},{"location":"dev/linux.html#firewall","text":"The service name is firewalld and the command is firewall-cmd . Open the specific port when remote connections are refused. $ firewall-cmd --zone = public --add-port = <port/tcp> [ --permanent ]","title":"Firewall"},{"location":"dev/linux.html#faq","text":"","title":"FAQ"},{"location":"dev/linux.html#pane-is-dead","text":"If it occurs to Pane is dead when installing, open settings of hardwares and then change CD/DVD (IDE) connection to the path of the ISO file.","title":"Pane is dead"},{"location":"dev/linux.html#connect-to-internet","text":"If failed, open settings of current network connection of the host and allow Internet Connection Sharing .","title":"Connect to Internet"},{"location":"dev/linux.html#static-ip","text":"Edit the /etc/sysconfig/network-scripts/ifcfg-ens33 file: BOOTPROTO=\"static\" IPADDR=<ip> NETMASK=255.255.255.0 GATEWAY=<gateway> # same as that of the host DNS1=<dns1> # also same as those of the host DNS2=<dns2>","title":"Static IP"},{"location":"dev/linux.html#references","text":"Linux \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b \u9e1f\u54e5\u7684Linux\u79c1\u623f\u83dc\\i","title":"References"},{"location":"dev/nginx.html","text":"\u5b89\u88c5 \u00b6 \u9884\u5148\u5b89\u88c5\uff0c yum install yum-utils \u521b\u5efa\u6587\u4ef6 /etc/yum.repos.d/nginx.repo \uff0c\u5185\u5bb9\u5982\u4e0b\uff0c [nginx-stable] name = nginx stable repo baseurl = http://nginx.org/packages/centos/$releasever/$basearch/ gpgcheck = 1 enabled = 1 gpgkey = https://nginx.org/keys/nginx_signing.key module_hotfixes = true [nginx-mainline] name = nginx mainline repo baseurl = http://nginx.org/packages/mainline/centos/$releasever/$basearch/ gpgcheck = 1 enabled = 0 gpgkey = https://nginx.org/keys/nginx_signing.key module_hotfixes = true \u6267\u884c\u5b89\u88c5\uff0c yum install nginx nginx\u5305\u542b\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u548c\u82e5\u5e72\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c nginx [ -c nginx.conf ] # \u542f\u52a8nginx\uff0c\u914d\u7f6e\u6587\u4ef6\u53ef\u9009 nginx -s stop # \u5feb\u901f\u9000\u51fa nginx -s quit # \u7b49\u5f85\u5de5\u4f5c\u8fdb\u7a0b\u6267\u884c\u5b8c\u5f53\u524d\u8bf7\u6c42\u540e\u9000\u51fa nginx -s reload # \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u542f\u52a8\u65b0\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u65e7\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7b49\u5f85\u5f53\u524d\u8bf7\u6c42\u6267\u884c\u5b8c\u6210\u540e\u9000\u51fa nginx -s reopen # \u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6 \u8bbf\u95ee Welcome to nginx \u67e5\u770bnginx\u662f\u5426\u542f\u52a8\u6210\u529f\u3002 \u914d\u7f6e \u00b6 nginx\u7684\u9ed8\u8ba4\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e3a nginx.conf \uff0c\u76ee\u5f55\u4e3a /usr/local/nginx/conf \uff0c /etc/nginx \u6216 /usr/local/etc/nginx . \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u53ef\u4ee5\u6267\u884c nginx -t [-c nginx.conf] \u9a8c\u8bc1\u914d\u7f6e\u6587\u4ef6\u662f\u5426\u6b63\u786e\u3002 \u53c2\u8003 \u00b6 nginx documentation","title":"Nginx"},{"location":"dev/nginx.html#_1","text":"\u9884\u5148\u5b89\u88c5\uff0c yum install yum-utils \u521b\u5efa\u6587\u4ef6 /etc/yum.repos.d/nginx.repo \uff0c\u5185\u5bb9\u5982\u4e0b\uff0c [nginx-stable] name = nginx stable repo baseurl = http://nginx.org/packages/centos/$releasever/$basearch/ gpgcheck = 1 enabled = 1 gpgkey = https://nginx.org/keys/nginx_signing.key module_hotfixes = true [nginx-mainline] name = nginx mainline repo baseurl = http://nginx.org/packages/mainline/centos/$releasever/$basearch/ gpgcheck = 1 enabled = 0 gpgkey = https://nginx.org/keys/nginx_signing.key module_hotfixes = true \u6267\u884c\u5b89\u88c5\uff0c yum install nginx nginx\u5305\u542b\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u548c\u82e5\u5e72\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c nginx [ -c nginx.conf ] # \u542f\u52a8nginx\uff0c\u914d\u7f6e\u6587\u4ef6\u53ef\u9009 nginx -s stop # \u5feb\u901f\u9000\u51fa nginx -s quit # \u7b49\u5f85\u5de5\u4f5c\u8fdb\u7a0b\u6267\u884c\u5b8c\u5f53\u524d\u8bf7\u6c42\u540e\u9000\u51fa nginx -s reload # \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u542f\u52a8\u65b0\u7684\u5de5\u4f5c\u8fdb\u7a0b\uff0c\u65e7\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7b49\u5f85\u5f53\u524d\u8bf7\u6c42\u6267\u884c\u5b8c\u6210\u540e\u9000\u51fa nginx -s reopen # \u91cd\u65b0\u6253\u5f00\u65e5\u5fd7\u6587\u4ef6 \u8bbf\u95ee Welcome to nginx \u67e5\u770bnginx\u662f\u5426\u542f\u52a8\u6210\u529f\u3002","title":"\u5b89\u88c5"},{"location":"dev/nginx.html#_2","text":"nginx\u7684\u9ed8\u8ba4\u4e3b\u914d\u7f6e\u6587\u4ef6\u4e3a nginx.conf \uff0c\u76ee\u5f55\u4e3a /usr/local/nginx/conf \uff0c /etc/nginx \u6216 /usr/local/etc/nginx . \u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u53ef\u4ee5\u6267\u884c nginx -t [-c nginx.conf] \u9a8c\u8bc1\u914d\u7f6e\u6587\u4ef6\u662f\u5426\u6b63\u786e\u3002","title":"\u914d\u7f6e"},{"location":"dev/nginx.html#_3","text":"nginx documentation","title":"\u53c2\u8003"},{"location":"dev/oauth.html","text":"TODO Overview \u00b6 OAuth is an open standard for access delegation, commonly used as a way for Internet users to grant websites or applications access to their information on other websites but without giving them the passwords. This is based on OAuth 2.0 . Roles \u00b6 User the owner of the resources Client the third application Authorization Server server to grant authorization Resource Server server to get resources Authorization Mode \u00b6 Client requests authorization from User. Authorization Server sends an authorization code to Client if User agreed. Client requests tokens from Authorization Server with the authorization code. Authorization Server returns an access token after confirming authorization. Client requests resources from Resource Server with the access token. Resource Server returns resources after verifying the token. Generally, an authorization code will expire in 10min and could be used only once. If an code is applied more than once, hijacked by an hacker for example, the access token verified by the code will turn invalid. As for an access token, valid time is 2h. References \u00b6 OAuth - Wikipedia \u7406\u89e3OAuth 2.0 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7","title":"OAuth"},{"location":"dev/oauth.html#overview","text":"OAuth is an open standard for access delegation, commonly used as a way for Internet users to grant websites or applications access to their information on other websites but without giving them the passwords. This is based on OAuth 2.0 .","title":"Overview"},{"location":"dev/oauth.html#roles","text":"User the owner of the resources Client the third application Authorization Server server to grant authorization Resource Server server to get resources","title":"Roles"},{"location":"dev/oauth.html#authorization-mode","text":"Client requests authorization from User. Authorization Server sends an authorization code to Client if User agreed. Client requests tokens from Authorization Server with the authorization code. Authorization Server returns an access token after confirming authorization. Client requests resources from Resource Server with the access token. Resource Server returns resources after verifying the token. Generally, an authorization code will expire in 10min and could be used only once. If an code is applied more than once, hijacked by an hacker for example, the access token verified by the code will turn invalid. As for an access token, valid time is 2h.","title":"Authorization Mode"},{"location":"dev/oauth.html#references","text":"OAuth - Wikipedia \u7406\u89e3OAuth 2.0 - \u962e\u4e00\u5cf0\u7684\u7f51\u7edc\u65e5\u5fd7","title":"References"},{"location":"dev/php.html","text":"TODO Overview \u00b6 Learn PHP . References \u00b6 PHP: Documentation PHP: PHP \u624b\u518c - Manual","title":"Get Started"},{"location":"dev/php.html#overview","text":"Learn PHP .","title":"Overview"},{"location":"dev/php.html#references","text":"PHP: Documentation PHP: PHP \u624b\u518c - Manual","title":"References"},{"location":"dev/references.html","text":"TODO Priority of Operators \u00b6 \u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u7ed3\u5408\u6027 1 ()\u3001[] \u4ece\u5de6\u5411\u53f3 2 !\u3001+\u3001-\u3001~\u3001++\u3001-- \u4ece\u53f3\u5411\u5de6 3 *\u3001/\u3001% \u4ece\u5de6\u5411\u53f3 4 +\u3001- \u4ece\u5de6\u5411\u53f3 5 \u00ab\u3001\u00bb\u3001>>> \u4ece\u5de6\u5411\u53f3 6 <\u3001<=\u3001>\u3001>=\u3001instanceof \u4ece\u5de6\u5411\u53f3 7 ==\u3001!= \u4ece\u5de6\u5411\u53f3 8 & \u4ece\u5de6\u5411\u53f3 9 ^ \u4ece\u5de6\u5411\u53f3 10 | 11 && \u4ece\u5de6\u5411\u53f3 12 || 13 ?: \u4ece\u53f3\u5411\u5de6 14 =\u3001+=\u3001-=\u3001*=\u3001/=\u3001&=\u3001|=\u3001^=\u3001~=\u3001\u00ab=\u3001\u00bb=\u3001>>>= \u4ece\u53f3\u5411\u5de6","title":"References"},{"location":"dev/references.html#priority-of-operators","text":"\u4f18\u5148\u7ea7 \u8fd0\u7b97\u7b26 \u7ed3\u5408\u6027 1 ()\u3001[] \u4ece\u5de6\u5411\u53f3 2 !\u3001+\u3001-\u3001~\u3001++\u3001-- \u4ece\u53f3\u5411\u5de6 3 *\u3001/\u3001% \u4ece\u5de6\u5411\u53f3 4 +\u3001- \u4ece\u5de6\u5411\u53f3 5 \u00ab\u3001\u00bb\u3001>>> \u4ece\u5de6\u5411\u53f3 6 <\u3001<=\u3001>\u3001>=\u3001instanceof \u4ece\u5de6\u5411\u53f3 7 ==\u3001!= \u4ece\u5de6\u5411\u53f3 8 & \u4ece\u5de6\u5411\u53f3 9 ^ \u4ece\u5de6\u5411\u53f3 10 | 11 && \u4ece\u5de6\u5411\u53f3 12 || 13 ?: \u4ece\u53f3\u5411\u5de6 14 =\u3001+=\u3001-=\u3001*=\u3001/=\u3001&=\u3001|=\u3001^=\u3001~=\u3001\u00ab=\u3001\u00bb=\u3001>>>= \u4ece\u53f3\u5411\u5de6","title":"Priority of Operators"},{"location":"dev/sqlite.html","text":"TODO Overview \u00b6 SQLite is a C-language and small SQL database engine. Get Started \u00b6 Almost every distribution of Linux preinstalls SQLite. Use sqlite3 to check and enter the prompt. Commands \u00b6 Commands of SQLite start with a dot . which doesn't end with ; . Refer to details of all commands by .help . -- instructions .help -- values of settings .show -- display of headers of tables .header on -- Left-aligned column for output .mode column -- schema of table 'sqlite-master' .schema sqlite_master Datatypes \u00b6 SQLite uses a more general dynamic type system. In SQLite, the datatype of a value is associated with the value itself, not with its container - the particular column in which the value is stored. Each value stored in an SQLite database (or manipulated by the database engine) has one of the following storage classes: NULL . The value is a NULL value. INTEGER . The value is a signed integer, stored in 1, 2, 3, 4, 6, or 8 bytes depending on the magnitude of the value. REAL . The value is a floating point value, stored as an 8-byte IEEE floating point number. TEXT . The value is a text string, stored using the database encoding (UTF-8, UTF-16BE or UTF-16LE). BLOB . The value is a blob of data, stored exactly as it was input. Any column in an SQLite version 3 database, except an INTEGER PRIMARY KEY column, may be used to store a value of any storage class. Boolean and Datetime \u00b6 SQLite does not have a separate Boolean storage class. Instead, Boolean values are stored as integers 0 (false) and 1 (true). SQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in Date And Time Functions of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values: TEXT as ISO8601 strings (\"YYYY-MM-DD HH:MM:SS.SSS\"). REAL as Julian day numbers, the number of days since noon in Greenwich on November 24, 4714 B.C. according to the proleptic Gregorian calendar. INTEGER as Unix Time, the number of seconds since 1970-01-01 00:00:00 UTC. Applications can chose to store dates and times in any of these formats and freely convert between formats using the built-in date and time functions . Type Affinity \u00b6 Syntax \u00b6 A SQLite statement ends with ; . Database \u00b6 $ sqlite3 test.db # create a new db or connect to a database which points to a file named test.db $ sqlite3 test.db .dump > test.sql # backup $ sqlite3 test.db < test.sql # recover When connecting to a database which is generally named after main , use ATTACH command to get connection of annother database. Names main and temp , reserved for main database and that for temporary tables and other data, are not recommended to attached as. .databases -- output: 0 main /home/user_name/my.db ATTACH DATABASE 'test.db' as test; .databases -- output: 0 main /home/user_name/my.db -- output: 2 test /home/user_name/test.db DETACH DATABASE test; Tables \u00b6","title":"SQLite"},{"location":"dev/sqlite.html#overview","text":"SQLite is a C-language and small SQL database engine.","title":"Overview"},{"location":"dev/sqlite.html#get-started","text":"Almost every distribution of Linux preinstalls SQLite. Use sqlite3 to check and enter the prompt.","title":"Get Started"},{"location":"dev/sqlite.html#commands","text":"Commands of SQLite start with a dot . which doesn't end with ; . Refer to details of all commands by .help . -- instructions .help -- values of settings .show -- display of headers of tables .header on -- Left-aligned column for output .mode column -- schema of table 'sqlite-master' .schema sqlite_master","title":"Commands"},{"location":"dev/sqlite.html#datatypes","text":"SQLite uses a more general dynamic type system. In SQLite, the datatype of a value is associated with the value itself, not with its container - the particular column in which the value is stored. Each value stored in an SQLite database (or manipulated by the database engine) has one of the following storage classes: NULL . The value is a NULL value. INTEGER . The value is a signed integer, stored in 1, 2, 3, 4, 6, or 8 bytes depending on the magnitude of the value. REAL . The value is a floating point value, stored as an 8-byte IEEE floating point number. TEXT . The value is a text string, stored using the database encoding (UTF-8, UTF-16BE or UTF-16LE). BLOB . The value is a blob of data, stored exactly as it was input. Any column in an SQLite version 3 database, except an INTEGER PRIMARY KEY column, may be used to store a value of any storage class.","title":"Datatypes"},{"location":"dev/sqlite.html#boolean-and-datetime","text":"SQLite does not have a separate Boolean storage class. Instead, Boolean values are stored as integers 0 (false) and 1 (true). SQLite does not have a storage class set aside for storing dates and/or times. Instead, the built-in Date And Time Functions of SQLite are capable of storing dates and times as TEXT, REAL, or INTEGER values: TEXT as ISO8601 strings (\"YYYY-MM-DD HH:MM:SS.SSS\"). REAL as Julian day numbers, the number of days since noon in Greenwich on November 24, 4714 B.C. according to the proleptic Gregorian calendar. INTEGER as Unix Time, the number of seconds since 1970-01-01 00:00:00 UTC. Applications can chose to store dates and times in any of these formats and freely convert between formats using the built-in date and time functions .","title":"Boolean and Datetime"},{"location":"dev/sqlite.html#type-affinity","text":"","title":"Type Affinity"},{"location":"dev/sqlite.html#syntax","text":"A SQLite statement ends with ; .","title":"Syntax"},{"location":"dev/sqlite.html#database","text":"$ sqlite3 test.db # create a new db or connect to a database which points to a file named test.db $ sqlite3 test.db .dump > test.sql # backup $ sqlite3 test.db < test.sql # recover When connecting to a database which is generally named after main , use ATTACH command to get connection of annother database. Names main and temp , reserved for main database and that for temporary tables and other data, are not recommended to attached as. .databases -- output: 0 main /home/user_name/my.db ATTACH DATABASE 'test.db' as test; .databases -- output: 0 main /home/user_name/my.db -- output: 2 test /home/user_name/test.db DETACH DATABASE test;","title":"Database"},{"location":"dev/sqlite.html#tables","text":"","title":"Tables"},{"location":"dev/apis/douban.html","text":"TODO Overview \u00b6 Refer to API documenetations . Notes : Its base url is https://api.douban.com and the method of the request is GET unless otherwise stated. OAuth \u00b6 Douban supports three ways of OAuth. User \u00b6 UserInfo \u00b6 /v2/user/{user_id} Example: https://api.douban.com/v2/user/1000001 Movie \u00b6 subject \u00b6 Refer to . /v2/movie/subject/{subject_id} { \"id\" : \"1764796\" , \"title\" : \"\u673a\u5668\u4eba9\u53f7\" , \"original_title\" : \"9\" , \"aka\" : [ \"9\uff1a\u672b\u4e16\u51b3\u6218\" , \"\u4e5d\" , \"Number 9\" , \"\u673a\u5668\u4eba9\u53f7\" ], \"alt\" : \"https://movie.douban.com/subject/1764796/\" , \"mobile_url\" : \"https://movie.douban.com/subject/1764796/mobile\" , \"year\" : \"2009\" , \"languages\" : [ \"\u82f1\u8bed\" ], \"countries\" : [ \"\u7f8e\u56fd\" ], \"genres\" : [ \"\u79d1\u5e7b\" , \"\u52a8\u753b\" ], // 3 at most \"durations\" : [ \"79 \u5206\u949f\" ], \"subtype\" : \"movie\" , // movie/tv \"mainland_pubdate\" : \"\" , \"pubdates\" : [ \"2009-09-09(\u7f8e\u56fd)\" ], \"pubdate\" : \"\" , // deprecated \"share_url\" : \"http://m.douban.com/movie/subject/1764796\" , \"website\" : \"\" , \"douban_site\" : \"\" , \"images\" : { \"small\" : \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\" , \"large\" : \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\" , \"medium\" : \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\" }, \"has_schedule\" : false , // \u5f71\u8baf \"schedule_url\" : \"\" , // movie only \"bloopers\" : [], // \u82b1\u7d6e \"blooper_urls\" : [], \"trailers\" : [], // \u9884\u544a\u7247 \"trailer_urls\" : [], // 4 at most \"clips\" : [], // \u7247\u6bb5 \"clip_urls\" : [], // 4 at most \"tags\" : [ \"\u52a8\u753b\" , \"\u79d1\u5e7b\" , ... ], \"wish_count\" : 19347 , \"do_count\" : null , // defaults to 0 if tv else null \"collect_count\" : 92273 , \"seasons_count\" : null , // tv only \"current_season\" : null , // tv only \"episodes_count\" : null , // tv only \"summary\" : \"\u673a\u5668\u4eba9\u53f7\uff08\u4f0a\u5229\u4e9a\u2022\u4f0d\u5fb7 Elijah Wood \u9970\uff09\u7a81\u7136\u9192\u6765\uff0c\u2026\u2026\u00a9\u8c46\u74e3\" , \"collection\" : null , \"has_ticket\" : false , \"ratings_count\" : 67399 , \"rating\" : { \"max\" : 10 , \"average\" : 7.5 , \"details\" : { \"1\" : 212.0 , \"3\" : 16543.0 , \"2\" : 1640.0 , \"5\" : 8213.0 , \"4\" : 22969.0 }, \"stars\" : \"40\" , \"min\" : 0 }, \"directors\" : [], // refer to #simple-celebrity \"writers\" : [], // ditto \"casts\" : [], // ditto, 4 at most \"comments_count\" : 10042 , // short ones \"popular_comments\" : [], // first 10, refer to #comment \"photos_count\" : 145 , \"photos\" : [], // first 10, refer to #simple-photo \"reviews_count\" : 308 , // former ones, commonly in the form of articles \"popular_reviews\" : [], // first 10, refer to #simple-review \"has_video\" : true , \"videos\" : [ { \"source\" : { \"literal\" : \"qq\" , \"pic\" : \"http://img3.doubanio.com/f/movie/0a74f4379607fa731489d7f34daa545df9481fa0/pics/movie/video-qq.png\" , \"name\" : \"\u817e\u8baf\u89c6\u9891\" }, \"sample_link\" : \"http://v.qq.com/x/cover/uzuqdig87eggmiw.html?ptag=douban.movie\" , \"video_id\" : \"uzuqdig87eggmiw\" , \"need_pay\" : true } ] } photos \u00b6 Refer to Photo and Simple Subject . /v2/movie/subject/{subject_id}/photos?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"total\" : 48 , \"photos\" : [], // refer to #photo \"subject\" : {} // refer to #simple-subject } reviews \u00b6 Refer to Review and Simple Subject . /v2/movie/subject/{subject_id}/reviews?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"next_start\" : 20 , \"total\" : 9750 , \"reviews\" : [], // refer to #review \"subject\" : {} // refer to #simple-subject } comments \u00b6 Refer to Comment and Simple Subject . /v2/movie/subject/{subject_id}/comments?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"next_start\" : 20 , \"total\" : 392428 , \"comments\" : [], // refer to #comment \"subject\" : {} // refer to #simple-subject } celebrity \u00b6 Refer to Simple Subject and Simple Photo . /v2/movie/celebrity/{celebrity_id} { \"id\" : \"1054521\" , \"name\" : \"\u8482\u59c6\u00b7\u7f57\u5bbe\u65af\" , \"name_en\" : \"Tim Robbins\" , \"alt\" : \"https://movie.douban.com/celebrity/1054521/\" , \"mobile_url\" : \"https://movie.douban.com/celebrity/1054521/mobile\" , \"avatars\" : { \"small\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\" , \"large\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\" , \"medium\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\" }, \"summary\" : \"\u8482\u59c6\u00b7\u7f57\u5bbe\u65af\uff0c\u539f\u540d\u8482\u83ab\u897f\u00b7\u4f5b\u6717\u897f\u65af\u00b7\u7f57\u5bbe\u65af\uff08Timothy Francis Robbins\uff09\uff0c...\" , \"aka\" : [], \"aka_en\" : [ \"Timothy Francis Robbins (\u672c\u540d)\" ], \"website\" : \"\" , \"gender\" : \"\u7537\" , \"birthday\" : \"1958-10-16\" , \"born_place\" : \"\u7f8e\u56fd,\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde,\u897f\u79d1\u7ef4\u7eb3\" , \"professions\" : [ \"\" , \"\" , \"\u5bfc\u6f14\" , \"\u5236\u7247\u4eba\" , \"\u7f16\u5267\" ], \"constellation\" : \"\u5929\u79e4\u5ea7\" , \"works\" : [], // 5 at most, refer to #simple-subject \"photos\" : [], // 10 at most, refer to #simple-photo } photos \u00b6 Refer to Photo and Simple Celebrity . /v2/movie/celebrity/{celebrity_id}/photos?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"total\" : 58 , \"photos\" : [], // refer to #photo \"celebrity\" : {} // refer to #simple-celebrity } works \u00b6 Refer to Simple Subject and Simple Celebrity . /v2/movie/celebrity/{celebrity_id}/works?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"total\" : 89 , \"works\" : [], // refer to #simple-subject \"celebrity\" : {} // refer to #simple-celebrity } top250 \u00b6 Refer to Simple Subject . /v2/movie/top250?start=0&count=20 { \"count\" : 20 , \"start\" : 0 , \"total\" : 250 , \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u8c46\u74e3\u7535\u5f71Top250\" } weekly \u00b6 Refer to Simple Subject . /v2/movie/weekly { \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u8c46\u74e3\u7535\u5f71\u672c\u5468\u53e3\u7891\u699c\" } new movies \u00b6 Refer to Simple Subject . /v2/movie/new_movies { \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u8c46\u74e3\u7535\u5f71\u65b0\u7247\u699c\" } in theaters \u00b6 Refer to Simple Subject . /v2/movie/in_theaters?start=0&count=20&city=\u5317\u4eac { \"count\" : 20 , \"start\" : 0 , \"total\" : 0 , \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u6b63\u5728\u4e0a\u6620\u7684\u7535\u5f71-\u5317\u4eac\" } coming soon \u00b6 Refer to Simple Subject . /v2/movie/coming_soon?start=0&count=20 { \"count\" : 20 , \"start\" : 0 , \"total\" : 0 , \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u5373\u5c06\u4e0a\u6620\u7684\u7535\u5f71\" } Appendices \u00b6 Simple Subject \u00b6 Refer to Simple Celebrity . { \"id\" : \"1292052\" , \"title\" : \"\u8096\u7533\u514b\u7684\u6551\u8d4e\" , \"original_title\" : \"The Shawshank Redemption\" , \"alt\" : \"https://movie.douban.com/subject/1292052/\" , \"images\" : { \"small\" : \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\" , \"large\" : \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\" , \"medium\" : \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\" }, \"rating\" : { \"max\" : 10 , \"average\" : 9.7 , \"details\" : { \"1\" : 1546.0 , \"3\" : 20660.0 , \"2\" : 1258.0 , \"5\" : 1335300.0 , \"4\" : 210663.0 }, \"stars\" : \"50\" , \"min\" : 0 }, \"mainland_pubdate\" : \"\" , \"pubdates\" : [ \"1994-09-10(\u591a\u4f26\u591a\u7535\u5f71\u8282)\" , \"1994-10-14(\u7f8e\u56fd)\" ], \"year\" : \"1994\" , \"genres\" : [ \"\u72af\u7f6a\" , \"\u5267\u60c5\" ], \"durations\" : [ \"142\u5206\u949f\" ], \"subtype\" : \"movie\" , \"collect_count\" : 2839928 , \"casts\" : [], // refer to #simple-celebrity \"directors\" : [], // ditto \"has_video\" : true , } Simple Celebrity \u00b6 Book \u00b6 Info \u00b6 /v2/book/{book_id} Response \u00b6 Appendices \u00b6 Simple Celebrity \u00b6 { \"id\" : \"1276787\" , \"name\" : \"\u7533\u00b7\u963f\u514b\" , \"name_en\" : \"Shane Acker\" , \"alt\" : \"https://movie.douban.com/celebrity/1276787/\" , \"avatars\" : { \"small\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\" , \"large\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\" , \"medium\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\" } }","title":"Douban"},{"location":"dev/apis/douban.html#overview","text":"Refer to API documenetations . Notes : Its base url is https://api.douban.com and the method of the request is GET unless otherwise stated.","title":"Overview"},{"location":"dev/apis/douban.html#oauth","text":"Douban supports three ways of OAuth.","title":"OAuth"},{"location":"dev/apis/douban.html#user","text":"","title":"User"},{"location":"dev/apis/douban.html#userinfo","text":"/v2/user/{user_id} Example: https://api.douban.com/v2/user/1000001","title":"UserInfo"},{"location":"dev/apis/douban.html#movie","text":"","title":"Movie"},{"location":"dev/apis/douban.html#subject","text":"Refer to . /v2/movie/subject/{subject_id} { \"id\" : \"1764796\" , \"title\" : \"\u673a\u5668\u4eba9\u53f7\" , \"original_title\" : \"9\" , \"aka\" : [ \"9\uff1a\u672b\u4e16\u51b3\u6218\" , \"\u4e5d\" , \"Number 9\" , \"\u673a\u5668\u4eba9\u53f7\" ], \"alt\" : \"https://movie.douban.com/subject/1764796/\" , \"mobile_url\" : \"https://movie.douban.com/subject/1764796/mobile\" , \"year\" : \"2009\" , \"languages\" : [ \"\u82f1\u8bed\" ], \"countries\" : [ \"\u7f8e\u56fd\" ], \"genres\" : [ \"\u79d1\u5e7b\" , \"\u52a8\u753b\" ], // 3 at most \"durations\" : [ \"79 \u5206\u949f\" ], \"subtype\" : \"movie\" , // movie/tv \"mainland_pubdate\" : \"\" , \"pubdates\" : [ \"2009-09-09(\u7f8e\u56fd)\" ], \"pubdate\" : \"\" , // deprecated \"share_url\" : \"http://m.douban.com/movie/subject/1764796\" , \"website\" : \"\" , \"douban_site\" : \"\" , \"images\" : { \"small\" : \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\" , \"large\" : \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\" , \"medium\" : \"http://img1.doubanio.com/view/photo/s_ratio_poster/public/p494268647.jpg\" }, \"has_schedule\" : false , // \u5f71\u8baf \"schedule_url\" : \"\" , // movie only \"bloopers\" : [], // \u82b1\u7d6e \"blooper_urls\" : [], \"trailers\" : [], // \u9884\u544a\u7247 \"trailer_urls\" : [], // 4 at most \"clips\" : [], // \u7247\u6bb5 \"clip_urls\" : [], // 4 at most \"tags\" : [ \"\u52a8\u753b\" , \"\u79d1\u5e7b\" , ... ], \"wish_count\" : 19347 , \"do_count\" : null , // defaults to 0 if tv else null \"collect_count\" : 92273 , \"seasons_count\" : null , // tv only \"current_season\" : null , // tv only \"episodes_count\" : null , // tv only \"summary\" : \"\u673a\u5668\u4eba9\u53f7\uff08\u4f0a\u5229\u4e9a\u2022\u4f0d\u5fb7 Elijah Wood \u9970\uff09\u7a81\u7136\u9192\u6765\uff0c\u2026\u2026\u00a9\u8c46\u74e3\" , \"collection\" : null , \"has_ticket\" : false , \"ratings_count\" : 67399 , \"rating\" : { \"max\" : 10 , \"average\" : 7.5 , \"details\" : { \"1\" : 212.0 , \"3\" : 16543.0 , \"2\" : 1640.0 , \"5\" : 8213.0 , \"4\" : 22969.0 }, \"stars\" : \"40\" , \"min\" : 0 }, \"directors\" : [], // refer to #simple-celebrity \"writers\" : [], // ditto \"casts\" : [], // ditto, 4 at most \"comments_count\" : 10042 , // short ones \"popular_comments\" : [], // first 10, refer to #comment \"photos_count\" : 145 , \"photos\" : [], // first 10, refer to #simple-photo \"reviews_count\" : 308 , // former ones, commonly in the form of articles \"popular_reviews\" : [], // first 10, refer to #simple-review \"has_video\" : true , \"videos\" : [ { \"source\" : { \"literal\" : \"qq\" , \"pic\" : \"http://img3.doubanio.com/f/movie/0a74f4379607fa731489d7f34daa545df9481fa0/pics/movie/video-qq.png\" , \"name\" : \"\u817e\u8baf\u89c6\u9891\" }, \"sample_link\" : \"http://v.qq.com/x/cover/uzuqdig87eggmiw.html?ptag=douban.movie\" , \"video_id\" : \"uzuqdig87eggmiw\" , \"need_pay\" : true } ] }","title":"subject"},{"location":"dev/apis/douban.html#photos","text":"Refer to Photo and Simple Subject . /v2/movie/subject/{subject_id}/photos?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"total\" : 48 , \"photos\" : [], // refer to #photo \"subject\" : {} // refer to #simple-subject }","title":"photos"},{"location":"dev/apis/douban.html#reviews","text":"Refer to Review and Simple Subject . /v2/movie/subject/{subject_id}/reviews?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"next_start\" : 20 , \"total\" : 9750 , \"reviews\" : [], // refer to #review \"subject\" : {} // refer to #simple-subject }","title":"reviews"},{"location":"dev/apis/douban.html#comments","text":"Refer to Comment and Simple Subject . /v2/movie/subject/{subject_id}/comments?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"next_start\" : 20 , \"total\" : 392428 , \"comments\" : [], // refer to #comment \"subject\" : {} // refer to #simple-subject }","title":"comments"},{"location":"dev/apis/douban.html#celebrity","text":"Refer to Simple Subject and Simple Photo . /v2/movie/celebrity/{celebrity_id} { \"id\" : \"1054521\" , \"name\" : \"\u8482\u59c6\u00b7\u7f57\u5bbe\u65af\" , \"name_en\" : \"Tim Robbins\" , \"alt\" : \"https://movie.douban.com/celebrity/1054521/\" , \"mobile_url\" : \"https://movie.douban.com/celebrity/1054521/mobile\" , \"avatars\" : { \"small\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\" , \"large\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\" , \"medium\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p17525.jpg\" }, \"summary\" : \"\u8482\u59c6\u00b7\u7f57\u5bbe\u65af\uff0c\u539f\u540d\u8482\u83ab\u897f\u00b7\u4f5b\u6717\u897f\u65af\u00b7\u7f57\u5bbe\u65af\uff08Timothy Francis Robbins\uff09\uff0c...\" , \"aka\" : [], \"aka_en\" : [ \"Timothy Francis Robbins (\u672c\u540d)\" ], \"website\" : \"\" , \"gender\" : \"\u7537\" , \"birthday\" : \"1958-10-16\" , \"born_place\" : \"\u7f8e\u56fd,\u52a0\u5229\u798f\u5c3c\u4e9a\u5dde,\u897f\u79d1\u7ef4\u7eb3\" , \"professions\" : [ \"\" , \"\" , \"\u5bfc\u6f14\" , \"\u5236\u7247\u4eba\" , \"\u7f16\u5267\" ], \"constellation\" : \"\u5929\u79e4\u5ea7\" , \"works\" : [], // 5 at most, refer to #simple-subject \"photos\" : [], // 10 at most, refer to #simple-photo }","title":"celebrity"},{"location":"dev/apis/douban.html#photos_1","text":"Refer to Photo and Simple Celebrity . /v2/movie/celebrity/{celebrity_id}/photos?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"total\" : 58 , \"photos\" : [], // refer to #photo \"celebrity\" : {} // refer to #simple-celebrity }","title":"photos"},{"location":"dev/apis/douban.html#works","text":"Refer to Simple Subject and Simple Celebrity . /v2/movie/celebrity/{celebrity_id}/works?start=0&count=20 { \"start\" : 0 , \"count\" : 20 , \"total\" : 89 , \"works\" : [], // refer to #simple-subject \"celebrity\" : {} // refer to #simple-celebrity }","title":"works"},{"location":"dev/apis/douban.html#top250","text":"Refer to Simple Subject . /v2/movie/top250?start=0&count=20 { \"count\" : 20 , \"start\" : 0 , \"total\" : 250 , \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u8c46\u74e3\u7535\u5f71Top250\" }","title":"top250"},{"location":"dev/apis/douban.html#weekly","text":"Refer to Simple Subject . /v2/movie/weekly { \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u8c46\u74e3\u7535\u5f71\u672c\u5468\u53e3\u7891\u699c\" }","title":"weekly"},{"location":"dev/apis/douban.html#new-movies","text":"Refer to Simple Subject . /v2/movie/new_movies { \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u8c46\u74e3\u7535\u5f71\u65b0\u7247\u699c\" }","title":"new movies"},{"location":"dev/apis/douban.html#in-theaters","text":"Refer to Simple Subject . /v2/movie/in_theaters?start=0&count=20&city=\u5317\u4eac { \"count\" : 20 , \"start\" : 0 , \"total\" : 0 , \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u6b63\u5728\u4e0a\u6620\u7684\u7535\u5f71-\u5317\u4eac\" }","title":"in theaters"},{"location":"dev/apis/douban.html#coming-soon","text":"Refer to Simple Subject . /v2/movie/coming_soon?start=0&count=20 { \"count\" : 20 , \"start\" : 0 , \"total\" : 0 , \"subjects\" : [], // refer to #simple-subject \"title\" : \"\u5373\u5c06\u4e0a\u6620\u7684\u7535\u5f71\" }","title":"coming soon"},{"location":"dev/apis/douban.html#appendices","text":"","title":"Appendices"},{"location":"dev/apis/douban.html#simple-subject","text":"Refer to Simple Celebrity . { \"id\" : \"1292052\" , \"title\" : \"\u8096\u7533\u514b\u7684\u6551\u8d4e\" , \"original_title\" : \"The Shawshank Redemption\" , \"alt\" : \"https://movie.douban.com/subject/1292052/\" , \"images\" : { \"small\" : \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\" , \"large\" : \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\" , \"medium\" : \"http://img3.doubanio.com/view/photo/s_ratio_poster/public/p480747492.jpg\" }, \"rating\" : { \"max\" : 10 , \"average\" : 9.7 , \"details\" : { \"1\" : 1546.0 , \"3\" : 20660.0 , \"2\" : 1258.0 , \"5\" : 1335300.0 , \"4\" : 210663.0 }, \"stars\" : \"50\" , \"min\" : 0 }, \"mainland_pubdate\" : \"\" , \"pubdates\" : [ \"1994-09-10(\u591a\u4f26\u591a\u7535\u5f71\u8282)\" , \"1994-10-14(\u7f8e\u56fd)\" ], \"year\" : \"1994\" , \"genres\" : [ \"\u72af\u7f6a\" , \"\u5267\u60c5\" ], \"durations\" : [ \"142\u5206\u949f\" ], \"subtype\" : \"movie\" , \"collect_count\" : 2839928 , \"casts\" : [], // refer to #simple-celebrity \"directors\" : [], // ditto \"has_video\" : true , }","title":"Simple Subject"},{"location":"dev/apis/douban.html#simple-celebrity","text":"","title":"Simple Celebrity"},{"location":"dev/apis/douban.html#book","text":"","title":"Book"},{"location":"dev/apis/douban.html#info","text":"/v2/book/{book_id}","title":"Info"},{"location":"dev/apis/douban.html#response","text":"","title":"Response"},{"location":"dev/apis/douban.html#appendices_1","text":"","title":"Appendices"},{"location":"dev/apis/douban.html#simple-celebrity_1","text":"{ \"id\" : \"1276787\" , \"name\" : \"\u7533\u00b7\u963f\u514b\" , \"name_en\" : \"Shane Acker\" , \"alt\" : \"https://movie.douban.com/celebrity/1276787/\" , \"avatars\" : { \"small\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\" , \"large\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\" , \"medium\" : \"http://img9.doubanio.com/view/celebrity/s_ratio_celebrity/public/p1351678808.44.jpg\" } }","title":"Simple Celebrity"},{"location":"dev/apis/kugou.html","text":"TODO","title":"Kugou"},{"location":"dev/apis/lol.html","text":"TODO","title":"League of Legends"},{"location":"dev/c/index.html","text":"TODO Overview \u00b6 Learn C Language. Config \u00b6 The commonest compiler is GNU Compiler Collection, short for GCC . Install GCC as instructed here . Generally, GCC and G++ are both available on Linux.","title":"Get Started"},{"location":"dev/c/index.html#overview","text":"Learn C Language.","title":"Overview"},{"location":"dev/c/index.html#config","text":"The commonest compiler is GNU Compiler Collection, short for GCC . Install GCC as instructed here . Generally, GCC and G++ are both available on Linux.","title":"Config"},{"location":"dev/database/redis.html","text":"\u6982\u8ff0 \u00b6 Redis \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u57fa\u4e8e\u5185\u5b58\u7684\u6570\u636e\u5e93\uff0c\u53ef\u7528\u4f5c\u7f13\u5b58\uff0c\u6d88\u606f\u4ee3\u7406\u7b49\u3002 \u5b89\u88c5 \u00b6 Linux \u00b6 \u6267\u884c\u547d\u4ee4 yum install redis \uff0c\u6216\u8005\uff1a \u4e0b\u8f7d Redis\uff1b \u4e0a\u4f20 \u81f3 Linux \u670d\u52a1\u5668\uff1b \u89e3\u538b\u6587\u4ef6\uff1a tar \u2013zxvf redis-x.x.x.tar.gz \uff1b \u6253\u5f00\u5df2\u89e3\u538b\u7684\u76ee\u5f55\u7f16\u8bd1\uff1a make \uff08\u5982\u679c\u975e gcc \u73af\u5883\uff0c\u6267\u884c yum install gcc-c++ \u5b89\u88c5 gcc \uff09\uff1b \u5b89\u88c5 Redis \u5230\u6307\u5b9a\u76ee\u5f55\uff1a make install PREFIX=/usr/local/redis \uff1b \u590d\u5236 redis.conf \u5230\u5b89\u88c5\u76ee\u5f55\uff0c\u5e76\u4fee\u6539\u76f8\u5173\u53c2\u6570\uff1b \u6267\u884c redis-server \u542f\u52a8 Redis \u670d\u52a1\u5668\uff0c\u6267\u884c redis-cli \u8fde\u63a5\u670d\u52a1\u5668\uff1b \u4fee\u6539 redis.conf \u914d\u7f6e daemonize yes \u53ef\u4ee5\u8ba9\u670d\u52a1\u5668\u5728\u540e\u53f0\u8fd0\u884c\uff1b \u5f00\u673a\u542f\u52a8\uff1a systemctl enable redis . Windows \u00b6 \u4e0b\u8f7d Redis for Windows \uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06 Redis \u8bbe\u4e3a Windows \u670d\u52a1\uff1a redis-server --service-install [ redis.windows-service.conf ] --service-name [ redis ] --port [ 6380 ] \u914d\u7f6e \u00b6 redis.conf \u914d\u7f6e\u9879\uff1a bind [host1] [host2] requirepass [password] \u547d\u4ee4 \u00b6 \u901a\u7528 \u00b6 List \u00b6 LLEN \u00b6 LLEN key FAQ \u00b6 \u5fc5\u8981\u65f6\u521b\u5efa\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u4e0d\u540c\u7684\u670d\u52a1\u540d\u548c\u7aef\u53e3\uff0c\u4ee5\u521b\u5efa\u591a\u4e2a Redis \u670d\u52a1\u5668\u5b9e\u4f8b\u3002 \u8fdc\u7a0b\u8fde\u63a5\u65f6\uff0c\u4fee\u6539\u53c2\u6570 bind 127.0.0.1 \u3002\u5982\u679c\u4ecd\u7136\u65e0\u6cd5\u8fde\u63a5\uff0c\u68c0\u67e5\u7aef\u53e3\u8bbf\u95ee\u662f\u5426\u88ab\u9632\u706b\u5899\u7981\u6b62\u3002","title":"Redis"},{"location":"dev/database/redis.html#_1","text":"Redis \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u57fa\u4e8e\u5185\u5b58\u7684\u6570\u636e\u5e93\uff0c\u53ef\u7528\u4f5c\u7f13\u5b58\uff0c\u6d88\u606f\u4ee3\u7406\u7b49\u3002","title":"\u6982\u8ff0"},{"location":"dev/database/redis.html#_2","text":"","title":"\u5b89\u88c5"},{"location":"dev/database/redis.html#linux","text":"\u6267\u884c\u547d\u4ee4 yum install redis \uff0c\u6216\u8005\uff1a \u4e0b\u8f7d Redis\uff1b \u4e0a\u4f20 \u81f3 Linux \u670d\u52a1\u5668\uff1b \u89e3\u538b\u6587\u4ef6\uff1a tar \u2013zxvf redis-x.x.x.tar.gz \uff1b \u6253\u5f00\u5df2\u89e3\u538b\u7684\u76ee\u5f55\u7f16\u8bd1\uff1a make \uff08\u5982\u679c\u975e gcc \u73af\u5883\uff0c\u6267\u884c yum install gcc-c++ \u5b89\u88c5 gcc \uff09\uff1b \u5b89\u88c5 Redis \u5230\u6307\u5b9a\u76ee\u5f55\uff1a make install PREFIX=/usr/local/redis \uff1b \u590d\u5236 redis.conf \u5230\u5b89\u88c5\u76ee\u5f55\uff0c\u5e76\u4fee\u6539\u76f8\u5173\u53c2\u6570\uff1b \u6267\u884c redis-server \u542f\u52a8 Redis \u670d\u52a1\u5668\uff0c\u6267\u884c redis-cli \u8fde\u63a5\u670d\u52a1\u5668\uff1b \u4fee\u6539 redis.conf \u914d\u7f6e daemonize yes \u53ef\u4ee5\u8ba9\u670d\u52a1\u5668\u5728\u540e\u53f0\u8fd0\u884c\uff1b \u5f00\u673a\u542f\u52a8\uff1a systemctl enable redis .","title":"Linux"},{"location":"dev/database/redis.html#windows","text":"\u4e0b\u8f7d Redis for Windows \uff0c\u6267\u884c\u4ee5\u4e0b\u547d\u4ee4\u5c06 Redis \u8bbe\u4e3a Windows \u670d\u52a1\uff1a redis-server --service-install [ redis.windows-service.conf ] --service-name [ redis ] --port [ 6380 ]","title":"Windows"},{"location":"dev/database/redis.html#_3","text":"redis.conf \u914d\u7f6e\u9879\uff1a bind [host1] [host2] requirepass [password]","title":"\u914d\u7f6e"},{"location":"dev/database/redis.html#_4","text":"","title":"\u547d\u4ee4"},{"location":"dev/database/redis.html#_5","text":"","title":"\u901a\u7528"},{"location":"dev/database/redis.html#list","text":"","title":"List"},{"location":"dev/database/redis.html#llen","text":"LLEN key","title":"LLEN"},{"location":"dev/database/redis.html#faq","text":"\u5fc5\u8981\u65f6\u521b\u5efa\u4e0d\u540c\u7684\u914d\u7f6e\u6587\u4ef6\uff0c\u914d\u7f6e\u4e0d\u540c\u7684\u670d\u52a1\u540d\u548c\u7aef\u53e3\uff0c\u4ee5\u521b\u5efa\u591a\u4e2a Redis \u670d\u52a1\u5668\u5b9e\u4f8b\u3002 \u8fdc\u7a0b\u8fde\u63a5\u65f6\uff0c\u4fee\u6539\u53c2\u6570 bind 127.0.0.1 \u3002\u5982\u679c\u4ecd\u7136\u65e0\u6cd5\u8fde\u63a5\uff0c\u68c0\u67e5\u7aef\u53e3\u8bbf\u95ee\u662f\u5426\u88ab\u9632\u706b\u5899\u7981\u6b62\u3002","title":"FAQ"},{"location":"dev/js/index.html","text":"TODO Overview \u00b6 JavaScript is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.","title":"JavaScript"},{"location":"dev/js/index.html#overview","text":"JavaScript is a lightweight, interpreted, or just-in-time compiled programming language with first-class functions.","title":"Overview"},{"location":"dev/js/jquery.html","text":"TODO Overview \u00b6 [jQuery] is a JavaScript library. See official apis or Chinese version . Utilities \u00b6 extend \u00b6 Merge the contents of two or more objects together into the first object. var object = $ . extend ( object1 , object2 ); // merge object2 into object1, the object1 will be modified. var object = $ . extend ({}, object1 , object2 ); // if u don't want target to be modified. var object = $ . extend ( true , object1 , object1 ); // merge recursively, defaults to false.","title":"jQuery"},{"location":"dev/js/jquery.html#overview","text":"[jQuery] is a JavaScript library. See official apis or Chinese version .","title":"Overview"},{"location":"dev/js/jquery.html#utilities","text":"","title":"Utilities"},{"location":"dev/js/jquery.html#extend","text":"Merge the contents of two or more objects together into the first object. var object = $ . extend ( object1 , object2 ); // merge object2 into object1, the object1 will be modified. var object = $ . extend ({}, object1 , object2 ); // if u don't want target to be modified. var object = $ . extend ( true , object1 , object1 ); // merge recursively, defaults to false.","title":"extend"},{"location":"dev/js/layer.html","text":"TODO Overview \u00b6 Layer is a Web popup component.","title":"Layer"},{"location":"dev/js/layer.html#overview","text":"Layer is a Web popup component.","title":"Overview"},{"location":"dev/js/nodejs.html","text":"TODO Installation \u00b6 Download and install from Download | Node.js . NPM \u00b6 Commands \u00b6 $ npm view { module_name } versions # view all version of specified module $ npm install { module_name } @ { version } # install specified version of a module Mirrors \u00b6 Temparory \u00b6 $ npm --registry https://registry.npm.taobao.org install { module_name } Permanent \u00b6 $ npm config set registry https://registry.npm.taobao.org # verify $ npm config get registry References \u00b6 Node.js v12.16.1 Documentation API \u6587\u6863 | Node.js \u4e2d\u6587\u7f51 Node.js \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b npm\u955c\u50cf\u53ca\u914d\u7f6e\u65b9\u6cd5 - \u653e\u9010\u3001\u9752\u6625 - \u535a\u5ba2\u56ed","title":"Node.js"},{"location":"dev/js/nodejs.html#installation","text":"Download and install from Download | Node.js .","title":"Installation"},{"location":"dev/js/nodejs.html#npm","text":"","title":"NPM"},{"location":"dev/js/nodejs.html#commands","text":"$ npm view { module_name } versions # view all version of specified module $ npm install { module_name } @ { version } # install specified version of a module","title":"Commands"},{"location":"dev/js/nodejs.html#mirrors","text":"","title":"Mirrors"},{"location":"dev/js/nodejs.html#temparory","text":"$ npm --registry https://registry.npm.taobao.org install { module_name }","title":"Temparory"},{"location":"dev/js/nodejs.html#permanent","text":"$ npm config set registry https://registry.npm.taobao.org # verify $ npm config get registry","title":"Permanent"},{"location":"dev/js/nodejs.html#references","text":"Node.js v12.16.1 Documentation API \u6587\u6863 | Node.js \u4e2d\u6587\u7f51 Node.js \u6559\u7a0b | \u83dc\u9e1f\u6559\u7a0b npm\u955c\u50cf\u53ca\u914d\u7f6e\u65b9\u6cd5 - \u653e\u9010\u3001\u9752\u6625 - \u535a\u5ba2\u56ed","title":"References"},{"location":"dev/js/react.html","text":"TODO References \u00b6 IDEA\u5f00\u53d1React\u73af\u5883\u914d\u7f6e - \u9a91\u9e64\u4e0b\u6c5f\u5357 - \u535a\u5ba2\u56ed React -- \u7b80\u6613\u9879\u76ee\u5b9e\u6218 - \u4e0d\u4f1a\u4ee3\u7801\u7684\u524d\u7aef - \u535a\u5ba2\u56ed","title":"React"},{"location":"dev/js/react.html#references","text":"IDEA\u5f00\u53d1React\u73af\u5883\u914d\u7f6e - \u9a91\u9e64\u4e0b\u6c5f\u5357 - \u535a\u5ba2\u56ed React -- \u7b80\u6613\u9879\u76ee\u5b9e\u6218 - \u4e0d\u4f1a\u4ee3\u7801\u7684\u524d\u7aef - \u535a\u5ba2\u56ed","title":"References"},{"location":"dev/js/select2.html","text":"TODO Overview \u00b6 Select2 provides a customizable select box.","title":"Select2"},{"location":"dev/js/select2.html#overview","text":"Select2 provides a customizable select box.","title":"Overview"},{"location":"dev/mysql/index.html","text":"TODO Overview \u00b6 Learn MySQL . Here are the documentations and Chinese version . Installation \u00b6 See more details here . Linux \u00b6 Select and download the repository package from the Download Yum Repository page and then install the repository. $ wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm $ yum install mysql80-community-release-el7-3.noarch.rpm List all subrepositories of different series and their status. Enable the specific series instead of default one. $ yum repolist all | grep mysql $ yum-config-manager --disable mysql80-community $ yum-config-manager --enable mysql57-community If yum-config-manager is not found, install the command from yum-utils with yum install yum-utils . Or edit manually the /etc/yum.repos.d/mysql-community.repo file to change the release series. Just find the entry of the subrepository and then modify the value of property enabled . Now, install MySQL and then start the MySQL server. $ yum install mysql-community-server $ /bin/systemctl start mysqld At the initial start up of the server, The server is initialized. SSL certificate and key files are generated in the data directory. Plugin validate_password is installed and enabled by default which requires that passwords contain at least one uppercase letter, one lowercase letter, one digit, and one special character, and that the total password length is at least 8 characters. A superuser account 'root'@'localhost is created. A password for the superuser is set and stored in the error log file. Reveal it with grep 'temporary password' /var/log/mysqld.log . Change the root password as soon as possible. $ mysql -u root -p # login mysql> alter user 'root' @ 'localhost' identified by '<new password>' ; # change the password Verification \u00b6 Check the version information of installed MySQL server and global variables. Append -uroot -p to connect as root if necessary. $ mysqladmin version $ mysqladmin variables Remote Connection \u00b6 SSH is recommended. To connect not through SSH , update the table mysql.user to add hosts to a specific user. Open the port of firewall if needed. grant < priv1 \uff0c priv2 ... > on < database > . < table > to < user >@ '<host/ip>' identified by '<password>' ; eg : grant all privileges on * . * to '<user>' @ '<host>' identified by '<password>' ; flush privileges ; -- flush tables related to privileges Configuration \u00b6 Edit the configuration file /etc/my.cnf or /etc/mysql/my.cnf .","title":"Get Started"},{"location":"dev/mysql/index.html#overview","text":"Learn MySQL . Here are the documentations and Chinese version .","title":"Overview"},{"location":"dev/mysql/index.html#installation","text":"See more details here .","title":"Installation"},{"location":"dev/mysql/index.html#linux","text":"Select and download the repository package from the Download Yum Repository page and then install the repository. $ wget https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm $ yum install mysql80-community-release-el7-3.noarch.rpm List all subrepositories of different series and their status. Enable the specific series instead of default one. $ yum repolist all | grep mysql $ yum-config-manager --disable mysql80-community $ yum-config-manager --enable mysql57-community If yum-config-manager is not found, install the command from yum-utils with yum install yum-utils . Or edit manually the /etc/yum.repos.d/mysql-community.repo file to change the release series. Just find the entry of the subrepository and then modify the value of property enabled . Now, install MySQL and then start the MySQL server. $ yum install mysql-community-server $ /bin/systemctl start mysqld At the initial start up of the server, The server is initialized. SSL certificate and key files are generated in the data directory. Plugin validate_password is installed and enabled by default which requires that passwords contain at least one uppercase letter, one lowercase letter, one digit, and one special character, and that the total password length is at least 8 characters. A superuser account 'root'@'localhost is created. A password for the superuser is set and stored in the error log file. Reveal it with grep 'temporary password' /var/log/mysqld.log . Change the root password as soon as possible. $ mysql -u root -p # login mysql> alter user 'root' @ 'localhost' identified by '<new password>' ; # change the password","title":"Linux"},{"location":"dev/mysql/index.html#verification","text":"Check the version information of installed MySQL server and global variables. Append -uroot -p to connect as root if necessary. $ mysqladmin version $ mysqladmin variables","title":"Verification"},{"location":"dev/mysql/index.html#remote-connection","text":"SSH is recommended. To connect not through SSH , update the table mysql.user to add hosts to a specific user. Open the port of firewall if needed. grant < priv1 \uff0c priv2 ... > on < database > . < table > to < user >@ '<host/ip>' identified by '<password>' ; eg : grant all privileges on * . * to '<user>' @ '<host>' identified by '<password>' ; flush privileges ; -- flush tables related to privileges","title":"Remote Connection"},{"location":"dev/mysql/index.html#configuration","text":"Edit the configuration file /etc/my.cnf or /etc/mysql/my.cnf .","title":"Configuration"},{"location":"dev/mysql/faq.html","text":"TODO NonTransientConnectionException \u00b6 E : NonTransientConnectionException: Public Key Retrieval is not allowed S : Add allowPublicKeyRetrieval=true after the connection URL. Refer to MySQL Connection String for C# .NET Core Programs - MySqlConnector . Forget Password \u00b6 On Linux, append skip-grant-tables to configuration file /etc/my.cnf to enable logging in without verification. Then log in the database and execute an update sql: update user set authentication_string = password('<new password>') where user = 'root' . Recover the file and restart MySQL. On Windows, the configuration file is usuallt located to my.ini under ProgramData.","title":"FAQ"},{"location":"dev/mysql/faq.html#nontransientconnectionexception","text":"E : NonTransientConnectionException: Public Key Retrieval is not allowed S : Add allowPublicKeyRetrieval=true after the connection URL. Refer to MySQL Connection String for C# .NET Core Programs - MySqlConnector .","title":"NonTransientConnectionException"},{"location":"dev/mysql/faq.html#forget-password","text":"On Linux, append skip-grant-tables to configuration file /etc/my.cnf to enable logging in without verification. Then log in the database and execute an update sql: update user set authentication_string = password('<new password>') where user = 'root' . Recover the file and restart MySQL. On Windows, the configuration file is usuallt located to my.ini under ProgramData.","title":"Forget Password"},{"location":"dev/oracle/index.html","text":"TODO Overview \u00b6 Learn knowledge of Oracle . Installation \u00b6 References \u00b6 Oracle-\u77e5\u8bc6\u7ed3\u6784\u6f2b\u8c08 - \u5c0f\u5de5\u5320 - CSDN\u535a\u5ba2","title":"Get Stared"},{"location":"dev/oracle/index.html#overview","text":"Learn knowledge of Oracle .","title":"Overview"},{"location":"dev/oracle/index.html#installation","text":"","title":"Installation"},{"location":"dev/oracle/index.html#references","text":"Oracle-\u77e5\u8bc6\u7ed3\u6784\u6f2b\u8c08 - \u5c0f\u5de5\u5320 - CSDN\u535a\u5ba2","title":"References"},{"location":"dev/oracle/sql.html","text":"TODO Overview \u00b6 Oracle SQL statements are divided into the following categories: Data Definition Language (DDL) Statements Data Manipulation Language (DML) Statements Transaction Control Statements Session Control Statements System Control Statement Embedded SQL Statements","title":"SQL"},{"location":"dev/oracle/sql.html#overview","text":"Oracle SQL statements are divided into the following categories: Data Definition Language (DDL) Statements Data Manipulation Language (DML) Statements Transaction Control Statements Session Control Statements System Control Statement Embedded SQL Statements","title":"Overview"},{"location":"dev/web/bootstrap.html","text":"TODO Overview \u00b6 Bootstrap is an open source toolkit for developing with HTML, CSS, and JS. Refer to its documentation or Chinese one .","title":"Bootstrap"},{"location":"dev/web/bootstrap.html#overview","text":"Bootstrap is an open source toolkit for developing with HTML, CSS, and JS. Refer to its documentation or Chinese one .","title":"Overview"},{"location":"java/index.html","text":"\u6982\u8ff0 \u00b6 \u5b66\u4e60\u4e16\u754c\u4e0a\u6700\u597d\u7684\u7f16\u7a0b\u8bed\u8a00\u2014\u2014 Java \uff01\u672c\u6587\u6863\u57fa\u4e8e Java 11 . \u5b89\u88c5 \u00b6 \u4e0b\u8f7d\u5b89\u88c5 Java \u5e76\u6309\u5982\u4e0b\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08\u5176\u4e2d dir \u4e3a\u5b89\u88c5\u76ee\u5f55\uff09\uff1a JAVA_HOME = %dir%\\jdk_version path = . ;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin; # \u5982\u679c\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u7248\u672c JAVA_HOME = %JAVA_HOME11% # \u6307\u5b9a\u5f53\u524d\u7248\u672c JAVA_HOME8 = %dir%\\jdk1.8 JAVA_HOME11 = %dir%\\jdk11 \u6ce8\u610f : \u5220\u9664\u5b89\u88c5\u65f6\u81ea\u52a8\u6dfb\u52a0\u5230\u7cfb\u7edf\u76ee\u5f55 C:\\Windows\\System32 \u4e0b\u7684 java.exe , javaw.exe , javaws.exe . \u53c2\u8003 \u00b6 Java Java \u6838\u5fc3\u6280\u672f 10. \u5377I & \u5377II. The Java\u2122 Tutorials Java SE & JDK 11 API Specification Java Virtual Machine Guide The Java\u00ae Language Specification The Java\u00ae Virtual Machine Specification The Java EE Tutorial Java SE 8 API Specification \u5e93 Apache Commons \u2013 Apache Commons OGNL - Apache Commons OGNL - Object Graph Navigation Library Apache POI - the Java API for Microsoft Documents Apache HttpComponents \u2013 Apache HttpComponents FasterXML/jackson-docs: Documentation for the Jackson JSON processor Home \u00b7 alibaba/fastjson Wiki jsoup: Java HTML parser, built for HTML editing, cleaning, scraping, and XSS safety Maven \u2013 Welcome to Apache Maven FreeMarker \u4e2d\u6587\u5b98\u65b9\u53c2\u8003\u624b\u518c","title":"Java"},{"location":"java/index.html#_1","text":"\u5b66\u4e60\u4e16\u754c\u4e0a\u6700\u597d\u7684\u7f16\u7a0b\u8bed\u8a00\u2014\u2014 Java \uff01\u672c\u6587\u6863\u57fa\u4e8e Java 11 .","title":"\u6982\u8ff0"},{"location":"java/index.html#_2","text":"\u4e0b\u8f7d\u5b89\u88c5 Java \u5e76\u6309\u5982\u4e0b\u914d\u7f6e\u73af\u5883\u53d8\u91cf\uff08\u5176\u4e2d dir \u4e3a\u5b89\u88c5\u76ee\u5f55\uff09\uff1a JAVA_HOME = %dir%\\jdk_version path = . ;%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin; # \u5982\u679c\u540c\u65f6\u5b89\u88c5\u591a\u4e2a\u7248\u672c JAVA_HOME = %JAVA_HOME11% # \u6307\u5b9a\u5f53\u524d\u7248\u672c JAVA_HOME8 = %dir%\\jdk1.8 JAVA_HOME11 = %dir%\\jdk11 \u6ce8\u610f : \u5220\u9664\u5b89\u88c5\u65f6\u81ea\u52a8\u6dfb\u52a0\u5230\u7cfb\u7edf\u76ee\u5f55 C:\\Windows\\System32 \u4e0b\u7684 java.exe , javaw.exe , javaws.exe .","title":"\u5b89\u88c5"},{"location":"java/index.html#_3","text":"Java Java \u6838\u5fc3\u6280\u672f 10. \u5377I & \u5377II. The Java\u2122 Tutorials Java SE & JDK 11 API Specification Java Virtual Machine Guide The Java\u00ae Language Specification The Java\u00ae Virtual Machine Specification The Java EE Tutorial Java SE 8 API Specification \u5e93 Apache Commons \u2013 Apache Commons OGNL - Apache Commons OGNL - Object Graph Navigation Library Apache POI - the Java API for Microsoft Documents Apache HttpComponents \u2013 Apache HttpComponents FasterXML/jackson-docs: Documentation for the Jackson JSON processor Home \u00b7 alibaba/fastjson Wiki jsoup: Java HTML parser, built for HTML editing, cleaning, scraping, and XSS safety Maven \u2013 Welcome to Apache Maven FreeMarker \u4e2d\u6587\u5b98\u65b9\u53c2\u8003\u624b\u518c","title":"\u53c2\u8003"},{"location":"java/mybatis.html","text":"TODO \u6982\u8ff0 \u00b6 \u5b66\u4e60 MyBatis \u5e76\u5c06\u5176\u4e0e Spring \u6216 Spring Boot \u96c6\u6210. \u5f00\u59cb \u00b6 \u5b89\u88c5 \u00b6 \u4e0b\u8f7d mybatis-x.x.x.jar \u6216\u6dfb\u52a0 Maven \u4f9d\u8d56: org.mybatis: mybatis: x.x.x . Example \u00b6 Configure arguments in an XML configuration file , specially mappers to include SQL Mapper XML files. Load the configuration to build a SqlSessionFactory instance. Create SqlSession instances by SqlSessionFactory to execute mapped SQLs. Configuration \u00b6 Mapper XML Files \u00b6 <!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"${namespace}\" > </mapper> Namespace isolates statements with longer, full-qualified names and binds XML files with corresponding interfaces . Dynamic SQL \u00b6 MyBatis employs powerful OGNL based expressions SqlSessions \u00b6 SqlSession is the primary interface to work with MyBatis. This interface is used to execute commands, get mappers and manage transactions. Refer to the latest documents . SqlSessionFactory \u00b6 SqlSession instances are created by SqlSessionFactory whose instances can be built by SqlSessionFactoryBuilder based on an XML configuration file or a custom prepared instance of Configuration . From XML \u00b6 Use a utility class called Resources in MyBatis to load the configuration file from resources directory under classpath. See Configuration to configure an XML configuration file. SqlSessionFactory buildFactoryFromXML () { String resource = \"mybatis-config.xml\" ; InputStream inputStream = null ; try { inputStream = Resources . getResourceAsStream ( resource ); } catch ( IOException e ) { e . printStackTrace (); } return new SqlSessionFactoryBuilder (). build ( inputStream ); } Without XML \u00b6 Use utility classes from org.apache.ibatis.session . SqlSessionFactory buildFactoryWithoutXML() { DataSource dataSource = new PooledDataSource(\"driver\", \"url\", \"username\", \"password\"); TransactionFactory transactionFactory = new JdbcTransactionFactory(); Environment environment = new Environment(\"development\", transactionFactory, dataSource); Configuration configuration = new Configuration(environment); return new SqlSessionFactoryBuilder().build(configuration); } SqlSession \u00b6 Now, get instances of SqlSession by the method SqlSessionFactory.openSession() . FAQ \u00b6 \u6279\u91cf\u5904\u7406 \u00b6 Loop \u00b6 int batchInsert ( List < User > users ) { SqlSession sqlSession = MyConfiguration . getSqlSessionFactory (). openSession ( false ); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); int count = 0 ; for ( User user : users ) { count += mapper . insertUser ( user ); } sqlSession . commit (); sqlSession . close (); return count ; } Batch Mode \u00b6 int batchInsert ( List < User > users ) { SqlSession sqlSession = MyConfiguration . getSqlSessionFactory (). openSession ( ExecutorType . BATCH , false ); // only difference to above way UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); int count = 0 ; for ( User user : users ) { count += mapper . insertUser ( user ); } sqlSession . commit (); sqlSession . close (); return count ; } Type Cast \u00b6 Foreach in Mapper \u00b6 int batchInsert ( List < User > users ) { if ( users != null && users . size () > 0 ) { SqlSession sqlSession = MyConfiguration . getSqlSessionFactory (). openSession (); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); int count = mapper . batchInsert ( users ); sqlSession . commit (); sqlSession . close (); return count ; } return 0 ; } <insert id= \"batchInsert\" > INSERT INTO example.user (username, age) VALUES <foreach collection= \"list\" item= \"item\" separator= \",\" > (#{item.username}, #{item.age}) </foreach> </insert> Notes : Maximum SQL size that MySQL can accept is configured in my.ini as max_allowed_packet , defaults to 1M. Tips \u00b6 The number of items in the condition IN () shouldn't exceed 1000. Otherwise, split them with OR as follows: <select id= \"select\" > SELECT * FROM example.user <where> username IN <foreach collection= \"list\" item= \"item\" open= \"(\" close= \")\" separator= \",\" > <if test= \"(index % 999) == 998\" > NULL ) OR username IN ( </if> #{item} </foreach> </where> </select> References \u00b6 mybatis \u2013 MyBatis 3 mybatis \u2013 MyBatis 3 | \u4e2d\u6587 GitHub - mybatis/mybatis-3: MyBatis SQL mapper framework for Java mybatis-spring \u2013 MyBatis-Spring mybatis-spring \u2013 MyBatis-Spring | \u4e2d\u6587 GitHub - mybatis/spring: Spring integration for MyBatis 3 mybatis-spring-boot \u2013 About MyBatis\u67b6\u6784\u8bbe\u8ba1\u53ca\u6e90\u4ee3\u7801\u5206\u6790\u7cfb\u5217(\u4e00):MyBatis\u67b6\u6784 - \u5b5f\u8861 - \u535a\u5ba2\u56ed MyBatis Generator","title":"MyBatis"},{"location":"java/mybatis.html#_1","text":"\u5b66\u4e60 MyBatis \u5e76\u5c06\u5176\u4e0e Spring \u6216 Spring Boot \u96c6\u6210.","title":"\u6982\u8ff0"},{"location":"java/mybatis.html#_2","text":"","title":"\u5f00\u59cb"},{"location":"java/mybatis.html#_3","text":"\u4e0b\u8f7d mybatis-x.x.x.jar \u6216\u6dfb\u52a0 Maven \u4f9d\u8d56: org.mybatis: mybatis: x.x.x .","title":"\u5b89\u88c5"},{"location":"java/mybatis.html#example","text":"Configure arguments in an XML configuration file , specially mappers to include SQL Mapper XML files. Load the configuration to build a SqlSessionFactory instance. Create SqlSession instances by SqlSessionFactory to execute mapped SQLs.","title":"Example"},{"location":"java/mybatis.html#configuration","text":"","title":"Configuration"},{"location":"java/mybatis.html#mapper-xml-files","text":"<!DOCTYPE mapper PUBLIC \"-//mybatis.org//DTD Mapper 3.0//EN\" \"http://mybatis.org/dtd/mybatis-3-mapper.dtd\"> <mapper namespace= \"${namespace}\" > </mapper> Namespace isolates statements with longer, full-qualified names and binds XML files with corresponding interfaces .","title":"Mapper XML Files"},{"location":"java/mybatis.html#dynamic-sql","text":"MyBatis employs powerful OGNL based expressions","title":"Dynamic SQL"},{"location":"java/mybatis.html#sqlsessions","text":"SqlSession is the primary interface to work with MyBatis. This interface is used to execute commands, get mappers and manage transactions. Refer to the latest documents .","title":"SqlSessions"},{"location":"java/mybatis.html#sqlsessionfactory","text":"SqlSession instances are created by SqlSessionFactory whose instances can be built by SqlSessionFactoryBuilder based on an XML configuration file or a custom prepared instance of Configuration .","title":"SqlSessionFactory"},{"location":"java/mybatis.html#from-xml","text":"Use a utility class called Resources in MyBatis to load the configuration file from resources directory under classpath. See Configuration to configure an XML configuration file. SqlSessionFactory buildFactoryFromXML () { String resource = \"mybatis-config.xml\" ; InputStream inputStream = null ; try { inputStream = Resources . getResourceAsStream ( resource ); } catch ( IOException e ) { e . printStackTrace (); } return new SqlSessionFactoryBuilder (). build ( inputStream ); }","title":"From XML"},{"location":"java/mybatis.html#without-xml","text":"Use utility classes from org.apache.ibatis.session . SqlSessionFactory buildFactoryWithoutXML() { DataSource dataSource = new PooledDataSource(\"driver\", \"url\", \"username\", \"password\"); TransactionFactory transactionFactory = new JdbcTransactionFactory(); Environment environment = new Environment(\"development\", transactionFactory, dataSource); Configuration configuration = new Configuration(environment); return new SqlSessionFactoryBuilder().build(configuration); }","title":"Without XML"},{"location":"java/mybatis.html#sqlsession","text":"Now, get instances of SqlSession by the method SqlSessionFactory.openSession() .","title":"SqlSession"},{"location":"java/mybatis.html#faq","text":"","title":"FAQ"},{"location":"java/mybatis.html#_4","text":"","title":"\u6279\u91cf\u5904\u7406"},{"location":"java/mybatis.html#loop","text":"int batchInsert ( List < User > users ) { SqlSession sqlSession = MyConfiguration . getSqlSessionFactory (). openSession ( false ); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); int count = 0 ; for ( User user : users ) { count += mapper . insertUser ( user ); } sqlSession . commit (); sqlSession . close (); return count ; }","title":"Loop"},{"location":"java/mybatis.html#batch-mode","text":"int batchInsert ( List < User > users ) { SqlSession sqlSession = MyConfiguration . getSqlSessionFactory (). openSession ( ExecutorType . BATCH , false ); // only difference to above way UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); int count = 0 ; for ( User user : users ) { count += mapper . insertUser ( user ); } sqlSession . commit (); sqlSession . close (); return count ; }","title":"Batch Mode"},{"location":"java/mybatis.html#type-cast","text":"","title":"Type Cast"},{"location":"java/mybatis.html#foreach-in-mapper","text":"int batchInsert ( List < User > users ) { if ( users != null && users . size () > 0 ) { SqlSession sqlSession = MyConfiguration . getSqlSessionFactory (). openSession (); UserMapper mapper = sqlSession . getMapper ( UserMapper . class ); int count = mapper . batchInsert ( users ); sqlSession . commit (); sqlSession . close (); return count ; } return 0 ; } <insert id= \"batchInsert\" > INSERT INTO example.user (username, age) VALUES <foreach collection= \"list\" item= \"item\" separator= \",\" > (#{item.username}, #{item.age}) </foreach> </insert> Notes : Maximum SQL size that MySQL can accept is configured in my.ini as max_allowed_packet , defaults to 1M.","title":"Foreach in Mapper"},{"location":"java/mybatis.html#tips","text":"The number of items in the condition IN () shouldn't exceed 1000. Otherwise, split them with OR as follows: <select id= \"select\" > SELECT * FROM example.user <where> username IN <foreach collection= \"list\" item= \"item\" open= \"(\" close= \")\" separator= \",\" > <if test= \"(index % 999) == 998\" > NULL ) OR username IN ( </if> #{item} </foreach> </where> </select>","title":"Tips"},{"location":"java/mybatis.html#references","text":"mybatis \u2013 MyBatis 3 mybatis \u2013 MyBatis 3 | \u4e2d\u6587 GitHub - mybatis/mybatis-3: MyBatis SQL mapper framework for Java mybatis-spring \u2013 MyBatis-Spring mybatis-spring \u2013 MyBatis-Spring | \u4e2d\u6587 GitHub - mybatis/spring: Spring integration for MyBatis 3 mybatis-spring-boot \u2013 About MyBatis\u67b6\u6784\u8bbe\u8ba1\u53ca\u6e90\u4ee3\u7801\u5206\u6790\u7cfb\u5217(\u4e00):MyBatis\u67b6\u6784 - \u5b5f\u8861 - \u535a\u5ba2\u56ed MyBatis Generator","title":"References"},{"location":"java/quarkus.html","text":"\u53c2\u8003 \u00b6 Guides - Quarkus","title":"Quarkus"},{"location":"java/quarkus.html#_1","text":"Guides - Quarkus","title":"\u53c2\u8003"},{"location":"java/tomcat.html","text":"TODO Overview \u00b6 Apache Tomcat is an open source implementation of the Java Servlet, JavaServer Pages, Java Expression Language and Java WebSocket technologies. Configuration \u00b6 Run bin/service.bat to add Tomcat to Windows service. Publish Static Pages \u00b6 Create a xml file under conf/Catalina/localhost with: <!--'path' is optional--> <!--'dir_to_deploy' is directory to deploy--> <Context path= \"{path}\" docBase= \"{dir_to_deploy}\" debug= \"0\" reloadable= \"true\" crossContext= \"true\" /> Access the website from FAQ \u00b6 Accessed from LAN \u00b6 Just access the server from <{LAN_ip}:{port}>. If failed, open advanced settings of firewall and then add a Inbound Rule for the port of Tomcat, 8080 as usual. References \u00b6 Apache Tomcat\u00ae - Welcome!","title":"Tomcat"},{"location":"java/tomcat.html#overview","text":"Apache Tomcat is an open source implementation of the Java Servlet, JavaServer Pages, Java Expression Language and Java WebSocket technologies.","title":"Overview"},{"location":"java/tomcat.html#configuration","text":"Run bin/service.bat to add Tomcat to Windows service.","title":"Configuration"},{"location":"java/tomcat.html#publish-static-pages","text":"Create a xml file under conf/Catalina/localhost with: <!--'path' is optional--> <!--'dir_to_deploy' is directory to deploy--> <Context path= \"{path}\" docBase= \"{dir_to_deploy}\" debug= \"0\" reloadable= \"true\" crossContext= \"true\" /> Access the website from","title":"Publish Static Pages"},{"location":"java/tomcat.html#faq","text":"","title":"FAQ"},{"location":"java/tomcat.html#accessed-from-lan","text":"Just access the server from <{LAN_ip}:{port}>. If failed, open advanced settings of firewall and then add a Inbound Rule for the port of Tomcat, 8080 as usual.","title":"Accessed from LAN"},{"location":"java/tomcat.html#references","text":"Apache Tomcat\u00ae - Welcome!","title":"References"},{"location":"java/design-pattern/singleton-pattern.html","text":"\u5355\u4f8b\u6a21\u5f0f \u00b6 \u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u662f Java \u4e2d\u6700\u7b80\u5355\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u4e00\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u521b\u5efa\u5bf9\u8c61\u7684\u6700\u4f73\u65b9\u5f0f\u3002 \u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\uff0c\u8be5\u7c7b\u8d1f\u8d23\u521b\u5efa\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u786e\u4fdd\u53ea\u6709\u5355\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa\u3002\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bbf\u95ee\u5176\u552f\u4e00\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 \u6ce8\u610f \u5355\u4f8b\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u81ea\u5df1\u521b\u5efa\u81ea\u5df1\u7684\u552f\u4e00\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u7ed9\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u8fd9\u4e00\u5b9e\u4f8b\u3002 \u4ecb\u7ecd \u00b6 \u610f\u56fe \uff1a\u4fdd\u8bc1\u4e00\u4e2a\u7c7b\u4ec5\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u8bbf\u95ee\u5b83\u7684\u5168\u5c40\u8bbf\u95ee\u70b9\u3002 \u4e3b\u8981\u89e3\u51b3 \uff1a\u4e00\u4e2a\u5168\u5c40\u4f7f\u7528\u7684\u7c7b\u9891\u7e41\u5730\u521b\u5efa\u4e0e\u9500\u6bc1\u3002 \u4f55\u65f6\u4f7f\u7528 \uff1a\u5f53\u60a8\u60f3\u63a7\u5236\u5b9e\u4f8b\u6570\u76ee\uff0c\u8282\u7701\u7cfb\u7edf\u8d44\u6e90\u7684\u65f6\u5019\u3002 \u5982\u4f55\u89e3\u51b3 \uff1a\u5224\u65ad\u7cfb\u7edf\u662f\u5426\u5df2\u7ecf\u6709\u8fd9\u4e2a\u5355\u4f8b\uff0c\u5982\u679c\u6709\u5219\u8fd4\u56de\uff0c\u5982\u679c\u6ca1\u6709\u5219\u521b\u5efa\u3002 \u5173\u952e\u4ee3\u7801 \uff1a\u6784\u9020\u51fd\u6570\u662f\u79c1\u6709\u7684\u3002 \u5e94\u7528\u5b9e\u4f8b \uff1a \u4e00\u4e2a\u73ed\u7ea7\u53ea\u6709\u4e00\u4e2a\u73ed\u4e3b\u4efb\u3002 Windows \u662f\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u7684\uff0c\u5728\u64cd\u4f5c\u4e00\u4e2a\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u53ef\u907f\u514d\u5730\u51fa\u73b0\u591a\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u4e00\u4e2a\u6587\u4ef6\u7684\u73b0\u8c61\uff0c\u6240\u4ee5\u6240\u6709\u6587\u4ef6\u7684\u5904\u7406\u5fc5\u987b\u901a\u8fc7\u552f\u4e00\u7684\u5b9e\u4f8b\u6765\u8fdb\u884c\u3002 \u4e00\u4e9b\u8bbe\u5907\u7ba1\u7406\u5668\u5e38\u5e38\u8bbe\u8ba1\u4e3a\u5355\u4f8b\u6a21\u5f0f\uff0c\u6bd4\u5982\u4e00\u4e2a\u7535\u8111\u6709\u4e24\u53f0\u6253\u5370\u673a\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u5c31\u8981\u5904\u7406\u4e0d\u80fd\u4e24\u53f0\u6253\u5370\u673a\u6253\u5370\u540c\u4e00\u4e2a\u6587\u4ef6\u3002 \u4f18\u70b9 \u5728\u5185\u5b58\u91cc\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u7684\u5f00\u9500\uff0c\u5c24\u5176\u662f\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\u5b9e\u4f8b\uff08\u6bd4\u5982\u7ba1\u7406\u5b66\u9662\u9996\u9875\u9875\u9762\u7f13\u5b58\uff09\u3002 \u907f\u514d\u5bf9\u8d44\u6e90\u7684\u591a\u91cd\u5360\u7528\uff08\u6bd4\u5982\u5199\u6587\u4ef6\u64cd\u4f5c\uff09\u3002 \u7f3a\u70b9 \uff1a\u6ca1\u6709\u63a5\u53e3\uff0c\u4e0d\u80fd\u7ee7\u627f\uff0c\u4e0e\u5355\u4e00\u804c\u8d23\u539f\u5219\u51b2\u7a81\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u5173\u5fc3\u5185\u90e8\u903b\u8f91\uff0c\u800c\u4e0d\u5173\u5fc3\u5916\u9762\u600e\u4e48\u6837\u6765\u5b9e\u4f8b\u5316\u3002 \u4f7f\u7528\u573a\u666f \u8981\u6c42\u751f\u4ea7\u552f\u4e00\u5e8f\u5217\u53f7\u3002 WEB \u4e2d\u7684\u8ba1\u6570\u5668\uff0c\u4e0d\u7528\u6bcf\u6b21\u5237\u65b0\u90fd\u5728\u6570\u636e\u5e93\u91cc\u52a0\u4e00\u6b21\uff0c\u7528\u5355\u4f8b\u5148\u7f13\u5b58\u8d77\u6765\u3002 \u521b\u5efa\u7684\u4e00\u4e2a\u5bf9\u8c61\u9700\u8981\u6d88\u8017\u7684\u8d44\u6e90\u8fc7\u591a\uff0c\u6bd4\u5982 I/O \u4e0e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u7b49\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a getInstance() \u65b9\u6cd5\u4e2d\u9700\u8981\u4f7f\u7528\u540c\u6b65\u9501 synchronized (Singleton.class) \u9632\u6b62\u591a\u7ebf\u7a0b\u540c\u65f6\u8fdb\u5165\u9020\u6210 instance \u88ab\u591a\u6b21\u5b9e\u4f8b\u5316\u3002 \u5b9e\u73b0 \u00b6 \u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a SingleObject \u7c7b\u3002 SingleObject \u7c7b\u6709\u5b83\u7684\u79c1\u6709\u6784\u9020\u51fd\u6570\u548c\u672c\u8eab\u7684\u4e00\u4e2a\u9759\u6001\u5b9e\u4f8b\u3002 SingleObject \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u4f9b\u5916\u754c\u83b7\u53d6\u5b83\u7684\u9759\u6001\u5b9e\u4f8b\u3002 SingletonPatternDemo \uff0c\u6211\u4eec\u7684\u6f14\u793a\u7c7b\u4f7f\u7528 SingleObject \u7c7b\u6765\u83b7\u53d6 SingleObject \u5bf9\u8c61\u3002 \u6b65\u9aa4 1 \u00b6 \u521b\u5efa\u4e00\u4e2a Singleton \u7c7b\u3002 SingleObject.java public class SingleObject { //\u521b\u5efa SingleObject \u7684\u4e00\u4e2a\u5bf9\u8c61 private static SingleObject instance = new SingleObject (); //\u8ba9\u6784\u9020\u51fd\u6570\u4e3a private\uff0c\u8fd9\u6837\u8be5\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u5b9e\u4f8b\u5316 private SingleObject (){} //\u83b7\u53d6\u552f\u4e00\u53ef\u7528\u7684\u5bf9\u8c61 public static SingleObject getInstance (){ return instance ; } public void showMessage (){ System . out . println ( \"Hello World!\" ); } } \u6b65\u9aa4 2 \u00b6 SingletonPatternDemo.java public class SingletonPatternDemo { public static void main ( String [] args ) { //\u4e0d\u5408\u6cd5\u7684\u6784\u9020\u51fd\u6570 //\u7f16\u8bd1\u65f6\u9519\u8bef\uff1a\u6784\u9020\u51fd\u6570 SingleObject() \u662f\u4e0d\u53ef\u89c1\u7684 //SingleObject object = new SingleObject(); //\u83b7\u53d6\u552f\u4e00\u53ef\u7528\u7684\u5bf9\u8c61 SingleObject object = SingleObject . getInstance (); //\u663e\u793a\u6d88\u606f object . showMessage (); } } \u6b65\u9aa4 3 \u00b6 \u6267\u884c\u7a0b\u5e8f\uff0c\u8f93\u51fa\u7ed3\u679c\uff1a Hello World! \u5355\u4f8b\u6a21\u5f0f\u7684\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f \u00b6 \u61d2\u6c49\u5f0f\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168 \u00b6 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u5426 \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u8fd9\u79cd\u65b9\u5f0f\u662f\u6700\u57fa\u672c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u8fd9\u79cd\u5b9e\u73b0\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u4e0d\u652f\u6301\u591a\u7ebf\u7a0b\u3002\u56e0\u4e3a\u6ca1\u6709\u52a0\u9501 synchronized\uff0c\u6240\u4ee5\u4e25\u683c\u610f\u4e49\u4e0a\u5b83\u5e76\u4e0d\u7b97\u5355\u4f8b\u6a21\u5f0f\u3002 \u8fd9\u79cd\u65b9\u5f0f lazy loading \u5f88\u660e\u663e\uff0c\u4e0d\u8981\u6c42\u7ebf\u7a0b\u5b89\u5168\uff0c\u5728\u591a\u7ebf\u7a0b\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Singleton.java public class Singleton { private static Singleton instance ; private Singleton (){} public static Singleton getInstance () { if ( instance == null ) { instance = new Singleton (); } return instance ; } } \u63a5\u4e0b\u6765\u4ecb\u7ecd\u7684\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f\u90fd\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u4f46\u662f\u5728\u6027\u80fd\u4e0a\u6709\u6240\u5dee\u5f02\u3002 \u61d2\u6c49\u5f0f\uff0c\u7ebf\u7a0b\u5b89\u5168 \u00b6 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u8fd9\u79cd\u65b9\u5f0f\u5177\u5907\u5f88\u597d\u7684 lazy loading\uff0c\u80fd\u591f\u5728\u591a\u7ebf\u7a0b\u4e2d\u5f88\u597d\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\uff0c\u6548\u7387\u5f88\u4f4e\uff0c99% \u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u540c\u6b65\u3002 \u4f18\u70b9 \uff1a\u7b2c\u4e00\u6b21\u8c03\u7528\u624d\u521d\u59cb\u5316\uff0c\u907f\u514d\u5185\u5b58\u6d6a\u8d39\u3002 \u7f3a\u70b9 \uff1a\u5fc5\u987b\u52a0\u9501 synchronized \u624d\u80fd\u4fdd\u8bc1\u5355\u4f8b\uff0c\u4f46\u52a0\u9501\u4f1a\u5f71\u54cd\u6548\u7387\u3002 getInstance() \u7684\u6027\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e0d\u662f\u5f88\u5173\u952e\uff08\u8be5\u65b9\u6cd5\u4f7f\u7528\u4e0d\u592a\u9891\u7e41\uff09\u3002 Singleton.java public class Singleton { private static Singleton instance ; private Singleton (){} public static synchronized Singleton getInstance () { if ( instance == null ) { instance = new Singleton (); } return instance ; } } \u997f\u6c49\u5f0f \u00b6 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u5426 \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u63cf\u8ff0 \uff1a\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u5e38\u7528\uff0c\u4f46\u5bb9\u6613\u4ea7\u751f\u5783\u573e\u5bf9\u8c61\u3002 \u4f18\u70b9 \uff1a\u6ca1\u6709\u52a0\u9501\uff0c\u6267\u884c\u6548\u7387\u4f1a\u63d0\u9ad8\u3002 \u7f3a\u70b9 \uff1a\u7c7b\u52a0\u8f7d\u65f6\u5c31\u521d\u59cb\u5316\uff0c\u6d6a\u8d39\u5185\u5b58\u3002 \u5b83\u57fa\u4e8e classloader \u673a\u5236\u907f\u514d\u4e86\u591a\u7ebf\u7a0b\u7684\u540c\u6b65\u95ee\u9898\uff0c\u4e0d\u8fc7\uff0cinstance \u5728\u7c7b\u88c5\u8f7d\u65f6\u5c31\u5b9e\u4f8b\u5316\uff0c\u867d\u7136\u5bfc\u81f4\u7c7b\u88c5\u8f7d\u7684\u539f\u56e0\u6709\u5f88\u591a\u79cd\uff0c\u5728\u5355\u4f8b\u6a21\u5f0f\u4e2d\u5927\u591a\u6570\u90fd\u662f\u8c03\u7528 getInstance \u65b9\u6cd5\uff0c \u4f46\u662f\u4e5f\u4e0d\u80fd\u786e\u5b9a\u6709\u5176\u4ed6\u7684\u65b9\u5f0f\uff08\u6216\u8005\u5176\u4ed6\u7684\u9759\u6001\u65b9\u6cd5\uff09\u5bfc\u81f4\u7c7b\u88c5\u8f7d\uff0c\u8fd9\u65f6\u5019\u521d\u59cb\u5316 instance \u663e\u7136\u6ca1\u6709\u8fbe\u5230 lazy loading \u7684\u6548\u679c\u3002 Singleton.java public class Singleton { private static Singleton instance = new Singleton (); private Singleton (){} public static Singleton getInstance () { return instance ; } } \u53cc\u68c0\u9501/\u53cc\u91cd\u6821\u9a8c\u9501\uff08DCL\uff0c\u5373 double-checked locking\uff09 \u00b6 JDK \u7248\u672c \uff1aJDK1.5 \u8d77 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u8f83\u590d\u6742 \u8fd9\u79cd\u65b9\u5f0f\u91c7\u7528\u53cc\u9501\u673a\u5236\uff0c\u5b89\u5168\u4e14\u5728\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u80fd\u4fdd\u6301\u9ad8\u6027\u80fd\u3002 getInstance() \u7684\u6027\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5f88\u5173\u952e\u3002 Singleton.java public class Singleton { private volatile static Singleton singleton ; private Singleton (){} public static Singleton getSingleton () { if ( singleton == null ) { synchronized ( Singleton . class ) { if ( singleton == null ) { singleton = new Singleton (); } } } return singleton ; } } \u767b\u8bb0\u5f0f/\u9759\u6001\u5185\u90e8\u7c7b \u00b6 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u4e00\u822c \u8fd9\u79cd\u65b9\u5f0f\u80fd\u8fbe\u5230\u53cc\u68c0\u9501\u65b9\u5f0f\u4e00\u6837\u7684\u529f\u6548\uff0c\u4f46\u5b9e\u73b0\u66f4\u7b80\u5355\u3002\u5bf9\u9759\u6001\u57df\u4f7f\u7528\u5ef6\u8fdf\u521d\u59cb\u5316\uff0c\u5e94\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u800c\u4e0d\u662f\u53cc\u68c0\u9501\u65b9\u5f0f\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ea\u9002\u7528\u4e8e\u9759\u6001\u57df\u7684\u60c5\u51b5\uff0c\u53cc\u68c0\u9501\u65b9\u5f0f\u53ef\u5728\u5b9e\u4f8b\u57df\u9700\u8981\u5ef6\u8fdf\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u3002 \u8fd9\u79cd\u65b9\u5f0f\u540c\u6837\u5229\u7528\u4e86 classloader \u673a\u5236\u6765\u4fdd\u8bc1\u521d\u59cb\u5316 instance \u65f6\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5b83\u8ddf\u7b2c 3 \u79cd\u65b9\u5f0f\u4e0d\u540c\u7684\u662f\uff1a\u7b2c 3 \u79cd\u65b9\u5f0f\u53ea\u8981 Singleton \u7c7b\u88ab\u88c5\u8f7d\u4e86\uff0c\u90a3\u4e48 instance \u5c31\u4f1a\u88ab\u5b9e\u4f8b\u5316\uff08\u6ca1\u6709\u8fbe\u5230 lazy loading \u6548\u679c\uff09\uff0c\u800c\u8fd9\u79cd\u65b9\u5f0f\u662f Singleton \u7c7b\u88ab\u88c5\u8f7d\u4e86\uff0cinstance \u4e0d\u4e00\u5b9a\u88ab\u521d\u59cb\u5316\u3002\u56e0\u4e3a SingletonHolder \u7c7b\u6ca1\u6709\u88ab\u4e3b\u52a8\u4f7f\u7528\uff0c\u53ea\u6709\u901a\u8fc7\u663e\u5f0f\u8c03\u7528 getInstance \u65b9\u6cd5\u65f6\uff0c\u624d\u4f1a\u663e\u5f0f\u88c5\u8f7d SingletonHolder \u7c7b\uff0c\u4ece\u800c\u5b9e\u4f8b\u5316 instance\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u5b9e\u4f8b\u5316 instance \u5f88\u6d88\u8017\u8d44\u6e90\uff0c\u6240\u4ee5\u60f3\u8ba9\u5b83\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u53e6\u5916\u4e00\u65b9\u9762\uff0c\u53c8\u4e0d\u5e0c\u671b\u5728 Singleton \u7c7b\u52a0\u8f7d\u65f6\u5c31\u5b9e\u4f8b\u5316\uff0c\u56e0\u4e3a\u4e0d\u80fd\u786e\u4fdd Singleton \u7c7b\u8fd8\u53ef\u80fd\u5728\u5176\u4ed6\u7684\u5730\u65b9\u88ab\u4e3b\u52a8\u4f7f\u7528\u4ece\u800c\u88ab\u52a0\u8f7d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5b9e\u4f8b\u5316 instance \u663e\u7136\u662f\u4e0d\u5408\u9002\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u6bd4\u7b2c 3 \u79cd\u65b9\u5f0f\u5c31\u663e\u5f97\u5f88\u5408\u7406\u3002 Singleton.java public class Singleton { private static class SingletonHolder { private static final Singleton INSTANCE = new Singleton (); } private Singleton (){} public static Singleton getInstance () { return SingletonHolder . INSTANCE ; } } \u679a\u4e3e \u00b6 JDK \u7248\u672c \uff1aJDK1.5 \u8d77 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u5426 \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u8fd8\u6ca1\u6709\u88ab\u5e7f\u6cdb\u91c7\u7528\uff0c\u4f46\u8fd9\u662f\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u7684\u6700\u4f73\u65b9\u6cd5\u3002\u5b83\u66f4\u7b80\u6d01\uff0c\u81ea\u52a8\u652f\u6301\u5e8f\u5217\u5316\u673a\u5236\uff0c\u7edd\u5bf9\u9632\u6b62\u591a\u6b21\u5b9e\u4f8b\u5316\u3002 \u8fd9\u79cd\u65b9\u5f0f\u662f Effective Java \u4f5c\u8005 Josh Bloch \u63d0\u5021\u7684\u65b9\u5f0f\uff0c\u5b83\u4e0d\u4ec5\u80fd\u907f\u514d\u591a\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898\uff0c\u800c\u4e14\u8fd8\u81ea\u52a8\u652f\u6301\u5e8f\u5217\u5316\u673a\u5236\uff0c\u9632\u6b62\u53cd\u5e8f\u5217\u5316\u91cd\u65b0\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff0c\u7edd\u5bf9\u9632\u6b62\u591a\u6b21\u5b9e\u4f8b\u5316\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e JDK1.5 \u4e4b\u540e\u624d\u52a0\u5165 enum \u7279\u6027\uff0c\u7528\u8fd9\u79cd\u65b9\u5f0f\u5199\u4e0d\u514d\u8ba9\u4eba\u611f\u89c9\u751f\u758f\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u4e5f\u5f88\u5c11\u7528\u3002 \u4e0d\u80fd\u901a\u8fc7 reflection attack \u6765\u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5\u3002 Singleton.java public enum Singleton { INSTANCE ; public void whateverMethod () {} } \u7ecf\u9a8c\u4e4b\u8c08 \uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u7b2c 1 \u79cd\u548c\u7b2c 2 \u79cd\u61d2\u6c49\u65b9\u5f0f\uff0c\u5efa\u8bae\u4f7f\u7528\u7b2c 3 \u79cd\u997f\u6c49\u65b9\u5f0f\u3002\u53ea\u6709\u5728\u8981\u660e\u786e\u5b9e\u73b0 lazy loading \u6548\u679c\u65f6\uff0c\u624d\u4f1a\u4f7f\u7528\u7b2c 5 \u79cd\u767b\u8bb0\u65b9\u5f0f\u3002\u5982\u679c\u6d89\u53ca\u5230\u53cd\u5e8f\u5217\u5316\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u7b2c 6 \u79cd\u679a\u4e3e\u65b9\u5f0f\u3002\u5982\u679c\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7b2c 4 \u79cd\u53cc\u68c0\u9501\u65b9\u5f0f\u3002","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"java/design-pattern/singleton-pattern.html#_1","text":"\u5355\u4f8b\u6a21\u5f0f\uff08Singleton Pattern\uff09\u662f Java \u4e2d\u6700\u7b80\u5355\u7684\u8bbe\u8ba1\u6a21\u5f0f\u4e4b\u4e00\u3002\u8fd9\u79cd\u7c7b\u578b\u7684\u8bbe\u8ba1\u6a21\u5f0f\u5c5e\u4e8e\u521b\u5efa\u578b\u6a21\u5f0f\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u79cd\u521b\u5efa\u5bf9\u8c61\u7684\u6700\u4f73\u65b9\u5f0f\u3002 \u8fd9\u79cd\u6a21\u5f0f\u6d89\u53ca\u5230\u4e00\u4e2a\u5355\u4e00\u7684\u7c7b\uff0c\u8be5\u7c7b\u8d1f\u8d23\u521b\u5efa\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u540c\u65f6\u786e\u4fdd\u53ea\u6709\u5355\u4e2a\u5bf9\u8c61\u88ab\u521b\u5efa\u3002\u8fd9\u4e2a\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u8bbf\u95ee\u5176\u552f\u4e00\u7684\u5bf9\u8c61\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4e0d\u9700\u8981\u5b9e\u4f8b\u5316\u8be5\u7c7b\u7684\u5bf9\u8c61\u3002 \u6ce8\u610f \u5355\u4f8b\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u81ea\u5df1\u521b\u5efa\u81ea\u5df1\u7684\u552f\u4e00\u5b9e\u4f8b\u3002 \u5355\u4f8b\u7c7b\u5fc5\u987b\u7ed9\u6240\u6709\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u8fd9\u4e00\u5b9e\u4f8b\u3002","title":"\u5355\u4f8b\u6a21\u5f0f"},{"location":"java/design-pattern/singleton-pattern.html#_2","text":"\u610f\u56fe \uff1a\u4fdd\u8bc1\u4e00\u4e2a\u7c7b\u4ec5\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u8bbf\u95ee\u5b83\u7684\u5168\u5c40\u8bbf\u95ee\u70b9\u3002 \u4e3b\u8981\u89e3\u51b3 \uff1a\u4e00\u4e2a\u5168\u5c40\u4f7f\u7528\u7684\u7c7b\u9891\u7e41\u5730\u521b\u5efa\u4e0e\u9500\u6bc1\u3002 \u4f55\u65f6\u4f7f\u7528 \uff1a\u5f53\u60a8\u60f3\u63a7\u5236\u5b9e\u4f8b\u6570\u76ee\uff0c\u8282\u7701\u7cfb\u7edf\u8d44\u6e90\u7684\u65f6\u5019\u3002 \u5982\u4f55\u89e3\u51b3 \uff1a\u5224\u65ad\u7cfb\u7edf\u662f\u5426\u5df2\u7ecf\u6709\u8fd9\u4e2a\u5355\u4f8b\uff0c\u5982\u679c\u6709\u5219\u8fd4\u56de\uff0c\u5982\u679c\u6ca1\u6709\u5219\u521b\u5efa\u3002 \u5173\u952e\u4ee3\u7801 \uff1a\u6784\u9020\u51fd\u6570\u662f\u79c1\u6709\u7684\u3002 \u5e94\u7528\u5b9e\u4f8b \uff1a \u4e00\u4e2a\u73ed\u7ea7\u53ea\u6709\u4e00\u4e2a\u73ed\u4e3b\u4efb\u3002 Windows \u662f\u591a\u8fdb\u7a0b\u591a\u7ebf\u7a0b\u7684\uff0c\u5728\u64cd\u4f5c\u4e00\u4e2a\u6587\u4ef6\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u53ef\u907f\u514d\u5730\u51fa\u73b0\u591a\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u540c\u65f6\u64cd\u4f5c\u4e00\u4e2a\u6587\u4ef6\u7684\u73b0\u8c61\uff0c\u6240\u4ee5\u6240\u6709\u6587\u4ef6\u7684\u5904\u7406\u5fc5\u987b\u901a\u8fc7\u552f\u4e00\u7684\u5b9e\u4f8b\u6765\u8fdb\u884c\u3002 \u4e00\u4e9b\u8bbe\u5907\u7ba1\u7406\u5668\u5e38\u5e38\u8bbe\u8ba1\u4e3a\u5355\u4f8b\u6a21\u5f0f\uff0c\u6bd4\u5982\u4e00\u4e2a\u7535\u8111\u6709\u4e24\u53f0\u6253\u5370\u673a\uff0c\u5728\u8f93\u51fa\u7684\u65f6\u5019\u5c31\u8981\u5904\u7406\u4e0d\u80fd\u4e24\u53f0\u6253\u5370\u673a\u6253\u5370\u540c\u4e00\u4e2a\u6587\u4ef6\u3002 \u4f18\u70b9 \u5728\u5185\u5b58\u91cc\u53ea\u6709\u4e00\u4e2a\u5b9e\u4f8b\uff0c\u51cf\u5c11\u4e86\u5185\u5b58\u7684\u5f00\u9500\uff0c\u5c24\u5176\u662f\u9891\u7e41\u7684\u521b\u5efa\u548c\u9500\u6bc1\u5b9e\u4f8b\uff08\u6bd4\u5982\u7ba1\u7406\u5b66\u9662\u9996\u9875\u9875\u9762\u7f13\u5b58\uff09\u3002 \u907f\u514d\u5bf9\u8d44\u6e90\u7684\u591a\u91cd\u5360\u7528\uff08\u6bd4\u5982\u5199\u6587\u4ef6\u64cd\u4f5c\uff09\u3002 \u7f3a\u70b9 \uff1a\u6ca1\u6709\u63a5\u53e3\uff0c\u4e0d\u80fd\u7ee7\u627f\uff0c\u4e0e\u5355\u4e00\u804c\u8d23\u539f\u5219\u51b2\u7a81\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u53ea\u5173\u5fc3\u5185\u90e8\u903b\u8f91\uff0c\u800c\u4e0d\u5173\u5fc3\u5916\u9762\u600e\u4e48\u6837\u6765\u5b9e\u4f8b\u5316\u3002 \u4f7f\u7528\u573a\u666f \u8981\u6c42\u751f\u4ea7\u552f\u4e00\u5e8f\u5217\u53f7\u3002 WEB \u4e2d\u7684\u8ba1\u6570\u5668\uff0c\u4e0d\u7528\u6bcf\u6b21\u5237\u65b0\u90fd\u5728\u6570\u636e\u5e93\u91cc\u52a0\u4e00\u6b21\uff0c\u7528\u5355\u4f8b\u5148\u7f13\u5b58\u8d77\u6765\u3002 \u521b\u5efa\u7684\u4e00\u4e2a\u5bf9\u8c61\u9700\u8981\u6d88\u8017\u7684\u8d44\u6e90\u8fc7\u591a\uff0c\u6bd4\u5982 I/O \u4e0e\u6570\u636e\u5e93\u7684\u8fde\u63a5\u7b49\u3002 \u6ce8\u610f\u4e8b\u9879 \uff1a getInstance() \u65b9\u6cd5\u4e2d\u9700\u8981\u4f7f\u7528\u540c\u6b65\u9501 synchronized (Singleton.class) \u9632\u6b62\u591a\u7ebf\u7a0b\u540c\u65f6\u8fdb\u5165\u9020\u6210 instance \u88ab\u591a\u6b21\u5b9e\u4f8b\u5316\u3002","title":"\u4ecb\u7ecd"},{"location":"java/design-pattern/singleton-pattern.html#_3","text":"\u6211\u4eec\u5c06\u521b\u5efa\u4e00\u4e2a SingleObject \u7c7b\u3002 SingleObject \u7c7b\u6709\u5b83\u7684\u79c1\u6709\u6784\u9020\u51fd\u6570\u548c\u672c\u8eab\u7684\u4e00\u4e2a\u9759\u6001\u5b9e\u4f8b\u3002 SingleObject \u7c7b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u4f9b\u5916\u754c\u83b7\u53d6\u5b83\u7684\u9759\u6001\u5b9e\u4f8b\u3002 SingletonPatternDemo \uff0c\u6211\u4eec\u7684\u6f14\u793a\u7c7b\u4f7f\u7528 SingleObject \u7c7b\u6765\u83b7\u53d6 SingleObject \u5bf9\u8c61\u3002","title":"\u5b9e\u73b0"},{"location":"java/design-pattern/singleton-pattern.html#1","text":"\u521b\u5efa\u4e00\u4e2a Singleton \u7c7b\u3002 SingleObject.java public class SingleObject { //\u521b\u5efa SingleObject \u7684\u4e00\u4e2a\u5bf9\u8c61 private static SingleObject instance = new SingleObject (); //\u8ba9\u6784\u9020\u51fd\u6570\u4e3a private\uff0c\u8fd9\u6837\u8be5\u7c7b\u5c31\u4e0d\u4f1a\u88ab\u5b9e\u4f8b\u5316 private SingleObject (){} //\u83b7\u53d6\u552f\u4e00\u53ef\u7528\u7684\u5bf9\u8c61 public static SingleObject getInstance (){ return instance ; } public void showMessage (){ System . out . println ( \"Hello World!\" ); } }","title":"\u6b65\u9aa4 1"},{"location":"java/design-pattern/singleton-pattern.html#2","text":"SingletonPatternDemo.java public class SingletonPatternDemo { public static void main ( String [] args ) { //\u4e0d\u5408\u6cd5\u7684\u6784\u9020\u51fd\u6570 //\u7f16\u8bd1\u65f6\u9519\u8bef\uff1a\u6784\u9020\u51fd\u6570 SingleObject() \u662f\u4e0d\u53ef\u89c1\u7684 //SingleObject object = new SingleObject(); //\u83b7\u53d6\u552f\u4e00\u53ef\u7528\u7684\u5bf9\u8c61 SingleObject object = SingleObject . getInstance (); //\u663e\u793a\u6d88\u606f object . showMessage (); } }","title":"\u6b65\u9aa4 2"},{"location":"java/design-pattern/singleton-pattern.html#3","text":"\u6267\u884c\u7a0b\u5e8f\uff0c\u8f93\u51fa\u7ed3\u679c\uff1a Hello World!","title":"\u6b65\u9aa4 3"},{"location":"java/design-pattern/singleton-pattern.html#_4","text":"","title":"\u5355\u4f8b\u6a21\u5f0f\u7684\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f"},{"location":"java/design-pattern/singleton-pattern.html#_5","text":"\u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u5426 \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u8fd9\u79cd\u65b9\u5f0f\u662f\u6700\u57fa\u672c\u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u8fd9\u79cd\u5b9e\u73b0\u6700\u5927\u7684\u95ee\u9898\u5c31\u662f\u4e0d\u652f\u6301\u591a\u7ebf\u7a0b\u3002\u56e0\u4e3a\u6ca1\u6709\u52a0\u9501 synchronized\uff0c\u6240\u4ee5\u4e25\u683c\u610f\u4e49\u4e0a\u5b83\u5e76\u4e0d\u7b97\u5355\u4f8b\u6a21\u5f0f\u3002 \u8fd9\u79cd\u65b9\u5f0f lazy loading \u5f88\u660e\u663e\uff0c\u4e0d\u8981\u6c42\u7ebf\u7a0b\u5b89\u5168\uff0c\u5728\u591a\u7ebf\u7a0b\u4e0d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 Singleton.java public class Singleton { private static Singleton instance ; private Singleton (){} public static Singleton getInstance () { if ( instance == null ) { instance = new Singleton (); } return instance ; } } \u63a5\u4e0b\u6765\u4ecb\u7ecd\u7684\u51e0\u79cd\u5b9e\u73b0\u65b9\u5f0f\u90fd\u652f\u6301\u591a\u7ebf\u7a0b\uff0c\u4f46\u662f\u5728\u6027\u80fd\u4e0a\u6709\u6240\u5dee\u5f02\u3002","title":"\u61d2\u6c49\u5f0f\uff0c\u7ebf\u7a0b\u4e0d\u5b89\u5168"},{"location":"java/design-pattern/singleton-pattern.html#_6","text":"\u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u8fd9\u79cd\u65b9\u5f0f\u5177\u5907\u5f88\u597d\u7684 lazy loading\uff0c\u80fd\u591f\u5728\u591a\u7ebf\u7a0b\u4e2d\u5f88\u597d\u7684\u5de5\u4f5c\uff0c\u4f46\u662f\uff0c\u6548\u7387\u5f88\u4f4e\uff0c99% \u60c5\u51b5\u4e0b\u4e0d\u9700\u8981\u540c\u6b65\u3002 \u4f18\u70b9 \uff1a\u7b2c\u4e00\u6b21\u8c03\u7528\u624d\u521d\u59cb\u5316\uff0c\u907f\u514d\u5185\u5b58\u6d6a\u8d39\u3002 \u7f3a\u70b9 \uff1a\u5fc5\u987b\u52a0\u9501 synchronized \u624d\u80fd\u4fdd\u8bc1\u5355\u4f8b\uff0c\u4f46\u52a0\u9501\u4f1a\u5f71\u54cd\u6548\u7387\u3002 getInstance() \u7684\u6027\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u4e0d\u662f\u5f88\u5173\u952e\uff08\u8be5\u65b9\u6cd5\u4f7f\u7528\u4e0d\u592a\u9891\u7e41\uff09\u3002 Singleton.java public class Singleton { private static Singleton instance ; private Singleton (){} public static synchronized Singleton getInstance () { if ( instance == null ) { instance = new Singleton (); } return instance ; } }","title":"\u61d2\u6c49\u5f0f\uff0c\u7ebf\u7a0b\u5b89\u5168"},{"location":"java/design-pattern/singleton-pattern.html#_7","text":"\u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u5426 \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u63cf\u8ff0 \uff1a\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u5e38\u7528\uff0c\u4f46\u5bb9\u6613\u4ea7\u751f\u5783\u573e\u5bf9\u8c61\u3002 \u4f18\u70b9 \uff1a\u6ca1\u6709\u52a0\u9501\uff0c\u6267\u884c\u6548\u7387\u4f1a\u63d0\u9ad8\u3002 \u7f3a\u70b9 \uff1a\u7c7b\u52a0\u8f7d\u65f6\u5c31\u521d\u59cb\u5316\uff0c\u6d6a\u8d39\u5185\u5b58\u3002 \u5b83\u57fa\u4e8e classloader \u673a\u5236\u907f\u514d\u4e86\u591a\u7ebf\u7a0b\u7684\u540c\u6b65\u95ee\u9898\uff0c\u4e0d\u8fc7\uff0cinstance \u5728\u7c7b\u88c5\u8f7d\u65f6\u5c31\u5b9e\u4f8b\u5316\uff0c\u867d\u7136\u5bfc\u81f4\u7c7b\u88c5\u8f7d\u7684\u539f\u56e0\u6709\u5f88\u591a\u79cd\uff0c\u5728\u5355\u4f8b\u6a21\u5f0f\u4e2d\u5927\u591a\u6570\u90fd\u662f\u8c03\u7528 getInstance \u65b9\u6cd5\uff0c \u4f46\u662f\u4e5f\u4e0d\u80fd\u786e\u5b9a\u6709\u5176\u4ed6\u7684\u65b9\u5f0f\uff08\u6216\u8005\u5176\u4ed6\u7684\u9759\u6001\u65b9\u6cd5\uff09\u5bfc\u81f4\u7c7b\u88c5\u8f7d\uff0c\u8fd9\u65f6\u5019\u521d\u59cb\u5316 instance \u663e\u7136\u6ca1\u6709\u8fbe\u5230 lazy loading \u7684\u6548\u679c\u3002 Singleton.java public class Singleton { private static Singleton instance = new Singleton (); private Singleton (){} public static Singleton getInstance () { return instance ; } }","title":"\u997f\u6c49\u5f0f"},{"location":"java/design-pattern/singleton-pattern.html#dcl-double-checked-locking","text":"JDK \u7248\u672c \uff1aJDK1.5 \u8d77 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u8f83\u590d\u6742 \u8fd9\u79cd\u65b9\u5f0f\u91c7\u7528\u53cc\u9501\u673a\u5236\uff0c\u5b89\u5168\u4e14\u5728\u591a\u7ebf\u7a0b\u60c5\u51b5\u4e0b\u80fd\u4fdd\u6301\u9ad8\u6027\u80fd\u3002 getInstance() \u7684\u6027\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5f88\u5173\u952e\u3002 Singleton.java public class Singleton { private volatile static Singleton singleton ; private Singleton (){} public static Singleton getSingleton () { if ( singleton == null ) { synchronized ( Singleton . class ) { if ( singleton == null ) { singleton = new Singleton (); } } } return singleton ; } }","title":"\u53cc\u68c0\u9501/\u53cc\u91cd\u6821\u9a8c\u9501\uff08DCL\uff0c\u5373 double-checked locking\uff09"},{"location":"java/design-pattern/singleton-pattern.html#_8","text":"\u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u662f \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u4e00\u822c \u8fd9\u79cd\u65b9\u5f0f\u80fd\u8fbe\u5230\u53cc\u68c0\u9501\u65b9\u5f0f\u4e00\u6837\u7684\u529f\u6548\uff0c\u4f46\u5b9e\u73b0\u66f4\u7b80\u5355\u3002\u5bf9\u9759\u6001\u57df\u4f7f\u7528\u5ef6\u8fdf\u521d\u59cb\u5316\uff0c\u5e94\u4f7f\u7528\u8fd9\u79cd\u65b9\u5f0f\u800c\u4e0d\u662f\u53cc\u68c0\u9501\u65b9\u5f0f\u3002\u8fd9\u79cd\u65b9\u5f0f\u53ea\u9002\u7528\u4e8e\u9759\u6001\u57df\u7684\u60c5\u51b5\uff0c\u53cc\u68c0\u9501\u65b9\u5f0f\u53ef\u5728\u5b9e\u4f8b\u57df\u9700\u8981\u5ef6\u8fdf\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u3002 \u8fd9\u79cd\u65b9\u5f0f\u540c\u6837\u5229\u7528\u4e86 classloader \u673a\u5236\u6765\u4fdd\u8bc1\u521d\u59cb\u5316 instance \u65f6\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u5b83\u8ddf\u7b2c 3 \u79cd\u65b9\u5f0f\u4e0d\u540c\u7684\u662f\uff1a\u7b2c 3 \u79cd\u65b9\u5f0f\u53ea\u8981 Singleton \u7c7b\u88ab\u88c5\u8f7d\u4e86\uff0c\u90a3\u4e48 instance \u5c31\u4f1a\u88ab\u5b9e\u4f8b\u5316\uff08\u6ca1\u6709\u8fbe\u5230 lazy loading \u6548\u679c\uff09\uff0c\u800c\u8fd9\u79cd\u65b9\u5f0f\u662f Singleton \u7c7b\u88ab\u88c5\u8f7d\u4e86\uff0cinstance \u4e0d\u4e00\u5b9a\u88ab\u521d\u59cb\u5316\u3002\u56e0\u4e3a SingletonHolder \u7c7b\u6ca1\u6709\u88ab\u4e3b\u52a8\u4f7f\u7528\uff0c\u53ea\u6709\u901a\u8fc7\u663e\u5f0f\u8c03\u7528 getInstance \u65b9\u6cd5\u65f6\uff0c\u624d\u4f1a\u663e\u5f0f\u88c5\u8f7d SingletonHolder \u7c7b\uff0c\u4ece\u800c\u5b9e\u4f8b\u5316 instance\u3002\u60f3\u8c61\u4e00\u4e0b\uff0c\u5982\u679c\u5b9e\u4f8b\u5316 instance \u5f88\u6d88\u8017\u8d44\u6e90\uff0c\u6240\u4ee5\u60f3\u8ba9\u5b83\u5ef6\u8fdf\u52a0\u8f7d\uff0c\u53e6\u5916\u4e00\u65b9\u9762\uff0c\u53c8\u4e0d\u5e0c\u671b\u5728 Singleton \u7c7b\u52a0\u8f7d\u65f6\u5c31\u5b9e\u4f8b\u5316\uff0c\u56e0\u4e3a\u4e0d\u80fd\u786e\u4fdd Singleton \u7c7b\u8fd8\u53ef\u80fd\u5728\u5176\u4ed6\u7684\u5730\u65b9\u88ab\u4e3b\u52a8\u4f7f\u7528\u4ece\u800c\u88ab\u52a0\u8f7d\uff0c\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5b9e\u4f8b\u5316 instance \u663e\u7136\u662f\u4e0d\u5408\u9002\u7684\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f8\u6bd4\u7b2c 3 \u79cd\u65b9\u5f0f\u5c31\u663e\u5f97\u5f88\u5408\u7406\u3002 Singleton.java public class Singleton { private static class SingletonHolder { private static final Singleton INSTANCE = new Singleton (); } private Singleton (){} public static Singleton getInstance () { return SingletonHolder . INSTANCE ; } }","title":"\u767b\u8bb0\u5f0f/\u9759\u6001\u5185\u90e8\u7c7b"},{"location":"java/design-pattern/singleton-pattern.html#_9","text":"JDK \u7248\u672c \uff1aJDK1.5 \u8d77 \u662f\u5426 Lazy \u521d\u59cb\u5316 \uff1a\u5426 \u662f\u5426\u591a\u7ebf\u7a0b\u5b89\u5168 \uff1a\u662f \u5b9e\u73b0\u96be\u5ea6 \uff1a\u6613 \u8fd9\u79cd\u5b9e\u73b0\u65b9\u5f0f\u8fd8\u6ca1\u6709\u88ab\u5e7f\u6cdb\u91c7\u7528\uff0c\u4f46\u8fd9\u662f\u5b9e\u73b0\u5355\u4f8b\u6a21\u5f0f\u7684\u6700\u4f73\u65b9\u6cd5\u3002\u5b83\u66f4\u7b80\u6d01\uff0c\u81ea\u52a8\u652f\u6301\u5e8f\u5217\u5316\u673a\u5236\uff0c\u7edd\u5bf9\u9632\u6b62\u591a\u6b21\u5b9e\u4f8b\u5316\u3002 \u8fd9\u79cd\u65b9\u5f0f\u662f Effective Java \u4f5c\u8005 Josh Bloch \u63d0\u5021\u7684\u65b9\u5f0f\uff0c\u5b83\u4e0d\u4ec5\u80fd\u907f\u514d\u591a\u7ebf\u7a0b\u540c\u6b65\u95ee\u9898\uff0c\u800c\u4e14\u8fd8\u81ea\u52a8\u652f\u6301\u5e8f\u5217\u5316\u673a\u5236\uff0c\u9632\u6b62\u53cd\u5e8f\u5217\u5316\u91cd\u65b0\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\uff0c\u7edd\u5bf9\u9632\u6b62\u591a\u6b21\u5b9e\u4f8b\u5316\u3002\u4e0d\u8fc7\uff0c\u7531\u4e8e JDK1.5 \u4e4b\u540e\u624d\u52a0\u5165 enum \u7279\u6027\uff0c\u7528\u8fd9\u79cd\u65b9\u5f0f\u5199\u4e0d\u514d\u8ba9\u4eba\u611f\u89c9\u751f\u758f\uff0c\u5728\u5b9e\u9645\u5de5\u4f5c\u4e2d\uff0c\u4e5f\u5f88\u5c11\u7528\u3002 \u4e0d\u80fd\u901a\u8fc7 reflection attack \u6765\u8c03\u7528\u79c1\u6709\u6784\u9020\u65b9\u6cd5\u3002 Singleton.java public enum Singleton { INSTANCE ; public void whateverMethod () {} } \u7ecf\u9a8c\u4e4b\u8c08 \uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4e0d\u5efa\u8bae\u4f7f\u7528\u7b2c 1 \u79cd\u548c\u7b2c 2 \u79cd\u61d2\u6c49\u65b9\u5f0f\uff0c\u5efa\u8bae\u4f7f\u7528\u7b2c 3 \u79cd\u997f\u6c49\u65b9\u5f0f\u3002\u53ea\u6709\u5728\u8981\u660e\u786e\u5b9e\u73b0 lazy loading \u6548\u679c\u65f6\uff0c\u624d\u4f1a\u4f7f\u7528\u7b2c 5 \u79cd\u767b\u8bb0\u65b9\u5f0f\u3002\u5982\u679c\u6d89\u53ca\u5230\u53cd\u5e8f\u5217\u5316\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u4f7f\u7528\u7b2c 6 \u79cd\u679a\u4e3e\u65b9\u5f0f\u3002\u5982\u679c\u6709\u5176\u4ed6\u7279\u6b8a\u7684\u9700\u6c42\uff0c\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u7b2c 4 \u79cd\u53cc\u68c0\u9501\u65b9\u5f0f\u3002","title":"\u679a\u4e3e"},{"location":"java/design-pattern/state-pattern.html","text":"\u5bfc\u8a00 \u00b6 \u200b \u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u7cd6\u679c\u673a\u9879\u76ee\uff0c\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u6b63\u5e38\u4e00\u822c\u7cd6\u679c\u673a\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u884c\u4e3a\u6709\u8fd9\u4e48\u51e0\u79cd\uff1a\u6295\u5165\u786c\u5e01\u3001\u8f6c\u52a8\u66f2\u67c4\u3001\u9000\u51fa\u786c\u5e01\u51e0\u79cd\u884c\u4e3a\uff1b\u90a3\u4e48\u7cd6\u679c\u673a\u5462\u4e00\u822c\u6709\u8fd9\u51e0\u4e2d\u72b6\u6001\uff0c\u5f85\u673a\u72b6\u6001\u3001\u6301\u6709\u786c\u5e01\u7684\u51c6\u5907\u72b6\u6001\u3001\u8fd0\u884c\u72b6\u6001\u5373\u6b63\u5728\u552e\u51fa\u72b6\u6001\u548c\u521d\u59cb\u72b6\u6001 \u8fd9\u4e48\u51e0\u79cd\u6b63\u5e38\u72b6\u6001\u3002 \u6211\u4eec\u53d1\u73b0\u5904\u4e8e\u4e0d\u540c\u72b6\u6001\u7684\u65f6\u5019\uff0c\u6301\u6709\u7684\u884c\u4e3a\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56fe\u5982\u4e0b\uff1a \u200b \u5982\u679c\u6211\u4eec\u91c7\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\u6765\u5199\u4ee3\u7801\uff0c\u90a3\u4e48\u5728\u6295\u5165\u786c\u5e01\u8fd9\u4e2a\u884c\u4e3a\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u8fdb\u884c\u72b6\u6001\u7684\u5224\u65ad\uff0c\u53ea\u6709\u5728\u5904\u4e8e\u5f85\u673a\u72b6\u6001\u60c5\u51b5\u4e0b\u8fd9\u79cd\u884c\u4e3a\u662f\u6b63\u5e38\u7684\uff0c\u800c\u5176\u4ed6\u5219\u975e\u6b63\u5e38\uff0c\u90a3\u4e48\u5176\u4ed6\u884c\u4e3a\u4e5f\u4e00\u6837\uff0c\u90fd\u9700\u8981\u53bb\u5148\u5224\u65ad\u4e0b\u5f53\u524d\u7684\u72b6\u6001\u6765\u8fdb\u884c\u64cd\u4f5c\u3002\u5f97\u5230\u7684\u4ee3\u7801\u5219\u4e3a\uff1a CandyMachine.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 public class CandyMachine { final static int SoldOutState = 0 ; // \u521d\u59cb\u72b6\u6001 final static int OnReadyState = 1 ; // \u5f85\u673a\u72b6\u6001 final static int HasCoin = 2 ; // \u51c6\u5907\u72b6\u6001 final static int SoldState = 3 ; // \u552e\u51fa\u72b6\u6001 private int state = SoldOutState ; // \u53d8\u91cf,\u7528\u4e8e\u5b58\u653e\u5f53\u524d\u7684\u72b6\u6001\u503c private int count ; // \u7cd6\u679c\u7684\u6570\u76ee public CandyMachine ( int count ) { this . count = count ; if ( count > 0 ) { state = OnReadyState ; } } // \u6295\u5165\u786c\u5e01\u884c\u4e3a\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u5224\u65ad\u5f53\u524d\u7684\u72b6\u6001\u6765\u5339\u914d\u6240\u6709\u7684\u72b6\u6001. public void insertCoin () { switch ( state ) { case SoldOutState : System . out . println ( \"you can't insert coin,the machine sold out!\" ); break ; case OnReadyState : // \u53ea\u6709\u5728\u5f85\u673a\u72b6\u6001\u7684\u65f6\u5019,\u6295\u5165\u786c\u5e01\u884c\u4e3a\u6b63\u786e,\u5e76\u5c06\u72b6\u6001\u6539\u53d8\u4e3a\u51c6\u5907\u72b6\u6001 state = HasCoin ; System . out . println ( \"you have inserted a coin,next,please turn crank!\" ); break ; case HasCoin : System . out . println ( \"you can't insert another coin!\" ); break ; case SoldState : System . out . println ( \"please wait!we are giving you a candy!\" ); break ; } } // \u56de\u9000\u786c\u5e01 public void returnCoin () { switch ( state ) { case SoldOutState : System . out . println ( \"you can't return,you haven't inserted a coin yet!\" ); break ; case OnReadyState : System . out . println ( \"you haven't inserted a coin yet!\" ); break ; case HasCoin : System . out . println ( \"coin return!\" ); state = OnReadyState ; break ; case SoldState : System . out . println ( \"sorry,you already have turned the crank!\" ); break ; } } // \u8f6c\u52a8\u66f2\u67c4 public void turnCrank () { switch ( state ) { case SoldOutState : System . out . println ( \"you turned,but there are no candies!\" ); break ; case OnReadyState : System . out . println ( \"you turned,but you haven't inserted a coin!\" ); break ; case HasCoin : System . out . println ( \"crank turn...!\" ); state = SoldState ; dispense (); break ; case SoldState : System . out . println ( \"we are giving you a candy,turning another get nothing,!\" ); break ; } } // \u89e6\u53d1\u53d1\u653e\u7cd6\u679c\u884c\u4e3a private void dispense () { count = count - 1 ; System . out . println ( \"a candy rolling out!\" ); if ( count > 0 ) { state = OnReadyState ; } else { System . out . println ( \"Oo,out of candies\" ); state = SoldOutState ; } } public void printstate () { switch ( state ) { case SoldOutState : System . out . println ( \"***SoldOutState***\" ); break ; case OnReadyState : System . out . println ( \"***OnReadyState***\" ); break ; case HasCoin : System . out . println ( \"***HasCoin***\" ); break ; case SoldState : System . out . println ( \"***SoldState***\" ); break ; } } } \u200b \u90a3\u4e48\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u5b58\u5728\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\u9996\u5148\u5f88\u76f4\u89c2\u7684\u611f\u53d7\u5c31\u662f\uff1a \u5b58\u5728\u5927\u91cf\u7684 switch case \u8bed\u53e5 \u5f53\u7136\u53ef\u4ee5\u7528 if else \u4e5f\u662f\u4e00\u6837\u7684\uff1b \u53ef\u6269\u5c55\u6027\u5dee\uff0c\u5e76\u4e14\u4e00\u65e6\u8981\u52a0\u5165\u4e00\u79cd\u65b0\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u5c31\u4f1a\u8981\u4fee\u6539\u6240\u6709\u7684 switch case \u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219\uff1b \u6ca1\u6709\u91c7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u53bb\u5c01\u88c5\u3002 \u200b \u6bd4\u5982\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u65b0\u589e\u52a0\u4e86\u4e00\u79cd\u72b6\u6001\uff0c\u8d62\u5bb6\u72b6\u6001\uff0c\u5373\u53ef\u4ee5\u83b7\u53d6\u5230\u4e24\u7c92\u7cd6\u679c\uff1b\u90a3\u4e48\u5982\u679c\u7528\u4e0a\u9762\u7684\u65b9\u5f0f\uff0c\u80af\u5b9a\u662f\u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219\u7684\uff0c\u540c\u65f6\u6269\u5c55\u6027\u4e5f\u662f\u4e0d\u597d\u7684\uff1b\u90a3\u4e48\u6211\u4eec\u6709\u4ec0\u4e48\u5176\u5b83\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u5462\uff1f \u72b6\u6001\u6a21\u5f0f \u00b6 \u200b \u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u5206\u6790\u9879\u76ee\u4e2d\u53d8\u5316\u7684\u90e8\u5206\u548c\u4e0d\u53d8\u7684\u90e8\u5206\uff0c\u62bd\u5316\u51fa\u53d8\u5316\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53d1\u73b0\u7cd6\u679c\u673a\u63d0\u4f9b\u7684\u884c\u4e3a\u4e00\u822c\u662f\u4e0d\u53d8\u7684\uff0c\u5c31\u662f\u6295\u5165\u786c\u5e01\u3001\u8f6c\u52a8\u66f2\u67c4\u7ed9\u3001\u9000\u56de\u786c\u5e01\u3001\u673a\u5668\u53d1\u653e\u7cd6\u679c\uff1b\u800c\u7cd6\u679c\u673a\u7684\u72b6\u6001\u662f\u53ef\u4ee5\u53d8\u5316\u7684\uff0c\u53ef\u4ee5\u65b0\u589e\u51fa\u4e00\u79cd\u72b6\u6001\u6765\uff0c\u6bd4\u5982\u6211\u4eec\u8bf4\u7684\u8d62\u5bb6\u72b6\u6001\u3002\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u62bd\u51fa\u53d8\u5316\u7684\u90e8\u5206\uff0c\u5373\u6211\u4eec\u8bf4\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u51fa\u73b0\u4e86\u4e0b\u9762\u7684\u7ed3\u6784\u8bbe\u8ba1\u65b9\u6848\uff1a \u200b \u8fd9\u4e2a\u7ed3\u6784\u56fe\u544a\u8bc9\u6211\u4eec\uff0c\u63d0\u70bc\u51fa\u72b6\u6001\u63a5\u53e3\u51fa\u6765\uff0c\u7136\u540e\u5c06\u5404\u4e2a\u72b6\u6001\u62bd\u51fa\uff0c\u5e76\u53bb\u5b9e\u73b0\u63a5\u53e3\uff0c\u6bcf\u4e2a\u72b6\u6001\u90fd\u6301\u6709\u6295\u5165\u786c\u5e01\uff0c\u9000\u56de\u786c\u5e01\uff0c\u8f6c\u52a8\u66f2\u67c4\u3001\u552e\u51fa\u7cd6\u679c\u8fd9\u51e0\u79cd\u884c\u4e3a\u5bf9\u5e94\u7684\u65b9\u6cd5\u505a\u51fa\u76f8\u5e94\uff1b\u800c\u7cd6\u679c\u673a\u6301\u6709\u6240\u6709\u7684\u72b6\u6001\uff0c\u5e76\u901a\u8fc7\u5f15\u7528\u72b6\u6001\u63a5\u53e3\u6765\u64cd\u4f5c\u5404\u4e2a\u72b6\u6001\uff1b\u8fd9\u79cd\u8bbe\u8ba1\u67b6\u6784\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u72b6\u6001\u6a21\u5f0f\u3002 \u72b6\u6001\u6a21\u5f0f\u5b9a\u4e49 \uff1a\u5bf9\u8c61\u884c\u4e3a\u7684\u53d8\u5316\u662f\u7531\u4e8e\u72b6\u6001\u7684\u53d8\u5316\u5f15\u5165\uff0c\u90a3\u4e48\u5373\u5f53\u5185\u90e8\u72b6\u6001\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u6539\u53d8\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u800c\u8fd9\u79cd\u6539\u53d8\u89c6\u4e4e\u5c31\u6539\u53d8\u4e86\u6574\u4e2a\u7c7b\u3002 \u90a3\u4e48\u73b0\u5728\u91c7\u7528\u72b6\u6001\u6a21\u5f0f\u6765\u89e3\u51b3\u95ee\u9898\uff1a \u63a5\u53e3 \u00b6 State.java public interface State { void insertCoin (); void returnCoin (); void turnCrank (); void dispense (); void printState (); } \u51c6\u5907\u72b6\u6001 \u00b6 HasCoin.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import java.util.Random ; public class HasCoin implements State { private CandyMachine mCandyMachine ; public HasCoin ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"you can't insert another coin!\" ); } @Override public void returnCoin () { System . out . println ( \"coin return!\" ); mCandyMachine . setState ( mCandyMachine . mOnReadyState ); } @Override public void turnCrank () { System . out . println ( \"crank turn...!\" ); Random ranwinner = new Random (); int winner = ranwinner . nextInt ( 10 ); if ( winner == 0 ) { mCandyMachine . setState ( mCandyMachine . mWinnerState ); } else { mCandyMachine . setState ( mCandyMachine . mSoldState ); } } @Override public void dispense () { } @Override public void printstate () { System . out . println ( \"***HasCoin***\" ); } } \u8bf4\u660e \uff1a\u6211\u4eec\u4f1a\u53d1\u73b0\u91cc\u9762\u5b58\u5728\u4e00\u4e2a\u7cd6\u679c\u673a\u7684\u5c5e\u6027\uff0c\u800c\u4e4b\u6240\u4ee5\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5c31\u662f\u56e0\u4e3a\u7cd6\u679c\u673a\u4e2d\u6301\u6709\u6240\u6709\u7684\u72b6\u6001\uff0c\u800c\u5728\u51c6\u5907\u72b6\u6001\u4e0b\uff0c\u80af\u5b9a\u4f1a\u7531\u4e8e\u67d0\u79cd\u884c\u4e3a\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff0c\u800c\u8981\u6539\u53d8\u7684\u72b6\u6001\u90fd\u5728\u7cd6\u679c\u673a\u4e2d\uff0c\u6240\u4ee5\u6301\u6709\u4e00\u4e2a\u7cd6\u679c\u673a\u5c5e\u6027\uff0c\u4e0b\u9762\u4e5f\u4e00\u6837\uff0c\u4e0d\u5728\u91cd\u590d\u8bf4\u660e\u3002 \u5f85\u673a\u72b6\u6001 \u00b6 OnReadyState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class OnReadyState implements State { private CandyMachine mCandyMachine ; public OnReadyState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"you have inserted a coin,next,please turn crank!\" ); mCandyMachine . setState ( mCandyMachine . mHasCoin ); } @Override public void returnCoin () { System . out . println ( \"you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"you turned,but you haven't inserted a coin!\" ); } @Override public void dispense () { } @Override public void printstate () { System . out . println ( \"***OnReadyState***\" ); } } \u521d\u59cb\u72b6\u6001 \u00b6 SoldOutState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public class SoldOutState implements State { private CandyMachine mCandyMachine ; public SoldOutState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"you can't insert coin,the machine sold out!\" ); } @Override public void returnCoin () { System . out . println ( \"you can't return,you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"you turned,but there are no candies!\" ); } @Override public void dispense () { } @Override public void printstate () { System . out . println ( \"***SoldOutState***\" ); } } \u552e\u51fa\u72b6\u6001 \u00b6 SoldState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 public class SoldState implements State { private CandyMachine mCandyMachine ; public SoldState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"please wait!we are giving you a candy!\" ); } @Override public void returnCoin () { System . out . println ( \"you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"we are giving you a candy,turning another get nothing,!\" ); } @Override public void dispense () { mCandyMachine . releaseCandy (); if ( mCandyMachine . getCount () > 0 ) { mCandyMachine . setState ( mCandyMachine . mOnReadyState ); } else { System . out . println ( \"Oo,out of candies\" ); mCandyMachine . setState ( mCandyMachine . mSoldOutState ); } } @Override public void printstate () { System . out . println ( \"***SoldState***\" ); } } \u8d62\u5bb6\u72b6\u6001 \u00b6 WinnerState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 public class WinnerState implements State { private CandyMachine mCandyMachine ; public WinnerState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"please wait!we are giving you a candy!\" ); } @Override public void returnCoin () { System . out . println ( \"you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"we are giving you a candy,turning another get nothing,!\" ); } @Override public void dispense () { mCandyMachine . releaseCandy (); if ( mCandyMachine . getCount () == 0 ) { mCandyMachine . setState ( mCandyMachine . mSoldOutState ); } else { System . out . println ( \"you are a winner!you get another candy!\" ); mCandyMachine . releaseCandy (); if ( mCandyMachine . getCount () > 0 ) { mCandyMachine . setState ( mCandyMachine . mOnReadyState ); } else { System . out . println ( \"Oo,out of candies\" ); mCandyMachine . setState ( mCandyMachine . mSoldOutState ); } } } @Override public void printstate () { System . out . println ( \"***WinnerState***\" ); } } \u96c6\u6210 \u00b6 \u200b\u7cd6\u679c\u673a\u8981\u6301\u6709\u6240\u6709\u7684\u72b6\u6001\uff0c\u5e76\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u8981\u8bbe\u7f6e\u5176\u5f00\u59cb\u7684\u72b6\u6001\uff0c\u7136\u540e\u7cd6\u679c\u7684\u5404\u4e2a\u884c\u4e3a\uff0c\u5c31\u59d4\u6258\u5230\u4e86\u5404\u4e2a\u72b6\u6001\u4e2d\u81ea\u5df1\u7ef4\u62a4 CandyMachine.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 public class CandyMachine { State mSoldOutState ; State mOnReadyState ; State mHasCoin ; State mSoldState ; State mWinnerState ; private State state ; private int count ; public CandyMachine ( int count ) { this . count = count ; mSoldOutState = new SoldOutState ( this ); mOnReadyState = new OnReadyState ( this ); mHasCoin = new HasCoin ( this ); mSoldState = new SoldState ( this ); mWinnerState = new WinnerState ( this ); if ( count > 0 ) { state = mOnReadyState ; } else { state = mSoldOutState ; } } public void setState ( State state ) { this . state = state ; } public void insertCoin () { state . insertCoin (); } public void returnCoin () { state . returnCoin (); } public void turnCrank () { state . turnCrank (); state . dispense (); } void releaseCandy () { if ( count > 0 ) { count = count - 1 ; System . out . println ( \"a candy rolling out!\" ); } } public int getCount () { return count ; } public void printstate () { state . printstate (); } } \u6d4b\u8bd5 \u00b6 MainTest.java public class MainTest { public static void main ( String [] args ) { CandyMachine mCandyMachine = new CandyMachine ( 6 ); mCandyMachine . printstate (); mCandyMachine . insertCoin (); mCandyMachine . printstate (); mCandyMachine . turnCrank (); mCandyMachine . printstate (); mCandyMachine . insertCoin (); mCandyMachine . printstate (); mCandyMachine . turnCrank (); mCandyMachine . printstate (); } } \u7ed3\u679c\u5982\u4e0b: \u548c\u5f00\u59cb\u7684\u4f20\u7edf\u65b9\u6848\u5bf9\u6bd4\uff0c\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5177\u5907\u4e86\u53ef\u6269\u5c55\u6027\u3002 \u603b\u7ed3 \u00b6 \u72b6\u6001\u6a21\u5f0f\u5141\u8bb8\u5bf9\u8c61\u5728\u5185\u90e8\u72b6\u6001\u6539\u53d8\u65f6\u6539\u53d8\u5b83\u7684\u884c\u4e3a\uff0c\u5bf9\u8c61\u770b\u8d77\u6765\u597d\u50cf\u4fee\u6539\u4e86\u5b83\u7684\u7c7b\u3002 \u8fd9\u4e2a\u6a21\u5f0f\u5c06\u72b6\u6001\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u7c7b\uff0c\u5e76\u5c06\u52a8\u4f5c\u59d4\u6258\u5230\u4ee3\u8868\u5f53\u524d\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u8fd9\u5c31\u662f\u8bf4\u884c\u4e3a\u4f1a\u968f\u7740\u5185\u90e8\u72b6\u6001\u800c\u6539\u53d8\u3002\u201c\u770b\u8d77\u6765\u597d\u50cf\u4fee\u6539\u4e86\u5b83\u7684\u7c7b\u201d\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u4ece\u5ba2\u6237\u7684\u89c6\u89d2\u6765\u770b\uff1a\u5982\u679c\u8bf4\u4f60\u4f7f\u7528\u7684\u5bf9\u8c61\u80fd\u591f\u5b8c\u5168\u6539\u53d8\u5b83\u7684\u884c\u4e3a\uff0c\u90a3\u4e48\u4f60\u4f1a\u89c9\u5f97\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u4ece\u522b\u7684\u7c7b\u5b9e\u4f8b\u5316\u800c\u6765\u7684\u3002\u7136\u800c\uff0c\u5b9e\u9645\u4e0a\uff0c\u4f60\u77e5\u9053\u6211\u4eec\u662f\u5728\u4f7f\u7528\u7ec4\u5408\u901a\u8fc7\u7b80\u5355\u5f15\u7528\u4e0d\u540c\u7684\u72b6\u6001\u5bf9\u8c61\u6765\u9020\u6210\u7c7b\u6539\u53d8\u7684\u5047\u8c61 \u72b6\u6001\u6a21\u5f0f\u8981\u70b9 \u00b6 \u5ba2\u6237\u4e0d\u4f1a\u548c\u72b6\u6001\u8fdb\u884c\u4ea4\u4e92,\u5168\u76d8\u4e86\u89e3\u72b6\u6001\u662f context\u7684\u5de5\u4f5c \u5728\u72b6\u6001\u6a21\u5f0f\u4e2d\uff0c\u6bcf\u4e2a\u72b6\u6001\u901a\u8fc7\u6301\u6709Context\u7684\u5f15\u7528\uff0c\u6765\u5b9e\u73b0\u72b6\u6001\u8f6c\u79fb \u4f7f\u7528\u72b6\u6001\u6a21\u5f0f\u603b\u662f\u4f1a\u589e\u52a0\u8bbe\u8ba1\u4e2d\u7c7b\u7684\u6570\u76ee\uff0c\u8fd9\u662f\u4e3a\u4e86\u8981\u83b7\u5f97\u7a0b\u5e8f\u53ef\u6269\u5c55\u6027\uff0c\u5f39\u6027\u7684\u4ee3\u4ef7\uff0c\u5982\u679c\u4f60\u7684\u4ee3\u7801\u4e0d\u662f\u4e00\u6b21\u6027\u7684\uff0c\u540e\u671f\u53ef\u80fd\u4f1a\u4e0d\u65ad\u52a0\u5165\u4e0d\u540c\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u72b6\u6001\u6a21\u5f0f\u7684\u8bbe\u8ba1\u662f\u7edd\u5bf9\u503c\u5f97\u7684\u3002\u3010\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u7f3a\u70b9\u3011 \u72b6\u6001\u7c7b\u53ef\u4ee5\u88ab\u591a\u4e2acontext\u5b9e\u4f8b\u5171\u4eab \u72b6\u6001\u6a21\u5f0f\u548c\u7b56\u7565\u6a21\u5f0f\u5bf9\u6bd4 \u00b6 \u76f8\u4f3c\u4e4b\u5904 \u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u6216\u7b56\u7565\u90fd\u5f88\u5bb9\u6613\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u4fee\u6539\u4f7f\u7528\u5b83\u4eec\u7684Context\u5bf9\u8c61\uff1b \u5b83\u4eec\u90fd\u8ba9\u4f60\u7684\u4ee3\u7801\u7b26\u5408OCP\u539f\u5219\uff08\u8f6f\u4ef6\u5bf9\u6269\u5c55\u5e94\u8be5\u662f\u5f00\u53d1\u7684\uff0c\u5bf9\u4fee\u6539\u5e94\u8be5\u662f\u5173\u95ed\u7684\uff09\u3002\u5728\u72b6\u6001\u6a21\u5f0f\u548c\u7b56\u7565\u6a21\u5f0f\u4e2d\uff0cContext\u5bf9\u8c61\u5bf9\u4fee\u6539\u662f\u5173\u95ed\u7684\uff0c\u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u6216\u7b56\u7565\uff0c\u90fd\u4e0d\u9700\u8981\u4fee\u6539 Context\uff1b \u6b63\u5982\u72b6\u6001\u6a21\u5f0f\u4e2d\u7684Context\u4f1a\u6709\u521d\u59cb\u72b6\u6001\u4e00\u6837\uff0c\u7b56\u7565\u6a21\u5f0f\u540c\u6837\u6709\u9ed8\u8ba4\u7b56\u7565\uff1b \u72b6\u6001\u6a21\u5f0f\u4ee5\u4e0d\u540c\u7684\u72b6\u6001\u5c01\u88c5\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u800c\u7b56\u7565\u6a21\u5f0f\u4ee5\u4e0d\u540c\u7684\u7b56\u7565\u5c01\u88c5\u4e0d\u540c\u7684\u884c\u4e3a\uff1b \u5b83\u4eec\u90fd\u4f9d\u8d56\u5b50\u7c7b\u53bb\u5b9e\u73b0\u76f8\u5173\u884c\u4e3a\uff1b \u4e0d\u540c \u72b6\u6001\u6a21\u5f0f\u5e2e\u52a9\u5bf9\u8c61\u7ba1\u7406\u72b6\u6001\uff0c\u6211\u4eec\u5c06\u4e00\u7fa4\u884c\u4e3a\u5c01\u88c5\u65e9\u72b6\u6001\u5bf9\u8c61\u4e2d,context\u7684\u884c\u4e3a\u968f\u65f6\u53ef\u59d4\u6258\u5230\u90a3\u4e9b\u72b6\u6001\u4e2d\u7684\u4e00\u4e2a.\u968f\u7740\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u5f53\u524d\u72b6\u6001\u5728\u72b6\u6001\u5bf9\u8c61\u96c6\u5408\u4e2d\u6e38\u8d70\u6539\u53d8\uff0c\u4ee5\u53cd\u6620context\u5185\u90e8\u72b6\u6001\uff0c\u56e0\u6b64\uff0ccontext\u7684\u884c\u4e3a\u4e5f\u4f1a\u8ddf\u7740\u6539\u53d8\u3002\u5f53\u8981\u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u65f6\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u539f\u6765\u4ee3\u7801\u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u7c7b\u5373\u53ef\uff1b \u800c\u7b56\u7565\u6a21\u5f0f\u5141\u8bb8Client\u9009\u62e9\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u901a\u8fc7\u5c01\u88c5\u4e00\u7ec4\u76f8\u5173\u7b97\u6cd5\uff0c\u4e3aClient\u63d0\u4f9b\u8fd0\u884c\u65f6\u7684\u7075\u6d3b\u6027\u3002Client\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\uff0c\u9009\u62e9\u4efb\u4e00\u7b97\u6cd5\uff0c\u800c\u4e0d\u6539\u53d8\u4f7f\u7528\u7b97\u6cd5\u7684Context\u3002\u4e00\u4e9b\u6d41\u884c\u7684\u7b56\u7565\u6a21\u5f0f\u7684\u4f8b\u5b50\u662f\u5199\u90a3\u4e9b\u4f7f\u7528\u7b97\u6cd5\u7684\u4ee3\u7801\uff0c\u4f8b\u5982\u52a0\u5bc6\u7b97\u6cd5\u3001\u538b\u7f29\u7b97\u6cd5\u3001\u6392\u5e8f\u7b97\u6cd5\u3002\u5ba2\u6237\u901a\u5e38\u4e3b\u52a8\u6307\u5b9acontext\u6240\u8981\u7ec4\u5408\u7684\u7b56\u7565\u5bf9\u8c61\u662f\u54ea\u4e00\u4e2a\uff1b **\u6700\u6839\u672c\u7684\u5dee\u5f02**\u5728\u4e8e\u7b56\u7565\u6a21\u5f0f\u662f\u5728\u6c42\u89e3\u540c\u4e00\u4e2a\u95ee\u9898\u7684\u591a\u79cd\u89e3\u6cd5\uff0c\u8fd9\u4e9b\u4e0d\u540c\u89e3\u6cd5\u4e4b\u95f4\u6beb\u65e0\u5173\u8054\uff1b\u72b6\u6001\u6a21\u5f0f\u5219\u4e0d\u540c\uff0c\u72b6\u6001\u6a21\u5f0f\u8981\u6c42\u5404\u4e2a\u72b6\u6001\u4e4b\u95f4\u6709\u6240\u5173\u8054\uff0c\u4ee5\u4fbf\u5b9e\u73b0\u72b6\u6001\u8f6c\u79fb\u3002","title":"\u72b6\u6001\u6a21\u5f0f"},{"location":"java/design-pattern/state-pattern.html#_1","text":"\u200b \u5047\u8bbe\u6211\u4eec\u73b0\u5728\u6709\u4e00\u4e2a\u7cd6\u679c\u673a\u9879\u76ee\uff0c\u90a3\u4e48\u6211\u4eec\u77e5\u9053\u6b63\u5e38\u4e00\u822c\u7cd6\u679c\u673a\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u884c\u4e3a\u6709\u8fd9\u4e48\u51e0\u79cd\uff1a\u6295\u5165\u786c\u5e01\u3001\u8f6c\u52a8\u66f2\u67c4\u3001\u9000\u51fa\u786c\u5e01\u51e0\u79cd\u884c\u4e3a\uff1b\u90a3\u4e48\u7cd6\u679c\u673a\u5462\u4e00\u822c\u6709\u8fd9\u51e0\u4e2d\u72b6\u6001\uff0c\u5f85\u673a\u72b6\u6001\u3001\u6301\u6709\u786c\u5e01\u7684\u51c6\u5907\u72b6\u6001\u3001\u8fd0\u884c\u72b6\u6001\u5373\u6b63\u5728\u552e\u51fa\u72b6\u6001\u548c\u521d\u59cb\u72b6\u6001 \u8fd9\u4e48\u51e0\u79cd\u6b63\u5e38\u72b6\u6001\u3002 \u6211\u4eec\u53d1\u73b0\u5904\u4e8e\u4e0d\u540c\u72b6\u6001\u7684\u65f6\u5019\uff0c\u6301\u6709\u7684\u884c\u4e3a\u662f\u4e0d\u4e00\u6837\u7684\uff0c\u56fe\u5982\u4e0b\uff1a \u200b \u5982\u679c\u6211\u4eec\u91c7\u7528\u4f20\u7edf\u7684\u65b9\u6cd5\u6765\u5199\u4ee3\u7801\uff0c\u90a3\u4e48\u5728\u6295\u5165\u786c\u5e01\u8fd9\u4e2a\u884c\u4e3a\u64cd\u4f5c\u7684\u65f6\u5019\uff0c\u6211\u4eec\u4f1a\u8fdb\u884c\u72b6\u6001\u7684\u5224\u65ad\uff0c\u53ea\u6709\u5728\u5904\u4e8e\u5f85\u673a\u72b6\u6001\u60c5\u51b5\u4e0b\u8fd9\u79cd\u884c\u4e3a\u662f\u6b63\u5e38\u7684\uff0c\u800c\u5176\u4ed6\u5219\u975e\u6b63\u5e38\uff0c\u90a3\u4e48\u5176\u4ed6\u884c\u4e3a\u4e5f\u4e00\u6837\uff0c\u90fd\u9700\u8981\u53bb\u5148\u5224\u65ad\u4e0b\u5f53\u524d\u7684\u72b6\u6001\u6765\u8fdb\u884c\u64cd\u4f5c\u3002\u5f97\u5230\u7684\u4ee3\u7801\u5219\u4e3a\uff1a CandyMachine.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 public class CandyMachine { final static int SoldOutState = 0 ; // \u521d\u59cb\u72b6\u6001 final static int OnReadyState = 1 ; // \u5f85\u673a\u72b6\u6001 final static int HasCoin = 2 ; // \u51c6\u5907\u72b6\u6001 final static int SoldState = 3 ; // \u552e\u51fa\u72b6\u6001 private int state = SoldOutState ; // \u53d8\u91cf,\u7528\u4e8e\u5b58\u653e\u5f53\u524d\u7684\u72b6\u6001\u503c private int count ; // \u7cd6\u679c\u7684\u6570\u76ee public CandyMachine ( int count ) { this . count = count ; if ( count > 0 ) { state = OnReadyState ; } } // \u6295\u5165\u786c\u5e01\u884c\u4e3a\u7684\u65f6\u5019\uff0c\u901a\u8fc7\u5224\u65ad\u5f53\u524d\u7684\u72b6\u6001\u6765\u5339\u914d\u6240\u6709\u7684\u72b6\u6001. public void insertCoin () { switch ( state ) { case SoldOutState : System . out . println ( \"you can't insert coin,the machine sold out!\" ); break ; case OnReadyState : // \u53ea\u6709\u5728\u5f85\u673a\u72b6\u6001\u7684\u65f6\u5019,\u6295\u5165\u786c\u5e01\u884c\u4e3a\u6b63\u786e,\u5e76\u5c06\u72b6\u6001\u6539\u53d8\u4e3a\u51c6\u5907\u72b6\u6001 state = HasCoin ; System . out . println ( \"you have inserted a coin,next,please turn crank!\" ); break ; case HasCoin : System . out . println ( \"you can't insert another coin!\" ); break ; case SoldState : System . out . println ( \"please wait!we are giving you a candy!\" ); break ; } } // \u56de\u9000\u786c\u5e01 public void returnCoin () { switch ( state ) { case SoldOutState : System . out . println ( \"you can't return,you haven't inserted a coin yet!\" ); break ; case OnReadyState : System . out . println ( \"you haven't inserted a coin yet!\" ); break ; case HasCoin : System . out . println ( \"coin return!\" ); state = OnReadyState ; break ; case SoldState : System . out . println ( \"sorry,you already have turned the crank!\" ); break ; } } // \u8f6c\u52a8\u66f2\u67c4 public void turnCrank () { switch ( state ) { case SoldOutState : System . out . println ( \"you turned,but there are no candies!\" ); break ; case OnReadyState : System . out . println ( \"you turned,but you haven't inserted a coin!\" ); break ; case HasCoin : System . out . println ( \"crank turn...!\" ); state = SoldState ; dispense (); break ; case SoldState : System . out . println ( \"we are giving you a candy,turning another get nothing,!\" ); break ; } } // \u89e6\u53d1\u53d1\u653e\u7cd6\u679c\u884c\u4e3a private void dispense () { count = count - 1 ; System . out . println ( \"a candy rolling out!\" ); if ( count > 0 ) { state = OnReadyState ; } else { System . out . println ( \"Oo,out of candies\" ); state = SoldOutState ; } } public void printstate () { switch ( state ) { case SoldOutState : System . out . println ( \"***SoldOutState***\" ); break ; case OnReadyState : System . out . println ( \"***OnReadyState***\" ); break ; case HasCoin : System . out . println ( \"***HasCoin***\" ); break ; case SoldState : System . out . println ( \"***SoldState***\" ); break ; } } } \u200b \u90a3\u4e48\u4e0a\u9762\u8fd9\u79cd\u65b9\u5f0f\u5b58\u5728\u4ec0\u4e48\u95ee\u9898\u5462\uff1f\u9996\u5148\u5f88\u76f4\u89c2\u7684\u611f\u53d7\u5c31\u662f\uff1a \u5b58\u5728\u5927\u91cf\u7684 switch case \u8bed\u53e5 \u5f53\u7136\u53ef\u4ee5\u7528 if else \u4e5f\u662f\u4e00\u6837\u7684\uff1b \u53ef\u6269\u5c55\u6027\u5dee\uff0c\u5e76\u4e14\u4e00\u65e6\u8981\u52a0\u5165\u4e00\u79cd\u65b0\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u5c31\u4f1a\u8981\u4fee\u6539\u6240\u6709\u7684 switch case \u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219\uff1b \u6ca1\u6709\u91c7\u7528\u9762\u5411\u5bf9\u8c61\u7684\u65b9\u5f0f\u53bb\u5c01\u88c5\u3002 \u200b \u6bd4\u5982\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u65b0\u589e\u52a0\u4e86\u4e00\u79cd\u72b6\u6001\uff0c\u8d62\u5bb6\u72b6\u6001\uff0c\u5373\u53ef\u4ee5\u83b7\u53d6\u5230\u4e24\u7c92\u7cd6\u679c\uff1b\u90a3\u4e48\u5982\u679c\u7528\u4e0a\u9762\u7684\u65b9\u5f0f\uff0c\u80af\u5b9a\u662f\u4e0d\u7b26\u5408\u5f00\u95ed\u539f\u5219\u7684\uff0c\u540c\u65f6\u6269\u5c55\u6027\u4e5f\u662f\u4e0d\u597d\u7684\uff1b\u90a3\u4e48\u6211\u4eec\u6709\u4ec0\u4e48\u5176\u5b83\u7684\u65b9\u5f0f\u6765\u89e3\u51b3\u5462\uff1f","title":"\u5bfc\u8a00"},{"location":"java/design-pattern/state-pattern.html#_2","text":"\u200b \u4e3a\u4e86\u89e3\u51b3\u4e0a\u9762\u7684\u95ee\u9898\uff0c\u6211\u4eec\u9996\u5148\u5206\u6790\u9879\u76ee\u4e2d\u53d8\u5316\u7684\u90e8\u5206\u548c\u4e0d\u53d8\u7684\u90e8\u5206\uff0c\u62bd\u5316\u51fa\u53d8\u5316\u7684\u90e8\u5206\uff0c\u6211\u4eec\u53d1\u73b0\u7cd6\u679c\u673a\u63d0\u4f9b\u7684\u884c\u4e3a\u4e00\u822c\u662f\u4e0d\u53d8\u7684\uff0c\u5c31\u662f\u6295\u5165\u786c\u5e01\u3001\u8f6c\u52a8\u66f2\u67c4\u7ed9\u3001\u9000\u56de\u786c\u5e01\u3001\u673a\u5668\u53d1\u653e\u7cd6\u679c\uff1b\u800c\u7cd6\u679c\u673a\u7684\u72b6\u6001\u662f\u53ef\u4ee5\u53d8\u5316\u7684\uff0c\u53ef\u4ee5\u65b0\u589e\u51fa\u4e00\u79cd\u72b6\u6001\u6765\uff0c\u6bd4\u5982\u6211\u4eec\u8bf4\u7684\u8d62\u5bb6\u72b6\u6001\u3002\u90a3\u4e48\u6211\u4eec\u8fd9\u4e2a\u62bd\u51fa\u53d8\u5316\u7684\u90e8\u5206\uff0c\u5373\u6211\u4eec\u8bf4\u7684\u72b6\u6001\uff0c\u4e8e\u662f\u51fa\u73b0\u4e86\u4e0b\u9762\u7684\u7ed3\u6784\u8bbe\u8ba1\u65b9\u6848\uff1a \u200b \u8fd9\u4e2a\u7ed3\u6784\u56fe\u544a\u8bc9\u6211\u4eec\uff0c\u63d0\u70bc\u51fa\u72b6\u6001\u63a5\u53e3\u51fa\u6765\uff0c\u7136\u540e\u5c06\u5404\u4e2a\u72b6\u6001\u62bd\u51fa\uff0c\u5e76\u53bb\u5b9e\u73b0\u63a5\u53e3\uff0c\u6bcf\u4e2a\u72b6\u6001\u90fd\u6301\u6709\u6295\u5165\u786c\u5e01\uff0c\u9000\u56de\u786c\u5e01\uff0c\u8f6c\u52a8\u66f2\u67c4\u3001\u552e\u51fa\u7cd6\u679c\u8fd9\u51e0\u79cd\u884c\u4e3a\u5bf9\u5e94\u7684\u65b9\u6cd5\u505a\u51fa\u76f8\u5e94\uff1b\u800c\u7cd6\u679c\u673a\u6301\u6709\u6240\u6709\u7684\u72b6\u6001\uff0c\u5e76\u901a\u8fc7\u5f15\u7528\u72b6\u6001\u63a5\u53e3\u6765\u64cd\u4f5c\u5404\u4e2a\u72b6\u6001\uff1b\u8fd9\u79cd\u8bbe\u8ba1\u67b6\u6784\u5c31\u662f\u6211\u4eec\u8bf4\u7684\u72b6\u6001\u6a21\u5f0f\u3002 \u72b6\u6001\u6a21\u5f0f\u5b9a\u4e49 \uff1a\u5bf9\u8c61\u884c\u4e3a\u7684\u53d8\u5316\u662f\u7531\u4e8e\u72b6\u6001\u7684\u53d8\u5316\u5f15\u5165\uff0c\u90a3\u4e48\u5373\u5f53\u5185\u90e8\u72b6\u6001\u53d1\u751f\u53d8\u5316\u7684\u65f6\u5019\uff0c\u5c31\u4f1a\u6539\u53d8\u5bf9\u8c61\u7684\u884c\u4e3a\uff0c\u800c\u8fd9\u79cd\u6539\u53d8\u89c6\u4e4e\u5c31\u6539\u53d8\u4e86\u6574\u4e2a\u7c7b\u3002 \u90a3\u4e48\u73b0\u5728\u91c7\u7528\u72b6\u6001\u6a21\u5f0f\u6765\u89e3\u51b3\u95ee\u9898\uff1a","title":"\u72b6\u6001\u6a21\u5f0f"},{"location":"java/design-pattern/state-pattern.html#_3","text":"State.java public interface State { void insertCoin (); void returnCoin (); void turnCrank (); void dispense (); void printState (); }","title":"\u63a5\u53e3"},{"location":"java/design-pattern/state-pattern.html#_4","text":"HasCoin.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 import java.util.Random ; public class HasCoin implements State { private CandyMachine mCandyMachine ; public HasCoin ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"you can't insert another coin!\" ); } @Override public void returnCoin () { System . out . println ( \"coin return!\" ); mCandyMachine . setState ( mCandyMachine . mOnReadyState ); } @Override public void turnCrank () { System . out . println ( \"crank turn...!\" ); Random ranwinner = new Random (); int winner = ranwinner . nextInt ( 10 ); if ( winner == 0 ) { mCandyMachine . setState ( mCandyMachine . mWinnerState ); } else { mCandyMachine . setState ( mCandyMachine . mSoldState ); } } @Override public void dispense () { } @Override public void printstate () { System . out . println ( \"***HasCoin***\" ); } } \u8bf4\u660e \uff1a\u6211\u4eec\u4f1a\u53d1\u73b0\u91cc\u9762\u5b58\u5728\u4e00\u4e2a\u7cd6\u679c\u673a\u7684\u5c5e\u6027\uff0c\u800c\u4e4b\u6240\u4ee5\u5b58\u5728\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5c31\u662f\u56e0\u4e3a\u7cd6\u679c\u673a\u4e2d\u6301\u6709\u6240\u6709\u7684\u72b6\u6001\uff0c\u800c\u5728\u51c6\u5907\u72b6\u6001\u4e0b\uff0c\u80af\u5b9a\u4f1a\u7531\u4e8e\u67d0\u79cd\u884c\u4e3a\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff0c\u800c\u8981\u6539\u53d8\u7684\u72b6\u6001\u90fd\u5728\u7cd6\u679c\u673a\u4e2d\uff0c\u6240\u4ee5\u6301\u6709\u4e00\u4e2a\u7cd6\u679c\u673a\u5c5e\u6027\uff0c\u4e0b\u9762\u4e5f\u4e00\u6837\uff0c\u4e0d\u5728\u91cd\u590d\u8bf4\u660e\u3002","title":"\u51c6\u5907\u72b6\u6001"},{"location":"java/design-pattern/state-pattern.html#_5","text":"OnReadyState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 public class OnReadyState implements State { private CandyMachine mCandyMachine ; public OnReadyState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"you have inserted a coin,next,please turn crank!\" ); mCandyMachine . setState ( mCandyMachine . mHasCoin ); } @Override public void returnCoin () { System . out . println ( \"you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"you turned,but you haven't inserted a coin!\" ); } @Override public void dispense () { } @Override public void printstate () { System . out . println ( \"***OnReadyState***\" ); } }","title":"\u5f85\u673a\u72b6\u6001"},{"location":"java/design-pattern/state-pattern.html#_6","text":"SoldOutState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 public class SoldOutState implements State { private CandyMachine mCandyMachine ; public SoldOutState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"you can't insert coin,the machine sold out!\" ); } @Override public void returnCoin () { System . out . println ( \"you can't return,you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"you turned,but there are no candies!\" ); } @Override public void dispense () { } @Override public void printstate () { System . out . println ( \"***SoldOutState***\" ); } }","title":"\u521d\u59cb\u72b6\u6001"},{"location":"java/design-pattern/state-pattern.html#_7","text":"SoldState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 public class SoldState implements State { private CandyMachine mCandyMachine ; public SoldState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"please wait!we are giving you a candy!\" ); } @Override public void returnCoin () { System . out . println ( \"you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"we are giving you a candy,turning another get nothing,!\" ); } @Override public void dispense () { mCandyMachine . releaseCandy (); if ( mCandyMachine . getCount () > 0 ) { mCandyMachine . setState ( mCandyMachine . mOnReadyState ); } else { System . out . println ( \"Oo,out of candies\" ); mCandyMachine . setState ( mCandyMachine . mSoldOutState ); } } @Override public void printstate () { System . out . println ( \"***SoldState***\" ); } }","title":"\u552e\u51fa\u72b6\u6001"},{"location":"java/design-pattern/state-pattern.html#_8","text":"WinnerState.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 public class WinnerState implements State { private CandyMachine mCandyMachine ; public WinnerState ( CandyMachine mCandyMachine ) { this . mCandyMachine = mCandyMachine ; } @Override public void insertCoin () { System . out . println ( \"please wait!we are giving you a candy!\" ); } @Override public void returnCoin () { System . out . println ( \"you haven't inserted a coin yet!\" ); } @Override public void turnCrank () { System . out . println ( \"we are giving you a candy,turning another get nothing,!\" ); } @Override public void dispense () { mCandyMachine . releaseCandy (); if ( mCandyMachine . getCount () == 0 ) { mCandyMachine . setState ( mCandyMachine . mSoldOutState ); } else { System . out . println ( \"you are a winner!you get another candy!\" ); mCandyMachine . releaseCandy (); if ( mCandyMachine . getCount () > 0 ) { mCandyMachine . setState ( mCandyMachine . mOnReadyState ); } else { System . out . println ( \"Oo,out of candies\" ); mCandyMachine . setState ( mCandyMachine . mSoldOutState ); } } } @Override public void printstate () { System . out . println ( \"***WinnerState***\" ); } }","title":"\u8d62\u5bb6\u72b6\u6001"},{"location":"java/design-pattern/state-pattern.html#_9","text":"\u200b\u7cd6\u679c\u673a\u8981\u6301\u6709\u6240\u6709\u7684\u72b6\u6001\uff0c\u5e76\u5728\u521d\u59cb\u5316\u7684\u65f6\u5019\uff0c\u8981\u8bbe\u7f6e\u5176\u5f00\u59cb\u7684\u72b6\u6001\uff0c\u7136\u540e\u7cd6\u679c\u7684\u5404\u4e2a\u884c\u4e3a\uff0c\u5c31\u59d4\u6258\u5230\u4e86\u5404\u4e2a\u72b6\u6001\u4e2d\u81ea\u5df1\u7ef4\u62a4 CandyMachine.java 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 public class CandyMachine { State mSoldOutState ; State mOnReadyState ; State mHasCoin ; State mSoldState ; State mWinnerState ; private State state ; private int count ; public CandyMachine ( int count ) { this . count = count ; mSoldOutState = new SoldOutState ( this ); mOnReadyState = new OnReadyState ( this ); mHasCoin = new HasCoin ( this ); mSoldState = new SoldState ( this ); mWinnerState = new WinnerState ( this ); if ( count > 0 ) { state = mOnReadyState ; } else { state = mSoldOutState ; } } public void setState ( State state ) { this . state = state ; } public void insertCoin () { state . insertCoin (); } public void returnCoin () { state . returnCoin (); } public void turnCrank () { state . turnCrank (); state . dispense (); } void releaseCandy () { if ( count > 0 ) { count = count - 1 ; System . out . println ( \"a candy rolling out!\" ); } } public int getCount () { return count ; } public void printstate () { state . printstate (); } }","title":"\u96c6\u6210"},{"location":"java/design-pattern/state-pattern.html#_10","text":"MainTest.java public class MainTest { public static void main ( String [] args ) { CandyMachine mCandyMachine = new CandyMachine ( 6 ); mCandyMachine . printstate (); mCandyMachine . insertCoin (); mCandyMachine . printstate (); mCandyMachine . turnCrank (); mCandyMachine . printstate (); mCandyMachine . insertCoin (); mCandyMachine . printstate (); mCandyMachine . turnCrank (); mCandyMachine . printstate (); } } \u7ed3\u679c\u5982\u4e0b: \u548c\u5f00\u59cb\u7684\u4f20\u7edf\u65b9\u6848\u5bf9\u6bd4\uff0c\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u5177\u5907\u4e86\u53ef\u6269\u5c55\u6027\u3002","title":"\u6d4b\u8bd5"},{"location":"java/design-pattern/state-pattern.html#_11","text":"\u72b6\u6001\u6a21\u5f0f\u5141\u8bb8\u5bf9\u8c61\u5728\u5185\u90e8\u72b6\u6001\u6539\u53d8\u65f6\u6539\u53d8\u5b83\u7684\u884c\u4e3a\uff0c\u5bf9\u8c61\u770b\u8d77\u6765\u597d\u50cf\u4fee\u6539\u4e86\u5b83\u7684\u7c7b\u3002 \u8fd9\u4e2a\u6a21\u5f0f\u5c06\u72b6\u6001\u5c01\u88c5\u6210\u72ec\u7acb\u7684\u7c7b\uff0c\u5e76\u5c06\u52a8\u4f5c\u59d4\u6258\u5230\u4ee3\u8868\u5f53\u524d\u72b6\u6001\u7684\u5bf9\u8c61\uff0c\u8fd9\u5c31\u662f\u8bf4\u884c\u4e3a\u4f1a\u968f\u7740\u5185\u90e8\u72b6\u6001\u800c\u6539\u53d8\u3002\u201c\u770b\u8d77\u6765\u597d\u50cf\u4fee\u6539\u4e86\u5b83\u7684\u7c7b\u201d\u662f\u4ec0\u4e48\u610f\u601d\u5462\uff1f\u4ece\u5ba2\u6237\u7684\u89c6\u89d2\u6765\u770b\uff1a\u5982\u679c\u8bf4\u4f60\u4f7f\u7528\u7684\u5bf9\u8c61\u80fd\u591f\u5b8c\u5168\u6539\u53d8\u5b83\u7684\u884c\u4e3a\uff0c\u90a3\u4e48\u4f60\u4f1a\u89c9\u5f97\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u4ece\u522b\u7684\u7c7b\u5b9e\u4f8b\u5316\u800c\u6765\u7684\u3002\u7136\u800c\uff0c\u5b9e\u9645\u4e0a\uff0c\u4f60\u77e5\u9053\u6211\u4eec\u662f\u5728\u4f7f\u7528\u7ec4\u5408\u901a\u8fc7\u7b80\u5355\u5f15\u7528\u4e0d\u540c\u7684\u72b6\u6001\u5bf9\u8c61\u6765\u9020\u6210\u7c7b\u6539\u53d8\u7684\u5047\u8c61","title":"\u603b\u7ed3"},{"location":"java/design-pattern/state-pattern.html#_12","text":"\u5ba2\u6237\u4e0d\u4f1a\u548c\u72b6\u6001\u8fdb\u884c\u4ea4\u4e92,\u5168\u76d8\u4e86\u89e3\u72b6\u6001\u662f context\u7684\u5de5\u4f5c \u5728\u72b6\u6001\u6a21\u5f0f\u4e2d\uff0c\u6bcf\u4e2a\u72b6\u6001\u901a\u8fc7\u6301\u6709Context\u7684\u5f15\u7528\uff0c\u6765\u5b9e\u73b0\u72b6\u6001\u8f6c\u79fb \u4f7f\u7528\u72b6\u6001\u6a21\u5f0f\u603b\u662f\u4f1a\u589e\u52a0\u8bbe\u8ba1\u4e2d\u7c7b\u7684\u6570\u76ee\uff0c\u8fd9\u662f\u4e3a\u4e86\u8981\u83b7\u5f97\u7a0b\u5e8f\u53ef\u6269\u5c55\u6027\uff0c\u5f39\u6027\u7684\u4ee3\u4ef7\uff0c\u5982\u679c\u4f60\u7684\u4ee3\u7801\u4e0d\u662f\u4e00\u6b21\u6027\u7684\uff0c\u540e\u671f\u53ef\u80fd\u4f1a\u4e0d\u65ad\u52a0\u5165\u4e0d\u540c\u7684\u72b6\u6001\uff0c\u90a3\u4e48\u72b6\u6001\u6a21\u5f0f\u7684\u8bbe\u8ba1\u662f\u7edd\u5bf9\u503c\u5f97\u7684\u3002\u3010\u540c\u65f6\u4e5f\u662f\u4e00\u4e2a\u7f3a\u70b9\u3011 \u72b6\u6001\u7c7b\u53ef\u4ee5\u88ab\u591a\u4e2acontext\u5b9e\u4f8b\u5171\u4eab","title":"\u72b6\u6001\u6a21\u5f0f\u8981\u70b9"},{"location":"java/design-pattern/state-pattern.html#_13","text":"\u76f8\u4f3c\u4e4b\u5904 \u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u6216\u7b56\u7565\u90fd\u5f88\u5bb9\u6613\uff0c\u800c\u4e14\u4e0d\u9700\u8981\u4fee\u6539\u4f7f\u7528\u5b83\u4eec\u7684Context\u5bf9\u8c61\uff1b \u5b83\u4eec\u90fd\u8ba9\u4f60\u7684\u4ee3\u7801\u7b26\u5408OCP\u539f\u5219\uff08\u8f6f\u4ef6\u5bf9\u6269\u5c55\u5e94\u8be5\u662f\u5f00\u53d1\u7684\uff0c\u5bf9\u4fee\u6539\u5e94\u8be5\u662f\u5173\u95ed\u7684\uff09\u3002\u5728\u72b6\u6001\u6a21\u5f0f\u548c\u7b56\u7565\u6a21\u5f0f\u4e2d\uff0cContext\u5bf9\u8c61\u5bf9\u4fee\u6539\u662f\u5173\u95ed\u7684\uff0c\u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u6216\u7b56\u7565\uff0c\u90fd\u4e0d\u9700\u8981\u4fee\u6539 Context\uff1b \u6b63\u5982\u72b6\u6001\u6a21\u5f0f\u4e2d\u7684Context\u4f1a\u6709\u521d\u59cb\u72b6\u6001\u4e00\u6837\uff0c\u7b56\u7565\u6a21\u5f0f\u540c\u6837\u6709\u9ed8\u8ba4\u7b56\u7565\uff1b \u72b6\u6001\u6a21\u5f0f\u4ee5\u4e0d\u540c\u7684\u72b6\u6001\u5c01\u88c5\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u800c\u7b56\u7565\u6a21\u5f0f\u4ee5\u4e0d\u540c\u7684\u7b56\u7565\u5c01\u88c5\u4e0d\u540c\u7684\u884c\u4e3a\uff1b \u5b83\u4eec\u90fd\u4f9d\u8d56\u5b50\u7c7b\u53bb\u5b9e\u73b0\u76f8\u5173\u884c\u4e3a\uff1b \u4e0d\u540c \u72b6\u6001\u6a21\u5f0f\u5e2e\u52a9\u5bf9\u8c61\u7ba1\u7406\u72b6\u6001\uff0c\u6211\u4eec\u5c06\u4e00\u7fa4\u884c\u4e3a\u5c01\u88c5\u65e9\u72b6\u6001\u5bf9\u8c61\u4e2d,context\u7684\u884c\u4e3a\u968f\u65f6\u53ef\u59d4\u6258\u5230\u90a3\u4e9b\u72b6\u6001\u4e2d\u7684\u4e00\u4e2a.\u968f\u7740\u65f6\u95f4\u7684\u6d41\u901d\uff0c\u5f53\u524d\u72b6\u6001\u5728\u72b6\u6001\u5bf9\u8c61\u96c6\u5408\u4e2d\u6e38\u8d70\u6539\u53d8\uff0c\u4ee5\u53cd\u6620context\u5185\u90e8\u72b6\u6001\uff0c\u56e0\u6b64\uff0ccontext\u7684\u884c\u4e3a\u4e5f\u4f1a\u8ddf\u7740\u6539\u53d8\u3002\u5f53\u8981\u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u65f6\uff0c\u4e0d\u9700\u8981\u4fee\u6539\u539f\u6765\u4ee3\u7801\u6dfb\u52a0\u65b0\u7684\u72b6\u6001\u7c7b\u5373\u53ef\uff1b \u800c\u7b56\u7565\u6a21\u5f0f\u5141\u8bb8Client\u9009\u62e9\u4e0d\u540c\u7684\u884c\u4e3a\u3002\u901a\u8fc7\u5c01\u88c5\u4e00\u7ec4\u76f8\u5173\u7b97\u6cd5\uff0c\u4e3aClient\u63d0\u4f9b\u8fd0\u884c\u65f6\u7684\u7075\u6d3b\u6027\u3002Client\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\uff0c\u9009\u62e9\u4efb\u4e00\u7b97\u6cd5\uff0c\u800c\u4e0d\u6539\u53d8\u4f7f\u7528\u7b97\u6cd5\u7684Context\u3002\u4e00\u4e9b\u6d41\u884c\u7684\u7b56\u7565\u6a21\u5f0f\u7684\u4f8b\u5b50\u662f\u5199\u90a3\u4e9b\u4f7f\u7528\u7b97\u6cd5\u7684\u4ee3\u7801\uff0c\u4f8b\u5982\u52a0\u5bc6\u7b97\u6cd5\u3001\u538b\u7f29\u7b97\u6cd5\u3001\u6392\u5e8f\u7b97\u6cd5\u3002\u5ba2\u6237\u901a\u5e38\u4e3b\u52a8\u6307\u5b9acontext\u6240\u8981\u7ec4\u5408\u7684\u7b56\u7565\u5bf9\u8c61\u662f\u54ea\u4e00\u4e2a\uff1b **\u6700\u6839\u672c\u7684\u5dee\u5f02**\u5728\u4e8e\u7b56\u7565\u6a21\u5f0f\u662f\u5728\u6c42\u89e3\u540c\u4e00\u4e2a\u95ee\u9898\u7684\u591a\u79cd\u89e3\u6cd5\uff0c\u8fd9\u4e9b\u4e0d\u540c\u89e3\u6cd5\u4e4b\u95f4\u6beb\u65e0\u5173\u8054\uff1b\u72b6\u6001\u6a21\u5f0f\u5219\u4e0d\u540c\uff0c\u72b6\u6001\u6a21\u5f0f\u8981\u6c42\u5404\u4e2a\u72b6\u6001\u4e4b\u95f4\u6709\u6240\u5173\u8054\uff0c\u4ee5\u4fbf\u5b9e\u73b0\u72b6\u6001\u8f6c\u79fb\u3002","title":"\u72b6\u6001\u6a21\u5f0f\u548c\u7b56\u7565\u6a21\u5f0f\u5bf9\u6bd4"},{"location":"java/language/annotation.html","text":"\u5143\u6ce8\u89e3 \u00b6 @Target \u00b6 \u6807\u8bb0\u6ce8\u89e3\u6240\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\u2014\u2014 ElementType \uff0c\u5305\u62ec\uff1a TYPE \uff1a\u7c7b\uff0c\u63a5\u53e3\uff08\u5305\u62ec\u6ce8\u89e3\u7c7b\u578b\uff09\uff0c\u6216\u8005\u679a\u4e3e FIELD \uff1a\u6210\u5458\u53d8\u91cf\uff08\u5305\u62ec\u679a\u4e3e\u5e38\u91cf\uff09 METHOD \uff1a\u65b9\u6cd5 PARAMETER \uff1a\u53c2\u6570 CONSTRUCTOR \uff1a\u6784\u9020\u65b9\u6cd5 LOCAL_VARIABLE \uff1a\u672c\u5730\u53d8\u91cf ANNOTATION_TYPE \uff1a\u6ce8\u89e3\u7c7b\u578b PACKAGE \uff1a\u5305 @Retention \u00b6 \u6807\u8bb0\u6ce8\u89e3\u6240\u5e94\u7528\u7684\u65f6\u95f4\u2014\u2014 RetentionPolicy \uff0c\u5305\u62ec\uff1a SOURCE \uff1a\u7f16\u8bd1\u524d CLASS \uff1a\u8fd0\u884c\u524d\u7684 .class \u6587\u4ef6\uff0c\u9ed8\u8ba4\u503c RUNTIME \uff1a\u4e00\u76f4\u4fdd\u6301\u5230\u8fd0\u884c\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6 @Documented \u00b6 \u5982\u679c @A \u88ab @Documented \u6807\u8bb0\uff0c\u5219 @A \u6807\u8bb0\u7684\u5143\u7d20\u751f\u6210\u6587\u6863\u65f6\u4f1a\u663e\u793a @A . @Inherited \u00b6 \u6807\u8bb0\u7684\u6ce8\u89e3\u4f1a\u88ab\u81ea\u52a8\u7ee7\u627f. \u793a\u4f8b \u00b6 Test.java @Target ( ElementType . FIELD ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { } \u53c2\u8003 \u00b6 java.lang.annotation (Java SE 11 & JDK 11 ) Annotation Target ElementType Retention RetentionPolicy Documented Inherited","title":"Annotation"},{"location":"java/language/annotation.html#_1","text":"","title":"\u5143\u6ce8\u89e3"},{"location":"java/language/annotation.html#target","text":"\u6807\u8bb0\u6ce8\u89e3\u6240\u5e94\u7528\u7684\u4e0a\u4e0b\u6587\u2014\u2014 ElementType \uff0c\u5305\u62ec\uff1a TYPE \uff1a\u7c7b\uff0c\u63a5\u53e3\uff08\u5305\u62ec\u6ce8\u89e3\u7c7b\u578b\uff09\uff0c\u6216\u8005\u679a\u4e3e FIELD \uff1a\u6210\u5458\u53d8\u91cf\uff08\u5305\u62ec\u679a\u4e3e\u5e38\u91cf\uff09 METHOD \uff1a\u65b9\u6cd5 PARAMETER \uff1a\u53c2\u6570 CONSTRUCTOR \uff1a\u6784\u9020\u65b9\u6cd5 LOCAL_VARIABLE \uff1a\u672c\u5730\u53d8\u91cf ANNOTATION_TYPE \uff1a\u6ce8\u89e3\u7c7b\u578b PACKAGE \uff1a\u5305","title":"@Target"},{"location":"java/language/annotation.html#retention","text":"\u6807\u8bb0\u6ce8\u89e3\u6240\u5e94\u7528\u7684\u65f6\u95f4\u2014\u2014 RetentionPolicy \uff0c\u5305\u62ec\uff1a SOURCE \uff1a\u7f16\u8bd1\u524d CLASS \uff1a\u8fd0\u884c\u524d\u7684 .class \u6587\u4ef6\uff0c\u9ed8\u8ba4\u503c RUNTIME \uff1a\u4e00\u76f4\u4fdd\u6301\u5230\u8fd0\u884c\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u53cd\u5c04\u83b7\u53d6","title":"@Retention"},{"location":"java/language/annotation.html#documented","text":"\u5982\u679c @A \u88ab @Documented \u6807\u8bb0\uff0c\u5219 @A \u6807\u8bb0\u7684\u5143\u7d20\u751f\u6210\u6587\u6863\u65f6\u4f1a\u663e\u793a @A .","title":"@Documented"},{"location":"java/language/annotation.html#inherited","text":"\u6807\u8bb0\u7684\u6ce8\u89e3\u4f1a\u88ab\u81ea\u52a8\u7ee7\u627f.","title":"@Inherited"},{"location":"java/language/annotation.html#_2","text":"Test.java @Target ( ElementType . FIELD ) @Retention ( RetentionPolicy . RUNTIME ) public @interface Test { }","title":"\u793a\u4f8b"},{"location":"java/language/annotation.html#_3","text":"java.lang.annotation (Java SE 11 & JDK 11 ) Annotation Target ElementType Retention RetentionPolicy Documented Inherited","title":"\u53c2\u8003"},{"location":"java/library/lombok.html","text":"\u5b89\u88c5 \u00b6 Maven \u00b6 <dependency> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> ${lombok.version} </version> <scope> provided </scope> </dependency> IDEA \u00b6 \u5b89\u88c5\u63d2\u4ef6 Lombok . \u539f\u7406 \u00b6 \u4ece Java 6 \u5f00\u59cb\uff0cJava \u652f\u6301\u63d2\u5165\u5f0f\u6ce8\u89e3\u5904\u7406 API\uff08 JSR 269 Pluggable Annotation Processing API \uff09\uff0c\u53ea\u8981\u7a0b\u5e8f\u5b9e\u73b0\u4e86\u8be5 API\uff0c javac \u7f16\u8bd1\u6e90\u7801\u65f6\u5c31\u4f1a\u8c03\u7528\u5b9a\u4e49\u7684\u6ce8\u89e3\u3002 Lombok \u7f16\u8bd1\u6d41\u7a0b\u5982\u4e0b\uff1a javac \u5206\u6790\u6e90\u7801\uff0c\u751f\u6210\u4e00\u68f5\u62bd\u8c61\u8bed\u6cd5\u6811\uff08 AST \uff09\uff1b javac \u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8c03\u7528\u5b9e\u73b0 JSR 269 API \u7684 Lombok \u7a0b\u5e8f\uff1b Lombok \u6839\u636e\u5b9a\u4e49\u7684\u6ce8\u89e3\u4fee\u6539\u4e0a\u8ff0 AST \uff1b javac \u57fa\u4e8e\u4fee\u6539\u540e\u7684 AST \u751f\u6210\u5b57\u8282\u7801\u6587\u4ef6\u3002 \u5e94\u7528 \u00b6 @NonNull \u00b6 @Cleanup \u00b6 \u8c03\u7528 close() \u65b9\u6cd5 @Getter/@Setter \u00b6 @ToString \u00b6 @EqualsAndHashCode \u00b6 \u751f\u6210 equals() \u548c hashCode() \u65b9\u6cd5 @NoArgsConstructor/@RequiredArgsConstructor/@AllArgsConstructor \u00b6 @Data \u00b6 @ToString \uff0c @EqualsAndHashCode \uff0c @Getter \uff0c @Setter \u548c @RequiredArgsConstrutor \u7684\u7ec4\u5408 @Value \u00b6 \u6807\u8bb0\u4e0d\u53ef\u53d8\u7c7b @Builder \u00b6 @SneakyThrows \u00b6 \u4ee3\u66ff try{}catch{} @Synchronized \u00b6 @With \u00b6 \u4e0d\u53ef\u53d8\u5bf9\u8c61\u7684 setter \u65b9\u6cd5\uff0c\u53ef\u4ee5\u514b\u9686\u5bf9\u8c61\u4ec5\u6539\u53d8\u4e00\u4e2a\u5c5e\u6027 @Log \u00b6 \u751f\u6210\u547d\u540d\u4e3a log \u7684 Logger \u9759\u6001\u5e38\u91cf\uff0c \u53c2\u8003 \u00b6 Overview (Lombok) Lombok Features","title":"Lombok"},{"location":"java/library/lombok.html#_1","text":"","title":"\u5b89\u88c5"},{"location":"java/library/lombok.html#maven","text":"<dependency> <groupId> org.projectlombok </groupId> <artifactId> lombok </artifactId> <version> ${lombok.version} </version> <scope> provided </scope> </dependency>","title":"Maven"},{"location":"java/library/lombok.html#idea","text":"\u5b89\u88c5\u63d2\u4ef6 Lombok .","title":"IDEA"},{"location":"java/library/lombok.html#_2","text":"\u4ece Java 6 \u5f00\u59cb\uff0cJava \u652f\u6301\u63d2\u5165\u5f0f\u6ce8\u89e3\u5904\u7406 API\uff08 JSR 269 Pluggable Annotation Processing API \uff09\uff0c\u53ea\u8981\u7a0b\u5e8f\u5b9e\u73b0\u4e86\u8be5 API\uff0c javac \u7f16\u8bd1\u6e90\u7801\u65f6\u5c31\u4f1a\u8c03\u7528\u5b9a\u4e49\u7684\u6ce8\u89e3\u3002 Lombok \u7f16\u8bd1\u6d41\u7a0b\u5982\u4e0b\uff1a javac \u5206\u6790\u6e90\u7801\uff0c\u751f\u6210\u4e00\u68f5\u62bd\u8c61\u8bed\u6cd5\u6811\uff08 AST \uff09\uff1b javac \u8fd0\u884c\u8fc7\u7a0b\u4e2d\u8c03\u7528\u5b9e\u73b0 JSR 269 API \u7684 Lombok \u7a0b\u5e8f\uff1b Lombok \u6839\u636e\u5b9a\u4e49\u7684\u6ce8\u89e3\u4fee\u6539\u4e0a\u8ff0 AST \uff1b javac \u57fa\u4e8e\u4fee\u6539\u540e\u7684 AST \u751f\u6210\u5b57\u8282\u7801\u6587\u4ef6\u3002","title":"\u539f\u7406"},{"location":"java/library/lombok.html#_3","text":"","title":"\u5e94\u7528"},{"location":"java/library/lombok.html#nonnull","text":"","title":"@NonNull"},{"location":"java/library/lombok.html#cleanup","text":"\u8c03\u7528 close() \u65b9\u6cd5","title":"@Cleanup"},{"location":"java/library/lombok.html#gettersetter","text":"","title":"@Getter/@Setter"},{"location":"java/library/lombok.html#tostring","text":"","title":"@ToString"},{"location":"java/library/lombok.html#equalsandhashcode","text":"\u751f\u6210 equals() \u548c hashCode() \u65b9\u6cd5","title":"@EqualsAndHashCode"},{"location":"java/library/lombok.html#noargsconstructorrequiredargsconstructorallargsconstructor","text":"","title":"@NoArgsConstructor/@RequiredArgsConstructor/@AllArgsConstructor"},{"location":"java/library/lombok.html#data","text":"@ToString \uff0c @EqualsAndHashCode \uff0c @Getter \uff0c @Setter \u548c @RequiredArgsConstrutor \u7684\u7ec4\u5408","title":"@Data"},{"location":"java/library/lombok.html#value","text":"\u6807\u8bb0\u4e0d\u53ef\u53d8\u7c7b","title":"@Value"},{"location":"java/library/lombok.html#builder","text":"","title":"@Builder"},{"location":"java/library/lombok.html#sneakythrows","text":"\u4ee3\u66ff try{}catch{}","title":"@SneakyThrows"},{"location":"java/library/lombok.html#synchronized","text":"","title":"@Synchronized"},{"location":"java/library/lombok.html#with","text":"\u4e0d\u53ef\u53d8\u5bf9\u8c61\u7684 setter \u65b9\u6cd5\uff0c\u53ef\u4ee5\u514b\u9686\u5bf9\u8c61\u4ec5\u6539\u53d8\u4e00\u4e2a\u5c5e\u6027","title":"@With"},{"location":"java/library/lombok.html#log","text":"\u751f\u6210\u547d\u540d\u4e3a log \u7684 Logger \u9759\u6001\u5e38\u91cf\uff0c","title":"@Log"},{"location":"java/library/lombok.html#_4","text":"Overview (Lombok) Lombok Features","title":"\u53c2\u8003"},{"location":"java/spring/index.html","text":"Spring Projects \u00b6 Spring Framework Documentation Spring Core Spring AOP Spring Data Access Transaction Spring Boot","title":"Spring"},{"location":"java/spring/index.html#spring-projects","text":"Spring Framework Documentation Spring Core Spring AOP Spring Data Access Transaction Spring Boot","title":"Spring Projects"},{"location":"java/spring/aop.html","text":"TODO \u6982\u5ff5 \u00b6 AOP \u80fd\u591f\u5728\u4e0d\u6539\u53d8\u6e90\u7801\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u7a0b\u5e8f\u7684\u884c\u4e3a\uff0c\u5b83\u6709\u51e0\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1a Aspect \uff1a Join Point : A point during the execution of a script, such as the execution of a method or property access. Pointcut : A regular expression that matches join points. Advice : Action taken by an aspect at a particular join point. To implement AOP, an advice is associated with a pointcut expression and runs at any join point that matches the pointcut . @AspectJ \u00b6 @AspectJ refers to a style of declaring aspects as regular Java classes annotated with annotations, introduced by the AspectJ Project . Pointcut Expressions \u00b6 A pointcut expression can appear as a value of @Pointcut annotation, telling Spring AOP what to watch. Advice \u00b6 Advice is an action taken by an aspect at a particular join point . Different types of advice include around , before and after advice. The main purpose of aspects is to support cross-cutting concerns, such as logging, profiling, caching, and transaction management. With Spring, you can declare advice using AspectJ annotations, but you must first apply the @EnableAspectJAutoProxy annotation to your configuration class , which will enable support for handling components marked with AspectJ's @Aspect annotation. @Configuration @EnableAspectJAutoProxy public class AopConfiguration { } In Spring Boot projects, we don't have to explicitly use the @EnableAspectJAutoProxy . There's a dedicated [AopAutoConfiguration ](https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.html) that enables Spring's AOP support if the Aspect or Advice is on the classpath. Before Advice \u00b6 This advice, as the name implies, is executed before the join point. It doesn't prevent the continued execution of the method it advises unless an exception is thrown. Consider the following aspect that simply logs the method name before it is called. @Component @Aspect public class LoggingAspect { private Logger logger = Logger . getLogger ( LoggingAspect . class . getName ()); @Pointcut ( \"@target(org.springframework.stereotype.Repository)\" ) public void repositoryMethods () {} @Before ( \"repositoryMethods()\" ) public void logMethodCall ( JoinPoint jp ) { String methodName = jp . getSignature (). getName (); logger . info ( \"Before \" + methodName ); } } The logMethodCall advice will be executed before any repository method defined by the repositoryMethods pointcut. After Advice \u00b6 After advice, declared by using the @After annotation, is executed after a matched method's execution, whether or not an exception was thrown . In some ways, it is similar to a finally block. In case you need advice to be triggered only after normal execution, you should use the returning advice declared by @AfterReturning annotation. If you want your advice to be triggered only when the target method throws an exception, you should use throwing advice , declared by using the @AfterThrowing annotation. Suppose that we wish to notify some application components when a new instance of Foo is created. We could publish an event from FooDao , but this would violate the single responsibility principle. Instead, we can accomplish this by defining the following aspect: @Component @Aspect public class PublishingAspect { private ApplicationEventPublisher eventPublisher ; @Autowired public void setEventPublisher ( ApplicationEventPublisher eventPublisher ) { this . eventPublisher = eventPublisher ; } @Pointcut ( \"@target(org.springframework.stereotype.Repository)\" ) public void repositoryMethods () {} @Pointcut ( \"execution(* *..create*(Long,..))\" ) public void firstLongParamMethods () {} @Pointcut ( \"repositoryMethods() && firstLongParamMethods()\" ) public void entityCreationMethods () {} @AfterReturning ( value = \"entityCreationMethods()\" , returning = \"entity\" ) public void logMethodCall ( JoinPoint jp , Object entity ) throws Throwable { eventPublisher . publishEvent ( new FooCreationEvent ( entity )); } } Notice, first, that by using the @AfterReturning annotation we can access the target method's return value. Second, by declaring a parameter of type JoinPoint , we can access the arguments of the target method's invocation. Next we create a listener which will simply log the event. You may read more about events in this tutorial : @Component public class FooCreationEventListener implements ApplicationListener < FooCreationEvent > { private Logger logger = Logger . getLogger ( getClass (). getName ()); @Override public void onApplicationEvent ( FooCreationEvent event ) { logger . info ( \"Created foo instance: \" + event . getSource (). toString ()); } } Around Advice \u00b6 Around advice surrounds a join point such as a method invocation. This is the most powerful kind of advice. Around advice can perform custom behavior both before and after the method invocation . It's also responsible for choosing whether to proceed to the join point or to shortcut the advised method execution by providing its own return value or throwing an exception. To demonstrate its use, suppose that you want to measure method execution time. For this purpose you may create the following aspect: @Aspect @Component public class PerformanceAspect { private Logger logger = Logger . getLogger ( getClass (). getName ()); @Pointcut ( \"within(@org.springframework.stereotype.Repository *)\" ) public void repositoryClassMethods () {} @Around ( \"repositoryClassMethods()\" ) public Object measureMethodExecutionTime ( ProceedingJoinPoint pjp ) throws Throwable { long start = System . nanoTime (); Object retVal = pjp . proceed (); long end = System . nanoTime (); String methodName = pjp . getSignature (). getName (); logger . info ( \"Execution of \" + methodName + \" took \" + TimeUnit . NANOSECONDS . toMillis ( end - start ) + \" ms\" ); return retVal ; } } This advice is triggered when any of the join points matched by the repositoryClassMethods pointcut is executed. This advice takes one parameter of type ProceedingJointPoint . The parameter gives us an opportunity to take action before the target method call. In this case, we simply save the method start time. Second, the advice return type is Object since the target method can return a result of any type. If target method is void , null will be returned. After the target method call, we can measure the timing, log it, and return the method's result value to the caller. \u53c2\u8003 \u00b6 The AspectJ Programming Guide AOP with Spring Spring AOP APIs","title":"AOP"},{"location":"java/spring/aop.html#_1","text":"AOP \u80fd\u591f\u5728\u4e0d\u6539\u53d8\u6e90\u7801\u7684\u60c5\u51b5\u4e0b\u6539\u53d8\u7a0b\u5e8f\u7684\u884c\u4e3a\uff0c\u5b83\u6709\u51e0\u4e2a\u6838\u5fc3\u6982\u5ff5\uff1a Aspect \uff1a Join Point : A point during the execution of a script, such as the execution of a method or property access. Pointcut : A regular expression that matches join points. Advice : Action taken by an aspect at a particular join point. To implement AOP, an advice is associated with a pointcut expression and runs at any join point that matches the pointcut .","title":"\u6982\u5ff5"},{"location":"java/spring/aop.html#aspectj","text":"@AspectJ refers to a style of declaring aspects as regular Java classes annotated with annotations, introduced by the AspectJ Project .","title":"@AspectJ"},{"location":"java/spring/aop.html#pointcut-expressions","text":"A pointcut expression can appear as a value of @Pointcut annotation, telling Spring AOP what to watch.","title":"Pointcut Expressions"},{"location":"java/spring/aop.html#advice","text":"Advice is an action taken by an aspect at a particular join point . Different types of advice include around , before and after advice. The main purpose of aspects is to support cross-cutting concerns, such as logging, profiling, caching, and transaction management. With Spring, you can declare advice using AspectJ annotations, but you must first apply the @EnableAspectJAutoProxy annotation to your configuration class , which will enable support for handling components marked with AspectJ's @Aspect annotation. @Configuration @EnableAspectJAutoProxy public class AopConfiguration { } In Spring Boot projects, we don't have to explicitly use the @EnableAspectJAutoProxy . There's a dedicated [AopAutoConfiguration ](https://docs.spring.io/spring-boot/docs/current/api/org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.html) that enables Spring's AOP support if the Aspect or Advice is on the classpath.","title":"Advice"},{"location":"java/spring/aop.html#before-advice","text":"This advice, as the name implies, is executed before the join point. It doesn't prevent the continued execution of the method it advises unless an exception is thrown. Consider the following aspect that simply logs the method name before it is called. @Component @Aspect public class LoggingAspect { private Logger logger = Logger . getLogger ( LoggingAspect . class . getName ()); @Pointcut ( \"@target(org.springframework.stereotype.Repository)\" ) public void repositoryMethods () {} @Before ( \"repositoryMethods()\" ) public void logMethodCall ( JoinPoint jp ) { String methodName = jp . getSignature (). getName (); logger . info ( \"Before \" + methodName ); } } The logMethodCall advice will be executed before any repository method defined by the repositoryMethods pointcut.","title":"Before Advice"},{"location":"java/spring/aop.html#after-advice","text":"After advice, declared by using the @After annotation, is executed after a matched method's execution, whether or not an exception was thrown . In some ways, it is similar to a finally block. In case you need advice to be triggered only after normal execution, you should use the returning advice declared by @AfterReturning annotation. If you want your advice to be triggered only when the target method throws an exception, you should use throwing advice , declared by using the @AfterThrowing annotation. Suppose that we wish to notify some application components when a new instance of Foo is created. We could publish an event from FooDao , but this would violate the single responsibility principle. Instead, we can accomplish this by defining the following aspect: @Component @Aspect public class PublishingAspect { private ApplicationEventPublisher eventPublisher ; @Autowired public void setEventPublisher ( ApplicationEventPublisher eventPublisher ) { this . eventPublisher = eventPublisher ; } @Pointcut ( \"@target(org.springframework.stereotype.Repository)\" ) public void repositoryMethods () {} @Pointcut ( \"execution(* *..create*(Long,..))\" ) public void firstLongParamMethods () {} @Pointcut ( \"repositoryMethods() && firstLongParamMethods()\" ) public void entityCreationMethods () {} @AfterReturning ( value = \"entityCreationMethods()\" , returning = \"entity\" ) public void logMethodCall ( JoinPoint jp , Object entity ) throws Throwable { eventPublisher . publishEvent ( new FooCreationEvent ( entity )); } } Notice, first, that by using the @AfterReturning annotation we can access the target method's return value. Second, by declaring a parameter of type JoinPoint , we can access the arguments of the target method's invocation. Next we create a listener which will simply log the event. You may read more about events in this tutorial : @Component public class FooCreationEventListener implements ApplicationListener < FooCreationEvent > { private Logger logger = Logger . getLogger ( getClass (). getName ()); @Override public void onApplicationEvent ( FooCreationEvent event ) { logger . info ( \"Created foo instance: \" + event . getSource (). toString ()); } }","title":"After Advice"},{"location":"java/spring/aop.html#around-advice","text":"Around advice surrounds a join point such as a method invocation. This is the most powerful kind of advice. Around advice can perform custom behavior both before and after the method invocation . It's also responsible for choosing whether to proceed to the join point or to shortcut the advised method execution by providing its own return value or throwing an exception. To demonstrate its use, suppose that you want to measure method execution time. For this purpose you may create the following aspect: @Aspect @Component public class PerformanceAspect { private Logger logger = Logger . getLogger ( getClass (). getName ()); @Pointcut ( \"within(@org.springframework.stereotype.Repository *)\" ) public void repositoryClassMethods () {} @Around ( \"repositoryClassMethods()\" ) public Object measureMethodExecutionTime ( ProceedingJoinPoint pjp ) throws Throwable { long start = System . nanoTime (); Object retVal = pjp . proceed (); long end = System . nanoTime (); String methodName = pjp . getSignature (). getName (); logger . info ( \"Execution of \" + methodName + \" took \" + TimeUnit . NANOSECONDS . toMillis ( end - start ) + \" ms\" ); return retVal ; } } This advice is triggered when any of the join points matched by the repositoryClassMethods pointcut is executed. This advice takes one parameter of type ProceedingJointPoint . The parameter gives us an opportunity to take action before the target method call. In this case, we simply save the method start time. Second, the advice return type is Object since the target method can return a result of any type. If target method is void , null will be returned. After the target method call, we can measure the timing, log it, and return the method's result value to the caller.","title":"Around Advice"},{"location":"java/spring/aop.html#_2","text":"The AspectJ Programming Guide AOP with Spring Spring AOP APIs","title":"\u53c2\u8003"},{"location":"java/spring/transaction.html","text":"TODO Propagation \u00b6 @see org.springframework.transaction.annotation.Propagation REQUIRED\uff08\u9ed8\u8ba4\uff09 \uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5982\u679c\u5df2\u5b58\u5728\uff0c\u5219\u52a0\u5165\u5230\u8fd9\u4e2a\u4e8b\u52a1 NESTED \uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u5728\u4e8b\u52a1\u5185\u5d4c\u5957\u4e00\u4e2a\u5b50\u4e8b\u52a1 REQUIRED_NEW \uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u6302\u8d77\u65e7\u4e8b\u52a1\uff0c\u5728\u65b0\u4e8b\u52a1\u4e2d\u6267\u884c Notes ; NESTED\u4e2d\u5b50\u4e8b\u52a1\u56de\u6eda\u4e0d\u5f71\u54cd\u5916\u90e8\u4e8b\u52a1\uff0c\u5916\u90e8\u4e8b\u52a1\u56de\u6eda\u5b50\u4e8b\u52a1\u4e5f\u4f1a\u56de\u6eda\uff1b REQUIRED_NEW\u4e2d\u4e24\u4e2a\u4e8b\u52a1\u4e92\u4e0d\u5f71\u54cd\uff1b NESTED\u57fa\u4e8e\u6570\u636e\u5e93\u7684SAVEPOINT\u5b9e\u73b0\u5d4c\u5957\u4e8b\u52a1\uff1b \u4e8b\u52a1T1\u5185\u5d4c NESTED \u5f0f\u7684\u4e8b\u52a1T2\uff0cT2\u53c8\u8c03\u7528 REQUIRED \u5f0f\u7684\u4e8b\u52a1T3\u65f6\uff0cT3\u548cT2\u662f\u540c\u4e00\u4e2a\u4e8b\u52a1 Implementation \u00b6 Programmatic \u00b6 \u7565 @Transactional \u00b6 Spring\u4e2d\u53ef\u4ee5\u7528 @Transactional \u6ce8\u89e3\u58f0\u660e\u4e8b\u52a1\uff0c\u901a\u8fc7AOP\u7684\u65b9\u5f0f\u8c03\u7528 TransactionInterceptor.invoke \uff0c\u8fdb\u884c\u4e8b\u52a1\u7684\u5904\u7406\uff0c PlatformTransactionManager \u7ba1\u7406\u4e8b\u52a1\u7684\u63d0\u4ea4\u548c\u56de\u6eda\u3002 Notes : \u56e0\u4e3a\u5b9e\u73b0\u65b9\u5f0f\u662fAOP\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u8c03\u7528\u65f6\uff0c\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u4e0a\u7684 @Transactional \u6ce8\u89e3\u65e0\u6548 FAQ \u00b6 rollback-only Exception \u00b6 E : org.springframework.transaction.UnexpectedRollbackException: Transaction rolled back because it has been marked as rollback-only S : \u5728\u5d4c\u5957\u7684\u4e8b\u52a1\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u9ed8\u8ba4\u7684\u4e8b\u52a1\u4f20\u64ad\u65b9\u5f0f\uff0c\u5185\u5c42\u4e8b\u52a1\u548c\u5916\u5c42\u4e8b\u52a1\u5176\u5b9e\u662f\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5f53\u5185\u5c42\u4e8b\u52a1\u629b\u51fa\u5f02\u5e38\u65f6\uff0cSpring\u4f1a\u5c06\u5f53\u524d\u4e8b\u52a1\u6807\u8bb0\u4e3a\u201crollback-only\u201d\uff0c\u5982\u679c\u5916\u5c42\u4e8b\u52a1\u6355\u83b7\u5e76\u6b63\u5e38\u63d0\u4ea4\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0rollback-only\u5f02\u5e38\u3002 \u5982\u679c\u5e0c\u671b\u5185\u5c42\u4e8b\u52a1\u629b\u51fa\u5f02\u5e38\u65f6\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\uff0c\u76f4\u63a5\u5728\u5916\u5c42\u4e8b\u52a1\u629b\u51fa\u5f02\u5e38 \u5982\u679c\u5e0c\u671b\u7a0b\u5e8f\u6b63\u5e38\u6267\u884c\u7ed3\u675f\uff0c\u5e76\u4e14\u5728\u7ed3\u675f\u65f6\u5168\u90e8\u63d0\u4ea4\uff0c\u5219\u5728\u5185\u5c42\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5f02\u5e38\u6355\u83b7\u5904\u7406 \u5982\u679c\u5e0c\u671b\u5185\u5c42\u4e8b\u52a1\u56de\u6eda\uff0c\u4e0d\u5f71\u54cd\u5916\u5c42\u4e8b\u52a1\uff0c\u5e94\u8bbe\u7f6e\u5185\u5c42\u4e8b\u52a1\u4f20\u64ad\u65b9\u5f0f\u4e3a*NESTED* References \u00b6 Transaction Management RCA: Spring \u4e8b\u52a1 rollback-only\u5f02\u5e38 - \u77e5\u4e4e \u8bb0\u4e00\u6b21\u4e8b\u52a1\u7684\u5751 Transaction rolled back because it has been marked as rollback-only - \u4e91\u626c\u56db\u6d77","title":"Transaction"},{"location":"java/spring/transaction.html#propagation","text":"@see org.springframework.transaction.annotation.Propagation REQUIRED\uff08\u9ed8\u8ba4\uff09 \uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5982\u679c\u5df2\u5b58\u5728\uff0c\u5219\u52a0\u5165\u5230\u8fd9\u4e2a\u4e8b\u52a1 NESTED \uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u5728\u4e8b\u52a1\u5185\u5d4c\u5957\u4e00\u4e2a\u5b50\u4e8b\u52a1 REQUIRED_NEW \uff1a\u5982\u679c\u5f53\u524d\u6ca1\u6709\u4e8b\u52a1\uff0c\u5c31\u65b0\u5efa\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5982\u679c\u5b58\u5728\u4e8b\u52a1\uff0c\u5219\u6302\u8d77\u65e7\u4e8b\u52a1\uff0c\u5728\u65b0\u4e8b\u52a1\u4e2d\u6267\u884c Notes ; NESTED\u4e2d\u5b50\u4e8b\u52a1\u56de\u6eda\u4e0d\u5f71\u54cd\u5916\u90e8\u4e8b\u52a1\uff0c\u5916\u90e8\u4e8b\u52a1\u56de\u6eda\u5b50\u4e8b\u52a1\u4e5f\u4f1a\u56de\u6eda\uff1b REQUIRED_NEW\u4e2d\u4e24\u4e2a\u4e8b\u52a1\u4e92\u4e0d\u5f71\u54cd\uff1b NESTED\u57fa\u4e8e\u6570\u636e\u5e93\u7684SAVEPOINT\u5b9e\u73b0\u5d4c\u5957\u4e8b\u52a1\uff1b \u4e8b\u52a1T1\u5185\u5d4c NESTED \u5f0f\u7684\u4e8b\u52a1T2\uff0cT2\u53c8\u8c03\u7528 REQUIRED \u5f0f\u7684\u4e8b\u52a1T3\u65f6\uff0cT3\u548cT2\u662f\u540c\u4e00\u4e2a\u4e8b\u52a1","title":"Propagation"},{"location":"java/spring/transaction.html#implementation","text":"","title":"Implementation"},{"location":"java/spring/transaction.html#programmatic","text":"\u7565","title":"Programmatic"},{"location":"java/spring/transaction.html#transactional","text":"Spring\u4e2d\u53ef\u4ee5\u7528 @Transactional \u6ce8\u89e3\u58f0\u660e\u4e8b\u52a1\uff0c\u901a\u8fc7AOP\u7684\u65b9\u5f0f\u8c03\u7528 TransactionInterceptor.invoke \uff0c\u8fdb\u884c\u4e8b\u52a1\u7684\u5904\u7406\uff0c PlatformTransactionManager \u7ba1\u7406\u4e8b\u52a1\u7684\u63d0\u4ea4\u548c\u56de\u6eda\u3002 Notes : \u56e0\u4e3a\u5b9e\u73b0\u65b9\u5f0f\u662fAOP\uff0c\u6240\u4ee5\u540c\u4e00\u4e2a\u7c7b\u4e2d\u7684\u65b9\u6cd5\u8c03\u7528\u65f6\uff0c\u88ab\u8c03\u7528\u7684\u65b9\u6cd5\u4e0a\u7684 @Transactional \u6ce8\u89e3\u65e0\u6548","title":"@Transactional"},{"location":"java/spring/transaction.html#faq","text":"","title":"FAQ"},{"location":"java/spring/transaction.html#rollback-only-exception","text":"E : org.springframework.transaction.UnexpectedRollbackException: Transaction rolled back because it has been marked as rollback-only S : \u5728\u5d4c\u5957\u7684\u4e8b\u52a1\u4e2d\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u9ed8\u8ba4\u7684\u4e8b\u52a1\u4f20\u64ad\u65b9\u5f0f\uff0c\u5185\u5c42\u4e8b\u52a1\u548c\u5916\u5c42\u4e8b\u52a1\u5176\u5b9e\u662f\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5f53\u5185\u5c42\u4e8b\u52a1\u629b\u51fa\u5f02\u5e38\u65f6\uff0cSpring\u4f1a\u5c06\u5f53\u524d\u4e8b\u52a1\u6807\u8bb0\u4e3a\u201crollback-only\u201d\uff0c\u5982\u679c\u5916\u5c42\u4e8b\u52a1\u6355\u83b7\u5e76\u6b63\u5e38\u63d0\u4ea4\u65f6\uff0c\u5c31\u4f1a\u51fa\u73b0rollback-only\u5f02\u5e38\u3002 \u5982\u679c\u5e0c\u671b\u5185\u5c42\u4e8b\u52a1\u629b\u51fa\u5f02\u5e38\u65f6\u4e2d\u65ad\u7a0b\u5e8f\u6267\u884c\uff0c\u76f4\u63a5\u5728\u5916\u5c42\u4e8b\u52a1\u629b\u51fa\u5f02\u5e38 \u5982\u679c\u5e0c\u671b\u7a0b\u5e8f\u6b63\u5e38\u6267\u884c\u7ed3\u675f\uff0c\u5e76\u4e14\u5728\u7ed3\u675f\u65f6\u5168\u90e8\u63d0\u4ea4\uff0c\u5219\u5728\u5185\u5c42\u4e8b\u52a1\u4e2d\u8fdb\u884c\u5f02\u5e38\u6355\u83b7\u5904\u7406 \u5982\u679c\u5e0c\u671b\u5185\u5c42\u4e8b\u52a1\u56de\u6eda\uff0c\u4e0d\u5f71\u54cd\u5916\u5c42\u4e8b\u52a1\uff0c\u5e94\u8bbe\u7f6e\u5185\u5c42\u4e8b\u52a1\u4f20\u64ad\u65b9\u5f0f\u4e3a*NESTED*","title":"rollback-only Exception"},{"location":"java/spring/transaction.html#references","text":"Transaction Management RCA: Spring \u4e8b\u52a1 rollback-only\u5f02\u5e38 - \u77e5\u4e4e \u8bb0\u4e00\u6b21\u4e8b\u52a1\u7684\u5751 Transaction rolled back because it has been marked as rollback-only - \u4e91\u626c\u56db\u6d77","title":"References"},{"location":"misc/activation.html","text":"TODO Navicat \u00b6 \u6ce8\u610f \uff1a\u4e0d\u9002\u7528\u4e8e Navicat 15 \u6216\u66f4\u9ad8\u7684\u7248\u672c. \u51c6\u5907 \u00b6 \u4e0b\u8f7d\u5e76\u5b89\u88c5 Navicat 12.1.26 . Steps \u00b6 Replace the public key in the navicat.exe and libcc.dll with patcher.exe . For example, navicat-patcher.exe \"D:\\Devs\\Navicat Premium 12\" . $ navicat-patcher.exe <Navicat installation path> [ RSA-2048 PEM file ] # <Navicat installation path> is the full installation path of Navicat. # [RSA-2048 PEM file] assigns the path of RSA-2048 PEM file, absolute or relative. # It's optional. Current directory will be chosen by default. Generate serial number with keygen.exe . For example, navicat-keygen.exe -text RegPrivateKey.pem . $ navicat-keygen.exe <-bin | -text> [ -adv ] <RSA-2048 PrivateKey ( PEM file ) > # <-bin|-text> must be one of the values: '-bin' or '-text'. # '-bin' for the old way\uff0cit will generate a license file. # '-text' for the new way, it will generate a Base64 code. # [-adv] enables advanced mode. ID number of the product will be required manually. # <RSA-2048 PrivateKey(PEM file)> is the file generated in step 1. Choose the product type, user language and the version as needed. Then it will print a serial number , like XXXX-XXXX-XXXX-XXXX . Input custom user name and organization name casually. Then comes request code: turn off the Internet connection, fill in the serial number above and choose Activation button. Generally, it will fail, then choose manual activation instead. Copy the request code from manual activation window to keygen.exe and press Enter twice. If everything goes well, it will generate a string of activation code like Base64 code. Copy to the activation window to finish activation.","title":"Activation"},{"location":"misc/activation.html#navicat","text":"\u6ce8\u610f \uff1a\u4e0d\u9002\u7528\u4e8e Navicat 15 \u6216\u66f4\u9ad8\u7684\u7248\u672c.","title":"Navicat"},{"location":"misc/activation.html#_1","text":"\u4e0b\u8f7d\u5e76\u5b89\u88c5 Navicat 12.1.26 .","title":"\u51c6\u5907"},{"location":"misc/activation.html#steps","text":"Replace the public key in the navicat.exe and libcc.dll with patcher.exe . For example, navicat-patcher.exe \"D:\\Devs\\Navicat Premium 12\" . $ navicat-patcher.exe <Navicat installation path> [ RSA-2048 PEM file ] # <Navicat installation path> is the full installation path of Navicat. # [RSA-2048 PEM file] assigns the path of RSA-2048 PEM file, absolute or relative. # It's optional. Current directory will be chosen by default. Generate serial number with keygen.exe . For example, navicat-keygen.exe -text RegPrivateKey.pem . $ navicat-keygen.exe <-bin | -text> [ -adv ] <RSA-2048 PrivateKey ( PEM file ) > # <-bin|-text> must be one of the values: '-bin' or '-text'. # '-bin' for the old way\uff0cit will generate a license file. # '-text' for the new way, it will generate a Base64 code. # [-adv] enables advanced mode. ID number of the product will be required manually. # <RSA-2048 PrivateKey(PEM file)> is the file generated in step 1. Choose the product type, user language and the version as needed. Then it will print a serial number , like XXXX-XXXX-XXXX-XXXX . Input custom user name and organization name casually. Then comes request code: turn off the Internet connection, fill in the serial number above and choose Activation button. Generally, it will fail, then choose manual activation instead. Copy the request code from manual activation window to keygen.exe and press Enter twice. If everything goes well, it will generate a string of activation code like Base64 code. Copy to the activation window to finish activation.","title":"Steps"},{"location":"misc/charles.html","text":"TODO References \u00b6 Windows\u6293\u5305\u5de5\u5177 -- Charles - chai_mm\u7684\u535a\u5ba2 - CSDN\u535a\u5ba2","title":"Charles"},{"location":"misc/charles.html#references","text":"Windows\u6293\u5305\u5de5\u5177 -- Charles - chai_mm\u7684\u535a\u5ba2 - CSDN\u535a\u5ba2","title":"References"},{"location":"misc/chrome.html","text":"TODO Overview \u00b6 Refer to Google Chrome Help . Get old versions here . Keyboard Shortcuts \u00b6 Here is the full list. Following shortcuts are based on Windows and Linux. Tab and Window \u00b6 Ctrl + N open a new window Ctrl + T open a new tab Ctrl + Shift + T reopen previously closed tabs in the order they were closed Search Syntax \u00b6 Exclude words with - before: Chinese -food Exact match with a word inside quotes: \"tallest building\" Combine searches with upper OR : you OR me Specify a site with site: in front of a site or domain, no space: site:baidu.com Relate to a site with related: in front of a known web address, no space: related:baidu.com Refer to Refine web searches for a full list. References \u00b6 \u3010\u5e72\u8d27\u3011Chrome\u63d2\u4ef6(\u6269\u5c55)\u5f00\u53d1\u5168\u653b\u7565 - \u6211\u662f\u5c0f\u8317\u540c\u5b66 - \u535a\u5ba2\u56ed","title":"Chrome"},{"location":"misc/chrome.html#overview","text":"Refer to Google Chrome Help . Get old versions here .","title":"Overview"},{"location":"misc/chrome.html#keyboard-shortcuts","text":"Here is the full list. Following shortcuts are based on Windows and Linux.","title":"Keyboard Shortcuts"},{"location":"misc/chrome.html#tab-and-window","text":"Ctrl + N open a new window Ctrl + T open a new tab Ctrl + Shift + T reopen previously closed tabs in the order they were closed","title":"Tab and Window"},{"location":"misc/chrome.html#search-syntax","text":"Exclude words with - before: Chinese -food Exact match with a word inside quotes: \"tallest building\" Combine searches with upper OR : you OR me Specify a site with site: in front of a site or domain, no space: site:baidu.com Relate to a site with related: in front of a known web address, no space: related:baidu.com Refer to Refine web searches for a full list.","title":"Search Syntax"},{"location":"misc/chrome.html#references","text":"\u3010\u5e72\u8d27\u3011Chrome\u63d2\u4ef6(\u6269\u5c55)\u5f00\u53d1\u5168\u653b\u7565 - \u6211\u662f\u5c0f\u8317\u540c\u5b66 - \u535a\u5ba2\u56ed","title":"References"},{"location":"misc/ffmpeg.html","text":"\u57fa\u672c \u00b6 ffmpeg [ global_options ] {[ input_file_options ] -i input_url } ... {[ output_file_options ] output_url } ... ffmpeg -i input.avi -c copy output.mp4 -i \u9009\u9879\u524d\u540e\u5206\u522b\u662f input \u548c ouput \u9009\u9879. \u6d41\u7c7b\u578b stream_specifier \u00b6 v \uff1a\u89c6\u9891\u6d41 a \uff1a\u97f3\u9891\u6d41 s \uff1a\u5b57\u5e55\u6d41 d \uff1a\u6570\u636e\u6d41 \u6d41\u9009\u62e9 \u00b6 \u9ed8\u8ba4\u4e3a**\u81ea\u52a8\u9009\u62e9**\uff0c\u5bf9\u6bcf\u4e00\u79cd\u9700\u8981\u7684\u6d41\u7c7b\u578b\uff0c**\u53ea\u4f1a\u9009\u62e9\u4e00\u4e2a**\u8f93\u51fa\uff0c \u89c6\u9891\u6d41\uff1a\u6700\u9ad8\u5206\u8fa8\u7387\u7684\u6d41\uff1b \u97f3\u9891\u6d41\uff1a\u6700\u591a\u58f0\u9053\u7684\u6d41\uff1b \u5b57\u5e55\u6d41\uff1a\u5339\u914d\u8f93\u51fa\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u5b57\u5e55\u6d41\u3002 \u53ef\u9009\u53c2\u6570**\u5ffd\u7565**\u5bf9\u5e94\u7684\u6d41\uff0c -<stream_specifier>n \uff0c -vn \u5ffd\u7565\u89c6\u9891\u6d41\uff1b -an \u5ffd\u7565\u97f3\u9891\u6d41\uff1b -sn \u5ffd\u7565\u5b57\u5e55\u6d41\uff1b -dn \u5ffd\u7565\u6570\u636e\u6d41\u3002 \u81ea\u5b9a\u4e49\u9009\u62e9\u6d41\uff0c -map [ - ] <input_file_id> [ :<stream_specifier> ][ :<stream_index> ][ ? ] \u5176\u4e2d\uff0c - \u8868\u793a\u53cd\u5411\u9009\u62e9\uff0c\u5373\u9009\u62e9\u9664\u5bf9\u5e94\u7684\u6d41\u5916\u5176\u5b83\u6d41\uff0c\u53ef\u9009\uff1b input_file_id \u8868\u793a\u6240\u6709\u8f93\u5165\uff08 -i \uff09\u7684\u5e8f\u53f7\uff08\u4ece 0 \u5f00\u59cb\uff09\uff0c\u5fc5\u9009\uff1b stream_specifier \u8868\u793a\u6d41\u7c7b\u578b\uff1b stream_index \u6307\u5b9a\u4e00\u4e2a\u6d41\uff0c\u53ef\u9009\uff1b ? \u5ffd\u7565\u6d41\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff1b \u4f8b\u5982\uff0c ffmpeg -i INPUT -map 0 :2 OUTPUT # \u9009\u62e9INPUT\u7684\u7b2c\u4e09\u4e2a\u6d41 ffmpeg -i a.mkv -i b.mkv -map 0 :v -map -1:a:1 OUTPUT # \u9009\u62e9a.mkv\u7684\u6240\u6709\u89c6\u9891\u6d41\u548cb.mkv\u4e2d\u9664\u4e86\u7b2c\u4e8c\u4e2a\u97f3\u9891\u6d41\u5916\u7684\u6240\u6709\u6d41 \u7f16\u7801 \u00b6 -c[:<stream_specifier>] <codec_fmt> -codec[:<stream_specifier>] <codec_fmt> -[stream_specifier]codec <codec_fmt> \u5176\u4e2d\uff0c stream_specifier \u8868\u793a\u6d41\u7c7b\u578b\uff1b codec_fmt \u8868\u793a\u7f16\u7801\u683c\u5f0f\uff0c\u5982\u9700\u590d\u5236\u6d41\u4f7f\u7528 copy \uff1b \u4f8b\u5982\uff0c ffmpeg -i INPUT -c:v copy OUTPUT # \u63d0\u53d6\u89c6\u9891\u6d41 \u7247\u6bb5 \u00b6 -ss <position> # \u5f00\u59cb\u65f6\u95f4 -to <position> # \u622a\u6b62\u65f6\u95f4 -t <duration> # \u65f6\u957f \u5176\u4e2d\uff0c position \u683c\u5f0f\u4e3a [-][HH:]MM:SS[.m...] \uff1b duration \u683c\u5f0f\u4e3a [-]S+[.m...][s|ms|us] \uff0c us \u8868\u793a\u5fae\u79d2\u3002 \u4f8b\u5982\uff0c ffmpeg -ss 02 :30 -to 10 :20 -i INPUT.mp4 -c copy OUTPUT.mp4 \u53c2\u8003 \u00b6 ffmpeg Documentation","title":"FFmpeg"},{"location":"misc/ffmpeg.html#_1","text":"ffmpeg [ global_options ] {[ input_file_options ] -i input_url } ... {[ output_file_options ] output_url } ... ffmpeg -i input.avi -c copy output.mp4 -i \u9009\u9879\u524d\u540e\u5206\u522b\u662f input \u548c ouput \u9009\u9879.","title":"\u57fa\u672c"},{"location":"misc/ffmpeg.html#stream_specifier","text":"v \uff1a\u89c6\u9891\u6d41 a \uff1a\u97f3\u9891\u6d41 s \uff1a\u5b57\u5e55\u6d41 d \uff1a\u6570\u636e\u6d41","title":"\u6d41\u7c7b\u578b stream_specifier"},{"location":"misc/ffmpeg.html#_2","text":"\u9ed8\u8ba4\u4e3a**\u81ea\u52a8\u9009\u62e9**\uff0c\u5bf9\u6bcf\u4e00\u79cd\u9700\u8981\u7684\u6d41\u7c7b\u578b\uff0c**\u53ea\u4f1a\u9009\u62e9\u4e00\u4e2a**\u8f93\u51fa\uff0c \u89c6\u9891\u6d41\uff1a\u6700\u9ad8\u5206\u8fa8\u7387\u7684\u6d41\uff1b \u97f3\u9891\u6d41\uff1a\u6700\u591a\u58f0\u9053\u7684\u6d41\uff1b \u5b57\u5e55\u6d41\uff1a\u5339\u914d\u8f93\u51fa\u7c7b\u578b\u7684\u7b2c\u4e00\u4e2a\u5b57\u5e55\u6d41\u3002 \u53ef\u9009\u53c2\u6570**\u5ffd\u7565**\u5bf9\u5e94\u7684\u6d41\uff0c -<stream_specifier>n \uff0c -vn \u5ffd\u7565\u89c6\u9891\u6d41\uff1b -an \u5ffd\u7565\u97f3\u9891\u6d41\uff1b -sn \u5ffd\u7565\u5b57\u5e55\u6d41\uff1b -dn \u5ffd\u7565\u6570\u636e\u6d41\u3002 \u81ea\u5b9a\u4e49\u9009\u62e9\u6d41\uff0c -map [ - ] <input_file_id> [ :<stream_specifier> ][ :<stream_index> ][ ? ] \u5176\u4e2d\uff0c - \u8868\u793a\u53cd\u5411\u9009\u62e9\uff0c\u5373\u9009\u62e9\u9664\u5bf9\u5e94\u7684\u6d41\u5916\u5176\u5b83\u6d41\uff0c\u53ef\u9009\uff1b input_file_id \u8868\u793a\u6240\u6709\u8f93\u5165\uff08 -i \uff09\u7684\u5e8f\u53f7\uff08\u4ece 0 \u5f00\u59cb\uff09\uff0c\u5fc5\u9009\uff1b stream_specifier \u8868\u793a\u6d41\u7c7b\u578b\uff1b stream_index \u6307\u5b9a\u4e00\u4e2a\u6d41\uff0c\u53ef\u9009\uff1b ? \u5ffd\u7565\u6d41\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff1b \u4f8b\u5982\uff0c ffmpeg -i INPUT -map 0 :2 OUTPUT # \u9009\u62e9INPUT\u7684\u7b2c\u4e09\u4e2a\u6d41 ffmpeg -i a.mkv -i b.mkv -map 0 :v -map -1:a:1 OUTPUT # \u9009\u62e9a.mkv\u7684\u6240\u6709\u89c6\u9891\u6d41\u548cb.mkv\u4e2d\u9664\u4e86\u7b2c\u4e8c\u4e2a\u97f3\u9891\u6d41\u5916\u7684\u6240\u6709\u6d41","title":"\u6d41\u9009\u62e9"},{"location":"misc/ffmpeg.html#_3","text":"-c[:<stream_specifier>] <codec_fmt> -codec[:<stream_specifier>] <codec_fmt> -[stream_specifier]codec <codec_fmt> \u5176\u4e2d\uff0c stream_specifier \u8868\u793a\u6d41\u7c7b\u578b\uff1b codec_fmt \u8868\u793a\u7f16\u7801\u683c\u5f0f\uff0c\u5982\u9700\u590d\u5236\u6d41\u4f7f\u7528 copy \uff1b \u4f8b\u5982\uff0c ffmpeg -i INPUT -c:v copy OUTPUT # \u63d0\u53d6\u89c6\u9891\u6d41","title":"\u7f16\u7801"},{"location":"misc/ffmpeg.html#_4","text":"-ss <position> # \u5f00\u59cb\u65f6\u95f4 -to <position> # \u622a\u6b62\u65f6\u95f4 -t <duration> # \u65f6\u957f \u5176\u4e2d\uff0c position \u683c\u5f0f\u4e3a [-][HH:]MM:SS[.m...] \uff1b duration \u683c\u5f0f\u4e3a [-]S+[.m...][s|ms|us] \uff0c us \u8868\u793a\u5fae\u79d2\u3002 \u4f8b\u5982\uff0c ffmpeg -ss 02 :30 -to 10 :20 -i INPUT.mp4 -c copy OUTPUT.mp4","title":"\u7247\u6bb5"},{"location":"misc/ffmpeg.html#_5","text":"ffmpeg Documentation","title":"\u53c2\u8003"},{"location":"misc/fiddler.html","text":"TODO Overview \u00b6 Fiddler works as a proxy server. Fiddler will logout when exiting. However, network anomaly will happen if Fiddler exits abnormally . In that case, just restart Fiddler and close again. This is based on Fiddler 4 . Configuration \u00b6 PC \u00b6 Open Fiddler\uff0cchoose the path: Tools -> Options -> HTTPS Check \"Decrypt HTTPS traffic\", and then requests of 'HTTPS' will be intercept. (Optional) Check \"Ignore server certificate errors (unsafe)\" if it's warned that the certificate of the website is untrusted. Choose path: Actions -> Trust Root Certificate , and then install the certificate. Mobile \u00b6 Choose path:* Tools -> Options -> Connections*, modify the default port if needed. Check \"Allow remote computers to connect\" to allow remote connections. (Optional) Check \"Act as system proxy on startup\". Keep the mobile under the same LAN with PC. Use the mobile to access the address: PC-IP: port, then download and install the certificate of Fiddle. Configure the proxy server of WiFi of the mobile. References \u00b6 fiddler\u914d\u7f6e\u53ca\u4f7f\u7528\u6559\u7a0b - \u535a\u5ba2\u56ed","title":"Fiddler"},{"location":"misc/fiddler.html#overview","text":"Fiddler works as a proxy server. Fiddler will logout when exiting. However, network anomaly will happen if Fiddler exits abnormally . In that case, just restart Fiddler and close again. This is based on Fiddler 4 .","title":"Overview"},{"location":"misc/fiddler.html#configuration","text":"","title":"Configuration"},{"location":"misc/fiddler.html#pc","text":"Open Fiddler\uff0cchoose the path: Tools -> Options -> HTTPS Check \"Decrypt HTTPS traffic\", and then requests of 'HTTPS' will be intercept. (Optional) Check \"Ignore server certificate errors (unsafe)\" if it's warned that the certificate of the website is untrusted. Choose path: Actions -> Trust Root Certificate , and then install the certificate.","title":"PC"},{"location":"misc/fiddler.html#mobile","text":"Choose path:* Tools -> Options -> Connections*, modify the default port if needed. Check \"Allow remote computers to connect\" to allow remote connections. (Optional) Check \"Act as system proxy on startup\". Keep the mobile under the same LAN with PC. Use the mobile to access the address: PC-IP: port, then download and install the certificate of Fiddle. Configure the proxy server of WiFi of the mobile.","title":"Mobile"},{"location":"misc/fiddler.html#references","text":"fiddler\u914d\u7f6e\u53ca\u4f7f\u7528\u6559\u7a0b - \u535a\u5ba2\u56ed","title":"References"},{"location":"misc/idea.html","text":"TODO Get Started \u00b6 Access to information about IntelliJ IDEA from online help or install IntelliJ IDEA Help plugin for offline use. Course IntelliJ IDEA\u795e\u5668\u4f7f\u7528\u6280\u5de7 on is also recommended. Skills \u00b6 Code Completion \u00b6 The function is used to complete code, including loop statement, if statement and so on. Use templates just starting with a dot . . Available templates includes .var , .null , .not null , .nn , .for , .fori , .not , .if , .cast , .return . An example is shown as the following GIF.","title":"IntelliJ IDEA"},{"location":"misc/idea.html#get-started","text":"Access to information about IntelliJ IDEA from online help or install IntelliJ IDEA Help plugin for offline use. Course IntelliJ IDEA\u795e\u5668\u4f7f\u7528\u6280\u5de7 on is also recommended.","title":"Get Started"},{"location":"misc/idea.html#skills","text":"","title":"Skills"},{"location":"misc/idea.html#code-completion","text":"The function is used to complete code, including loop statement, if statement and so on. Use templates just starting with a dot . . Available templates includes .var , .null , .not null , .nn , .for , .fori , .not , .if , .cast , .return . An example is shown as the following GIF.","title":"Code Completion"},{"location":"misc/latex.html","text":"\u53c2\u8003 \u00b6 LaTeX - WikiBooks The TeX/LaTeX Extension List - MathJax Supported Functions \u00b7 KaTeX \u5185\u8054\u516c\u5f0f \u00b6 $f(x)=x$ \u6e32\u67d3\u4e3a \\(f(x)=x\\) \uff0c\u6216\u8005 \\(f(x)=x\\) \u6e32\u67d3\u4e3a \\(f(x)=x\\) \u5757\u7ea7\u516c\u5f0f \u00b6 $$f(x)=x$$ \uff08\u524d\u540e\u5404\u7a7a\u4e00\u884c\uff09 \\[f(x)=x\\] \\[f(x)=x\\] \uff08\u524d\u540e\u5404\u7a7a\u4e00\u884c\uff09 \\[f(x)=x\\] \u5e26\u81ea\u52a8\u5e8f\u53f7\uff0c \\[ \\begin{equation} f(x)=x \\end{equation} \\] \u591a\u884c\u5355\u72ec\u7684\u5e8f\u53f7\uff0c\u9ed8\u8ba4\u53f3\u5bf9\u9f50\uff0c \\[ \\begin{align} a&=b+c \\\\ d+e&=f \\end{align} \\] \u591a\u884c\u5bf9\u9f50\u65f6\uff0c\u5bf9\u9f50\u53c2\u6570\u4e2a\u6570\u4e3a & \u4e2a\u6570\u52a0\u4e00\uff0c \\[ \\begin{array}{rl} a+b+c&=1 \\\\ b+c&=2 \\end{array} \\]","title":"LaTeX"},{"location":"misc/latex.html#_1","text":"LaTeX - WikiBooks The TeX/LaTeX Extension List - MathJax Supported Functions \u00b7 KaTeX","title":"\u53c2\u8003"},{"location":"misc/latex.html#_2","text":"$f(x)=x$ \u6e32\u67d3\u4e3a \\(f(x)=x\\) \uff0c\u6216\u8005 \\(f(x)=x\\) \u6e32\u67d3\u4e3a \\(f(x)=x\\)","title":"\u5185\u8054\u516c\u5f0f"},{"location":"misc/latex.html#_3","text":"$$f(x)=x$$ \uff08\u524d\u540e\u5404\u7a7a\u4e00\u884c\uff09 \\[f(x)=x\\] \\[f(x)=x\\] \uff08\u524d\u540e\u5404\u7a7a\u4e00\u884c\uff09 \\[f(x)=x\\] \u5e26\u81ea\u52a8\u5e8f\u53f7\uff0c \\[ \\begin{equation} f(x)=x \\end{equation} \\] \u591a\u884c\u5355\u72ec\u7684\u5e8f\u53f7\uff0c\u9ed8\u8ba4\u53f3\u5bf9\u9f50\uff0c \\[ \\begin{align} a&=b+c \\\\ d+e&=f \\end{align} \\] \u591a\u884c\u5bf9\u9f50\u65f6\uff0c\u5bf9\u9f50\u53c2\u6570\u4e2a\u6570\u4e3a & \u4e2a\u6570\u52a0\u4e00\uff0c \\[ \\begin{array}{rl} a+b+c&=1 \\\\ b+c&=2 \\end{array} \\]","title":"\u5757\u7ea7\u516c\u5f0f"},{"location":"misc/markdown.html","text":"TODO Overview \u00b6 Markdown in Evernote supports CommonMark and GFM (GitHub Flavored Markdown) and that for mkdocs is Python-Markdown which inherited from John Gruber\u2019s Markdown . Markdown \u00b6 Images \u00b6 Evernote only supports \".png\", \".jpg\" and \".gif\". ![ alt ]( ../../static/img/favicon.ico \"optional title\" ) <!-- alt: show if the image can't display and be used for Search Engine. optional title: show when mouse is over the image. --> <!-- if a title is required, following is an optional way. --> <center> ![ alt ]( url ) title </center> \u767e\u5ea6 Code Block \u00b6 Supported languages are as follows: NAME KEY mkdocs Typora Java java Markdown markdown Shell bash, shell N References \u00b6 \u5370\u8c61\u7b14\u8bb0 Markdown \u5165\u95e8\u6307\u5357","title":"Markdown"},{"location":"misc/markdown.html#overview","text":"Markdown in Evernote supports CommonMark and GFM (GitHub Flavored Markdown) and that for mkdocs is Python-Markdown which inherited from John Gruber\u2019s Markdown .","title":"Overview"},{"location":"misc/markdown.html#markdown","text":"","title":"Markdown"},{"location":"misc/markdown.html#images","text":"Evernote only supports \".png\", \".jpg\" and \".gif\". ![ alt ]( ../../static/img/favicon.ico \"optional title\" ) <!-- alt: show if the image can't display and be used for Search Engine. optional title: show when mouse is over the image. --> <!-- if a title is required, following is an optional way. --> <center> ![ alt ]( url ) title </center> \u767e\u5ea6","title":"Images"},{"location":"misc/markdown.html#code-block","text":"Supported languages are as follows: NAME KEY mkdocs Typora Java java Markdown markdown Shell bash, shell N","title":"Code Block"},{"location":"misc/markdown.html#references","text":"\u5370\u8c61\u7b14\u8bb0 Markdown \u5165\u95e8\u6307\u5357","title":"References"},{"location":"misc/vscode.html","text":"TODO Overview \u00b6 Visual Studio Code is a lightweight but powerful source code editor. Here are the documentations(https://code.visualstudio.com/docs). Extensions \u00b6 Python vscode-icons: show icons for various types of files. Beautify: format the code. Code Spell Checker TODO Highlight Markdown All in One, markdownlint, Markdown Preview Enhanced Language support for Java for Visual Studio Code","title":"Visual Studio Code"},{"location":"misc/vscode.html#overview","text":"Visual Studio Code is a lightweight but powerful source code editor. Here are the documentations(https://code.visualstudio.com/docs).","title":"Overview"},{"location":"misc/vscode.html#extensions","text":"Python vscode-icons: show icons for various types of files. Beautify: format the code. Code Spell Checker TODO Highlight Markdown All in One, markdownlint, Markdown Preview Enhanced Language support for Java for Visual Studio Code","title":"Extensions"},{"location":"misc/windows.html","text":"Windows \u547d\u4ee4 \u00b6 \u8bed\u6cd5\u89c4\u8303 \u00b6 <required> \uff1a\u5fc5\u9009\u7684\u53c2\u6570 [option] \uff1a\u53ef\u9009\u7684\u53c2\u6570 {option1|option2} \uff1a\u5fc5\u9009\u7684\u679a\u4e3e\u7c7b\u578b\u53c2\u6570\uff0c | \u4e3a\u5206\u9694\u7b26 ... \uff1a\u53ef\u91cd\u590d\u4f7f\u7528\u591a\u6b21\u7684\u9879 /? \uff1a\u83b7\u53d6\u5e2e\u52a9 | \uff1a\u5206\u9694\u547d\u4ee4\u65f6\u8868\u793a\u524d\u8005\u7684\u8f93\u51fa\u662f\u540e\u8005\u7684\u8f93\u5165 \u547d\u4ee4 \u00b6 \u91cd\u547d\u540d\uff1a ren [<Drive>:][<Path>]<FileName1> <FileName2> \uff0c\u7b49\u4ef7\u4e8e rename \u7f51\u7edc\u72b6\u6001\uff1a netstat \u5b57\u7b26\u4e32\u67e5\u627e\uff1a findstr \u8fdb\u7a0b\u5217\u8868\uff1a tasklist \u7ed3\u675f\u8fdb\u7a0b\uff1a taskkill \u5176\u4ed6\u547d\u4ee4 \u00b6 net \uff1a\u7ba1\u7406\u7f51\u7edc\uff0c\u7528\u6237\uff0c\u5e10\u6237\u7b49 Windows \u7a0b\u5e8f \u00b6 \u7528\u6237\u8d26\u6237\uff1a netplwiz \u542f\u52a8\u83dc\u5355\uff1a shell:startup \uff0c\u6dfb\u52a0exe\u5feb\u6377\u65b9\u5f0f\uff0cexe\u6dfb\u52a0\u5230\u81ea\u542f\u52a8 \u8ba1\u7b97\u5668\uff1a calc \u7cfb\u7edf\u914d\u7f6e\uff1a msconfig \u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\uff1a explorer \u6ce8\u518c\u8868\uff1a regedt32 \u4efb\u52a1\u7ba1\u7406\u5668\uff1a taskmgr \u8d44\u6e90\u76d1\u89c6\u5668\uff1a resmon \u6027\u80fd\u76d1\u89c6\u5668\uff1a perfmon Internet\u9009\u9879\uff1a inetcpl.cpl \u63a7\u5236\u9762\u677f\uff1a control \u7a0b\u5e8f\u4e0e\u529f\u80fd\uff1a appwiz.cpl \u4e8b\u4ef6\u67e5\u770b\u5668\uff1a eventvwr \u7cfb\u7edf\u4fe1\u606f\uff1a msinfo32 \u8ba1\u7b97\u673a\u7ba1\u7406\uff1a compmgmt.msc Windows\u7248\u672c\uff1a winver \u4efb\u52a1\u8ba1\u5212\u7a0b\u5e8f \u00b6 \u6253\u5f00 taskschd.msc \uff0c\u521b\u5efa\u57fa\u672c\u4efb\u52a1\u3002 FAQ \u00b6 \u5f7b\u5e95\u683c\u5f0f\u5316\uff08\u4e0d\u53ef\u6062\u590d\uff09 \u00b6 \u6267\u884c\u683c\u5f0f\u5316\uff0c\u53d6\u6d88\u52fe\u9009*\u5feb\u901f\u683c\u5f0f\u5316*\uff1b \u5c06\u7b80\u5355\u6587\u4ef6\u5199\u6ee1\u78c1\u76d8\uff0c\u5373\u5199\u5165\u6570\u636e\u8986\u76d6\uff1b \u91cd\u590d\u4e0a\u8ff0\u4e24\u4e2a\u6b65\u9aa4\u4e09\u6b21\u4ee5\u4e0a\uff08\u683c\u5f0f\u5316\u65f6\u9009\u62e9\u4e0d\u540c\u7684**\u5206\u914d\u5355\u5143\u5927\u5c0f**\uff09\u3002 \u53c2\u8003 \u00b6 Windows \u547d\u4ee4","title":"Windows"},{"location":"misc/windows.html#windows","text":"","title":"Windows \u547d\u4ee4"},{"location":"misc/windows.html#_1","text":"<required> \uff1a\u5fc5\u9009\u7684\u53c2\u6570 [option] \uff1a\u53ef\u9009\u7684\u53c2\u6570 {option1|option2} \uff1a\u5fc5\u9009\u7684\u679a\u4e3e\u7c7b\u578b\u53c2\u6570\uff0c | \u4e3a\u5206\u9694\u7b26 ... \uff1a\u53ef\u91cd\u590d\u4f7f\u7528\u591a\u6b21\u7684\u9879 /? \uff1a\u83b7\u53d6\u5e2e\u52a9 | \uff1a\u5206\u9694\u547d\u4ee4\u65f6\u8868\u793a\u524d\u8005\u7684\u8f93\u51fa\u662f\u540e\u8005\u7684\u8f93\u5165","title":"\u8bed\u6cd5\u89c4\u8303"},{"location":"misc/windows.html#_2","text":"\u91cd\u547d\u540d\uff1a ren [<Drive>:][<Path>]<FileName1> <FileName2> \uff0c\u7b49\u4ef7\u4e8e rename \u7f51\u7edc\u72b6\u6001\uff1a netstat \u5b57\u7b26\u4e32\u67e5\u627e\uff1a findstr \u8fdb\u7a0b\u5217\u8868\uff1a tasklist \u7ed3\u675f\u8fdb\u7a0b\uff1a taskkill","title":"\u547d\u4ee4"},{"location":"misc/windows.html#_3","text":"net \uff1a\u7ba1\u7406\u7f51\u7edc\uff0c\u7528\u6237\uff0c\u5e10\u6237\u7b49","title":"\u5176\u4ed6\u547d\u4ee4"},{"location":"misc/windows.html#windows_1","text":"\u7528\u6237\u8d26\u6237\uff1a netplwiz \u542f\u52a8\u83dc\u5355\uff1a shell:startup \uff0c\u6dfb\u52a0exe\u5feb\u6377\u65b9\u5f0f\uff0cexe\u6dfb\u52a0\u5230\u81ea\u542f\u52a8 \u8ba1\u7b97\u5668\uff1a calc \u7cfb\u7edf\u914d\u7f6e\uff1a msconfig \u6587\u4ef6\u8d44\u6e90\u7ba1\u7406\u5668\uff1a explorer \u6ce8\u518c\u8868\uff1a regedt32 \u4efb\u52a1\u7ba1\u7406\u5668\uff1a taskmgr \u8d44\u6e90\u76d1\u89c6\u5668\uff1a resmon \u6027\u80fd\u76d1\u89c6\u5668\uff1a perfmon Internet\u9009\u9879\uff1a inetcpl.cpl \u63a7\u5236\u9762\u677f\uff1a control \u7a0b\u5e8f\u4e0e\u529f\u80fd\uff1a appwiz.cpl \u4e8b\u4ef6\u67e5\u770b\u5668\uff1a eventvwr \u7cfb\u7edf\u4fe1\u606f\uff1a msinfo32 \u8ba1\u7b97\u673a\u7ba1\u7406\uff1a compmgmt.msc Windows\u7248\u672c\uff1a winver","title":"Windows \u7a0b\u5e8f"},{"location":"misc/windows.html#_4","text":"\u6253\u5f00 taskschd.msc \uff0c\u521b\u5efa\u57fa\u672c\u4efb\u52a1\u3002","title":"\u4efb\u52a1\u8ba1\u5212\u7a0b\u5e8f"},{"location":"misc/windows.html#faq","text":"","title":"FAQ"},{"location":"misc/windows.html#_5","text":"\u6267\u884c\u683c\u5f0f\u5316\uff0c\u53d6\u6d88\u52fe\u9009*\u5feb\u901f\u683c\u5f0f\u5316*\uff1b \u5c06\u7b80\u5355\u6587\u4ef6\u5199\u6ee1\u78c1\u76d8\uff0c\u5373\u5199\u5165\u6570\u636e\u8986\u76d6\uff1b \u91cd\u590d\u4e0a\u8ff0\u4e24\u4e2a\u6b65\u9aa4\u4e09\u6b21\u4ee5\u4e0a\uff08\u683c\u5f0f\u5316\u65f6\u9009\u62e9\u4e0d\u540c\u7684**\u5206\u914d\u5355\u5143\u5927\u5c0f**\uff09\u3002","title":"\u5f7b\u5e95\u683c\u5f0f\u5316\uff08\u4e0d\u53ef\u6062\u590d\uff09"},{"location":"misc/windows.html#_6","text":"Windows \u547d\u4ee4","title":"\u53c2\u8003"},{"location":"python/index.html","text":"\u5b89\u88c5 \u00b6 Windows \u00b6 \u4e0b\u8f7d\u5e76\u5b89\u88c5 Python3 . \u66f4\u65b0 pip \uff0c python -m pip install --upgrade pip \u66f4\u6362\u56fd\u5185\u955c\u50cf \u00b6 \u5e38\u7528\u955c\u50cf\uff1a \u963f\u91cc\u4e91 https://mirrors.aliyun.com/pypi/simple/ \u8c46\u74e3 https://pypi.douban.com/simple/ \u6e05\u534e\u5927\u5b66 https://pypi.tuna.tsinghua.edu.cn/simple/ \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u534e\u4e2d\u79d1\u6280\u5927\u5b66 https://pypi.hustunique.com/ Linux \u4e0b\uff0c\u4fee\u6539 ~/.pip/pip.conf pip.conf [global] index-url = https://mirrors.aliyun.com/pypi/simple/ [install] trusted-host = https://mirrors.aliyun.com/ Windows \u4e0b\uff0c\u521b\u5efa\u6587\u4ef6 C:/Users/%username%/pip/pip.ini pip.ini [global] index-url = https://mirrors.aliyun.com/pypi/simple/ [install] trusted-host = https://mirrors.aliyun.com/ \u6253\u5305 \u00b6 py2exe \u00b6 \u5bfc\u5165 pip install py2exe \u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f hello.py hello.py print ( \"Hello World!\" ) \u5728\u540c\u7ea7\u76ee\u5f55\u4e0b\u521b\u5efa setup.py setup.py from distutils.core import setup import py2exe setup ( console = [ 'hello.py' ]) \u6267\u884c setup.py python setup.py py2exe hello.exe \u548c\u6267\u884c\u4e0a\u4e0b\u6587\u5373\u88ab\u6253\u5305\u8fdb dist \u76ee\u5f55\u4e0b. PyInstaller \u00b6 \u5bfc\u5165 pip install pyinstaller \u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f hello.py hello.py print ( \"Hello World!\" ) \u6267\u884c\u547d\u4ee4 pyinstaller hello.py hello.exe \u548c\u6267\u884c\u4e0a\u4e0b\u6587\u5373\u88ab\u6253\u5305\u8fdb dist/hello \u76ee\u5f55\u4e0b. \u53ef\u9009\u9879\uff1a --onefile \u6216\u8005 -F \uff1a\u6253\u5305\u4e3a\u5355\u4e2a .exe \u6587\u4ef6 --windowed \u6216\u8005 -w \uff1a\u8fd0\u884c\u7a0b\u5e8f\u65f6\u663e\u793a\u7a97\u53e3 --name \uff1a\u547d\u540d\u5e94\u7528 \u53c2\u8003 \u00b6 Python 3 Documentation PyPI \u00b7 The Python Package Index FrontPage - py2exe.org setuptools documentation PyInstaller Manual \u2014 PyInstaller documentation Beautiful Soup 4.4.0 \u6587\u6863 Google Python Style Guide","title":"\u5f00\u59cb"},{"location":"python/index.html#_1","text":"","title":"\u5b89\u88c5"},{"location":"python/index.html#windows","text":"\u4e0b\u8f7d\u5e76\u5b89\u88c5 Python3 . \u66f4\u65b0 pip \uff0c python -m pip install --upgrade pip","title":"Windows"},{"location":"python/index.html#_2","text":"\u5e38\u7528\u955c\u50cf\uff1a \u963f\u91cc\u4e91 https://mirrors.aliyun.com/pypi/simple/ \u8c46\u74e3 https://pypi.douban.com/simple/ \u6e05\u534e\u5927\u5b66 https://pypi.tuna.tsinghua.edu.cn/simple/ \u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66 https://pypi.mirrors.ustc.edu.cn/simple/ \u534e\u4e2d\u79d1\u6280\u5927\u5b66 https://pypi.hustunique.com/ Linux \u4e0b\uff0c\u4fee\u6539 ~/.pip/pip.conf pip.conf [global] index-url = https://mirrors.aliyun.com/pypi/simple/ [install] trusted-host = https://mirrors.aliyun.com/ Windows \u4e0b\uff0c\u521b\u5efa\u6587\u4ef6 C:/Users/%username%/pip/pip.ini pip.ini [global] index-url = https://mirrors.aliyun.com/pypi/simple/ [install] trusted-host = https://mirrors.aliyun.com/","title":"\u66f4\u6362\u56fd\u5185\u955c\u50cf"},{"location":"python/index.html#_3","text":"","title":"\u6253\u5305"},{"location":"python/index.html#py2exe","text":"\u5bfc\u5165 pip install py2exe \u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f hello.py hello.py print ( \"Hello World!\" ) \u5728\u540c\u7ea7\u76ee\u5f55\u4e0b\u521b\u5efa setup.py setup.py from distutils.core import setup import py2exe setup ( console = [ 'hello.py' ]) \u6267\u884c setup.py python setup.py py2exe hello.exe \u548c\u6267\u884c\u4e0a\u4e0b\u6587\u5373\u88ab\u6253\u5305\u8fdb dist \u76ee\u5f55\u4e0b.","title":"py2exe"},{"location":"python/index.html#pyinstaller","text":"\u5bfc\u5165 pip install pyinstaller \u521b\u5efa\u4e00\u4e2a\u7a0b\u5e8f hello.py hello.py print ( \"Hello World!\" ) \u6267\u884c\u547d\u4ee4 pyinstaller hello.py hello.exe \u548c\u6267\u884c\u4e0a\u4e0b\u6587\u5373\u88ab\u6253\u5305\u8fdb dist/hello \u76ee\u5f55\u4e0b. \u53ef\u9009\u9879\uff1a --onefile \u6216\u8005 -F \uff1a\u6253\u5305\u4e3a\u5355\u4e2a .exe \u6587\u4ef6 --windowed \u6216\u8005 -w \uff1a\u8fd0\u884c\u7a0b\u5e8f\u65f6\u663e\u793a\u7a97\u53e3 --name \uff1a\u547d\u540d\u5e94\u7528","title":"PyInstaller"},{"location":"python/index.html#_4","text":"Python 3 Documentation PyPI \u00b7 The Python Package Index FrontPage - py2exe.org setuptools documentation PyInstaller Manual \u2014 PyInstaller documentation Beautiful Soup 4.4.0 \u6587\u6863 Google Python Style Guide","title":"\u53c2\u8003"},{"location":"python/flask.html","text":"TODO Flask \u00b6 Flask is a lightweight WSGI web application framework. Here is Chinese documentations . Deploy \u00b6 Assume that there is a simple application of Flask as follows: from flask import Flask app = Flask ( __name__ ) @app . route ( '/hello' ) def index (): return 'hello flask' Windows \u00b6 On Windows, Tornado is a choice as the WSGI server. Install packages of Tornado first. Create a server.py under the project directory. # server.py from tornado.httpserver import HTTPServer from tornado.ioloop import IOLoop from tornado.wsgi import WSGIContainer from app import app s = HTTPServer ( WSGIContainer ( app )) s . listen ( 9900 ) # listen to port: 9900 IOLoop . current () . start () Run server.py . And then open the following address: http://localhost:9900/hello .","title":"Flask"},{"location":"python/flask.html#flask","text":"Flask is a lightweight WSGI web application framework. Here is Chinese documentations .","title":"Flask"},{"location":"python/flask.html#deploy","text":"Assume that there is a simple application of Flask as follows: from flask import Flask app = Flask ( __name__ ) @app . route ( '/hello' ) def index (): return 'hello flask'","title":"Deploy"},{"location":"python/flask.html#windows","text":"On Windows, Tornado is a choice as the WSGI server. Install packages of Tornado first. Create a server.py under the project directory. # server.py from tornado.httpserver import HTTPServer from tornado.ioloop import IOLoop from tornado.wsgi import WSGIContainer from app import app s = HTTPServer ( WSGIContainer ( app )) s . listen ( 9900 ) # listen to port: 9900 IOLoop . current () . start () Run server.py . And then open the following address: http://localhost:9900/hello .","title":"Windows"},{"location":"python/app/excel.html","text":"TODO Overview \u00b6 xlwt /[xlrd] \u00b6 import xlrd import xlwt # read with xlrd wb = xlrd . open_workbook ( 'example.xlsx' , encoding = 'utf-8' ) data = {} for i , sheet in enumerate ( wb . sheets ()): nrows = sheet . nrows # number of rows in the sheet ncols = sheet . ncols # number of columns in the sheet sheet_values = [] for r in range ( nrows ): row_values = [] for c in range ( ncols ): row_values . append ( sheet . cell ( r , c ) . value ) sheet_values . append ( row_values ) data [ sheet . name ] = sheet_values # write with xlwt wb = xlwt . Workbook ( encoding = 'utf-8' ) for key , value in data . items (): sheet = wb . add_sheet ( key ) for r , row in enumerate ( value ): for c , value in enumerate ( row ): sheet . write ( r , c , value ) wb . save ( 'dst.xls' ) xlwt.Worksheet. Worksheet \u00b6 write ( r , c , label = '' , style =< xlwt . Style . XFStyle object > ) # example write ( 0 , 0 , 'example' ) write ( 0 , 1 , xlwt . Formula ( 'HYPERLINK(\" %s \", \" %s \")' % ( url , name ))) r and c start with 0. label is the data value to be written. An int , long , or Decimal instance is converted to float . A unicode instance is written as is. A bytes instance is converted to unicode using the encoding, which defaults to ascii , specified when the Workbook instance was created. A datetime , date or time instance is converted into Excel date format (a float representing the number of days since (typically) 1899-12-31T00:00:00 , under the pretence that 1900 was a leap year). A bool instance will show up as TRUE or FALSE in Excel. None causes the cell to be blank: no data, only formatting. An xlwt.Formula instance causes an Excel formula to be written. Notes : xlwt doesn't support .xlsx .","title":"Excel"},{"location":"python/app/excel.html#overview","text":"","title":"Overview"},{"location":"python/app/excel.html#xlwtxlrd","text":"import xlrd import xlwt # read with xlrd wb = xlrd . open_workbook ( 'example.xlsx' , encoding = 'utf-8' ) data = {} for i , sheet in enumerate ( wb . sheets ()): nrows = sheet . nrows # number of rows in the sheet ncols = sheet . ncols # number of columns in the sheet sheet_values = [] for r in range ( nrows ): row_values = [] for c in range ( ncols ): row_values . append ( sheet . cell ( r , c ) . value ) sheet_values . append ( row_values ) data [ sheet . name ] = sheet_values # write with xlwt wb = xlwt . Workbook ( encoding = 'utf-8' ) for key , value in data . items (): sheet = wb . add_sheet ( key ) for r , row in enumerate ( value ): for c , value in enumerate ( row ): sheet . write ( r , c , value ) wb . save ( 'dst.xls' )","title":"xlwt/[xlrd]"},{"location":"python/app/excel.html#xlwtworksheetworksheet","text":"write ( r , c , label = '' , style =< xlwt . Style . XFStyle object > ) # example write ( 0 , 0 , 'example' ) write ( 0 , 1 , xlwt . Formula ( 'HYPERLINK(\" %s \", \" %s \")' % ( url , name ))) r and c start with 0. label is the data value to be written. An int , long , or Decimal instance is converted to float . A unicode instance is written as is. A bytes instance is converted to unicode using the encoding, which defaults to ascii , specified when the Workbook instance was created. A datetime , date or time instance is converted into Excel date format (a float representing the number of days since (typically) 1899-12-31T00:00:00 , under the pretence that 1900 was a leap year). A bool instance will show up as TRUE or FALSE in Excel. None causes the cell to be blank: no data, only formatting. An xlwt.Formula instance causes an Excel formula to be written. Notes : xlwt doesn't support .xlsx .","title":"xlwt.Worksheet.Worksheet"},{"location":"python/app/spider.html","text":"TODO Overview \u00b6 Web spider is a kind of script to crawl information from the Internet. Architecture \u00b6 Common process of spider is Request -> Get responses -> Parse the content -> Save useful data , including five parts: Scheduler : schedule to make the following parts work well together. URL Manager : manage URLs accessed and to access by memory, database or cache. Downloader : download web pages from the specified URLs. Logging in, proxy and cookies may be required. Parser : parse the web pages downloaded to obtain useful information by DOM tree or parsing the whole string of the page. Regular expression, html.parser , beautifulsoup , lxml are all optional. Application : apply the gotten information. References \u00b6 Python \u722c\u866b_Python_guoqkmiss\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 Python\u722c\u53d6IPTV\u64ad\u653e\u6e90","title":"Spider"},{"location":"python/app/spider.html#overview","text":"Web spider is a kind of script to crawl information from the Internet.","title":"Overview"},{"location":"python/app/spider.html#architecture","text":"Common process of spider is Request -> Get responses -> Parse the content -> Save useful data , including five parts: Scheduler : schedule to make the following parts work well together. URL Manager : manage URLs accessed and to access by memory, database or cache. Downloader : download web pages from the specified URLs. Logging in, proxy and cookies may be required. Parser : parse the web pages downloaded to obtain useful information by DOM tree or parsing the whole string of the page. Regular expression, html.parser , beautifulsoup , lxml are all optional. Application : apply the gotten information.","title":"Architecture"},{"location":"python/app/spider.html#references","text":"Python \u722c\u866b_Python_guoqkmiss\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 Python\u722c\u53d6IPTV\u64ad\u653e\u6e90","title":"References"},{"location":"python/app/task.html","text":"TODO Overview \u00b6 This note will introduce ways to execute scheduled tasks in Python. Mainly include four ways: function sleep , class Timer , module sched and frame APScheduler . Loop and sleep \u00b6 import time # Run every other n seconds. def task ( n ): while True : print ( 'Hello World!' ) time . sleep ( n ) task ( 5 ) Notes : The program will be BLOCKED in the time. Timer \u00b6 It's in the module threading , passing the interval of time (unit: seconds), the function to execute and arguments of the function as three arguments. from threading import Timer def f ( s ): print ( s ) # Execute only once after 5 seconds. t = Timer ( 5 , f , ( 'Hello World!' ,)) t . start () # Execute the task and then define next one. def task ( s , interval ): print ( s ) Timer ( interval , task , ( s , interval )) . start () Notes : The program won't be blocked in this way. Timer won't loop . It's over after executed. sched \u00b6 import sched import time # initialize scheduler # pass the time and delay functions scheduler = sched . scheduler ( time . time , time . sleep ) def task ( s , interval ): print ( s ) # pass the interval, priority, function to execute and arguments of the function scheduler . enter ( interval , 0 , task , ( s , interval )) # the first one scheduler . enter ( 0 , 0 , task , ( 5 , 'Hello World!' )) scheduler . run () Notes : Same as Timer , sched won't loop either. APScheduler \u00b6 Install with pip install APScheduler . Four Components \u00b6 Trigger defines which task to run next. There are three built-in triggers: date: specified time interval: fixed time intervals cron: cron expression Job Store , as the name suggests, stores jobs to be scheduled. MemoryJobStore is used by default. Database is also available if necessary. Executor execute jobs in the thread or thread pool. It will notify Scheduler when jobs are finished. Two common ones are ProcessPoolExecutor and ThreadPoolExecutor . Schedulers configures the above components, such as adding a job. As follow are all the schedulers: BlockingScheduler : use when the scheduler is the only thing running in your process BackgroundScheduler : use when you\u2019re not using any of the frameworks below, and want the scheduler to run in the background inside your application AsyncIOScheduler: use if your application uses the asyncio module GeventScheduler: use if your application uses gevent TornadoScheduler: use if you\u2019re building a Tornado application TwistedScheduler: use if you\u2019re building a Twisted application QtScheduler: use if you\u2019re building a Qt application Configuration \u00b6 To be continued... References \u00b6 Python \u5b9a\u65f6\u4efb\u52a1\u7684\u5b9e\u73b0\u65b9\u5f0f - \u67ab\u98de\u98de - \u535a\u5ba2\u56ed","title":"Task"},{"location":"python/app/task.html#overview","text":"This note will introduce ways to execute scheduled tasks in Python. Mainly include four ways: function sleep , class Timer , module sched and frame APScheduler .","title":"Overview"},{"location":"python/app/task.html#loop-and-sleep","text":"import time # Run every other n seconds. def task ( n ): while True : print ( 'Hello World!' ) time . sleep ( n ) task ( 5 ) Notes : The program will be BLOCKED in the time.","title":"Loop and sleep"},{"location":"python/app/task.html#timer","text":"It's in the module threading , passing the interval of time (unit: seconds), the function to execute and arguments of the function as three arguments. from threading import Timer def f ( s ): print ( s ) # Execute only once after 5 seconds. t = Timer ( 5 , f , ( 'Hello World!' ,)) t . start () # Execute the task and then define next one. def task ( s , interval ): print ( s ) Timer ( interval , task , ( s , interval )) . start () Notes : The program won't be blocked in this way. Timer won't loop . It's over after executed.","title":"Timer"},{"location":"python/app/task.html#sched","text":"import sched import time # initialize scheduler # pass the time and delay functions scheduler = sched . scheduler ( time . time , time . sleep ) def task ( s , interval ): print ( s ) # pass the interval, priority, function to execute and arguments of the function scheduler . enter ( interval , 0 , task , ( s , interval )) # the first one scheduler . enter ( 0 , 0 , task , ( 5 , 'Hello World!' )) scheduler . run () Notes : Same as Timer , sched won't loop either.","title":"sched"},{"location":"python/app/task.html#apscheduler","text":"Install with pip install APScheduler .","title":"APScheduler"},{"location":"python/app/task.html#four-components","text":"Trigger defines which task to run next. There are three built-in triggers: date: specified time interval: fixed time intervals cron: cron expression Job Store , as the name suggests, stores jobs to be scheduled. MemoryJobStore is used by default. Database is also available if necessary. Executor execute jobs in the thread or thread pool. It will notify Scheduler when jobs are finished. Two common ones are ProcessPoolExecutor and ThreadPoolExecutor . Schedulers configures the above components, such as adding a job. As follow are all the schedulers: BlockingScheduler : use when the scheduler is the only thing running in your process BackgroundScheduler : use when you\u2019re not using any of the frameworks below, and want the scheduler to run in the background inside your application AsyncIOScheduler: use if your application uses the asyncio module GeventScheduler: use if your application uses gevent TornadoScheduler: use if you\u2019re building a Tornado application TwistedScheduler: use if you\u2019re building a Twisted application QtScheduler: use if you\u2019re building a Qt application","title":"Four Components"},{"location":"python/app/task.html#configuration","text":"To be continued...","title":"Configuration"},{"location":"python/app/task.html#references","text":"Python \u5b9a\u65f6\u4efb\u52a1\u7684\u5b9e\u73b0\u65b9\u5f0f - \u67ab\u98de\u98de - \u535a\u5ba2\u56ed","title":"References"},{"location":"python/library/configparser.html","text":"TODO Get Started \u00b6 Following is an example of .ini file : [DEFAULT] ServerAliveInterval = 45 Compression = yes CompressionLevel = 9 ForwardX11 = yes [bitbucket.org] User = hg [topsecret.server.com] Port = 50022 ForwardX11 = no Create and save a configuration file above by ConfigParser . It's treated much like a dictionary. import configparser config = configparser . ConfigParser () # write config [ 'DEFAULT' ] = { 'ServerAliveInterval' : '45' , 'Compression' : 'yes' , 'CompressionLevel' : '9' } config [ 'bitbucket.org' ] = {} config [ 'bitbucket.org' ][ 'User' ] = 'hg' config [ 'topsecret.server.com' ] = {} topsecret = config [ 'topsecret.server.com' ] topsecret [ 'Port' ] = '50022' # mutates the parser topsecret [ 'ForwardX11' ] = 'no' # same here config [ 'DEFAULT' ][ 'ForwardX11' ] = 'yes' with open ( 'example.ini' , 'w' ) as configfile : config . write ( configfile ) Then read it back. import configparser config = configparser . ConfigParser () config . sections () # [] config . read ( 'example.ini' ) config . sections () # ['bitbucket.org', 'topsecret.server.com'] print ( 'bitbucket.org' in config ) # True user = config [ 'bitbucket.org' ][ 'User' ] # 'hg' compression = config [ 'DEFAULT' ][ 'Compression' ] # 'yes' topsecret = config [ 'topsecret.server.com' ] for key in config [ 'bitbucket.org' ]: print ( key ) # user # compressionlevel # serveraliveinterval # compression # forwardx11 Notes : all values in the configuration file are stored as strings. Convert types with given getter methods or customized methods. import configparser config = configparser . ConfigParser () config [ 'DEFAULT' ] . getint ( 'ServerAliveInterval' ) # 45 .INI File \u00b6 A configuration file consists of sections, each led by a [section] header, followed by key/value entries separated by a specific string ('=' or ':'). ConfigParser supports interpolation. This means values can be preprocessed before returning them from get() calls. from configparser import ConfigParser , BasicInterpolation config = ConfigParser ( interpolation = BasicInterpolation ) BasicInterpolation enables values to contain format strings which refer to other values in the same section, or values in the special default section. [Paths] home_dir: /Users my_dir: %(home_dir)s/lumberjack my_pictures: %(my_dir)s/Pictures [Escape] gain: 80%% # use a %% to escape the % sign (% is the only character that needs to be escaped) ExtendedInterpolation uses ${section:option} to denote a value from a foreign section. If the section: part is omitted, interpolation defaults to the current section (and possibly the default values from the special section). [Common] home_dir: /Users library_dir: /Library system_dir: /System macports_dir: /opt/local [Frameworks] Python: 3.2 path: ${Common:system_dir}/Library/Frameworks/","title":"configParser"},{"location":"python/library/configparser.html#get-started","text":"Following is an example of .ini file : [DEFAULT] ServerAliveInterval = 45 Compression = yes CompressionLevel = 9 ForwardX11 = yes [bitbucket.org] User = hg [topsecret.server.com] Port = 50022 ForwardX11 = no Create and save a configuration file above by ConfigParser . It's treated much like a dictionary. import configparser config = configparser . ConfigParser () # write config [ 'DEFAULT' ] = { 'ServerAliveInterval' : '45' , 'Compression' : 'yes' , 'CompressionLevel' : '9' } config [ 'bitbucket.org' ] = {} config [ 'bitbucket.org' ][ 'User' ] = 'hg' config [ 'topsecret.server.com' ] = {} topsecret = config [ 'topsecret.server.com' ] topsecret [ 'Port' ] = '50022' # mutates the parser topsecret [ 'ForwardX11' ] = 'no' # same here config [ 'DEFAULT' ][ 'ForwardX11' ] = 'yes' with open ( 'example.ini' , 'w' ) as configfile : config . write ( configfile ) Then read it back. import configparser config = configparser . ConfigParser () config . sections () # [] config . read ( 'example.ini' ) config . sections () # ['bitbucket.org', 'topsecret.server.com'] print ( 'bitbucket.org' in config ) # True user = config [ 'bitbucket.org' ][ 'User' ] # 'hg' compression = config [ 'DEFAULT' ][ 'Compression' ] # 'yes' topsecret = config [ 'topsecret.server.com' ] for key in config [ 'bitbucket.org' ]: print ( key ) # user # compressionlevel # serveraliveinterval # compression # forwardx11 Notes : all values in the configuration file are stored as strings. Convert types with given getter methods or customized methods. import configparser config = configparser . ConfigParser () config [ 'DEFAULT' ] . getint ( 'ServerAliveInterval' ) # 45","title":"Get Started"},{"location":"python/library/configparser.html#ini-file","text":"A configuration file consists of sections, each led by a [section] header, followed by key/value entries separated by a specific string ('=' or ':'). ConfigParser supports interpolation. This means values can be preprocessed before returning them from get() calls. from configparser import ConfigParser , BasicInterpolation config = ConfigParser ( interpolation = BasicInterpolation ) BasicInterpolation enables values to contain format strings which refer to other values in the same section, or values in the special default section. [Paths] home_dir: /Users my_dir: %(home_dir)s/lumberjack my_pictures: %(my_dir)s/Pictures [Escape] gain: 80%% # use a %% to escape the % sign (% is the only character that needs to be escaped) ExtendedInterpolation uses ${section:option} to denote a value from a foreign section. If the section: part is omitted, interpolation defaults to the current section (and possibly the default values from the special section). [Common] home_dir: /Users library_dir: /Library system_dir: /System macports_dir: /opt/local [Frameworks] Python: 3.2 path: ${Common:system_dir}/Library/Frameworks/","title":".INI File"},{"location":"python/library/hashlib.html","text":"TODO Overview \u00b6 import hashlib md5obj = hashlib . md5 () with open ( 'example.txt' , 'rb' ) as file : md5obj . update ( file . read ()) md5value = md5obj . hexdigest () # get md5 value of the file","title":"hashlib"},{"location":"python/library/hashlib.html#overview","text":"import hashlib md5obj = hashlib . md5 () with open ( 'example.txt' , 'rb' ) as file : md5obj . update ( file . read ()) md5value = md5obj . hexdigest () # get md5 value of the file","title":"Overview"},{"location":"python/library/logging.html","text":"TODO Overview \u00b6 Use standard module logging to print logs. It defines five levels of logs: DEBUG < INFO < WARNING < ERROR < CRITICAL and contains four basic classes: Logger , Handler , ** Filter** and Formatter . Get Started \u00b6 Print simple logs by calling module-level functions. Following calls will print logs onto the console. import logging logging . debug ( 'This is a debug log.' ) logging . info ( 'This is a info log.' ) logging . warning ( 'This is a warning log.' ) logging . error ( 'This is a error log.' ) logging . critical ( 'This is a critical log.' ) logging . log ( logging . DEBUG , 'This is a debug log.' ) By default, only WARNING or above logs will be printed onto console. To modify basic configurations, we need to call logging.basicConfig() with following optional arguments. filename : target file that logs are output to. filemode : mode to open target file, 'a' by default. format : format to output logs. Refer to LogRecord attributes . datefmt : format of date/time, taking effect when format contains time field. Refer to time.strftime() . level stream : stream logs are output to, such as sys.stdout and sys.stderr . style : style of format string. Optional values includes '%'(default), '{' and '$'. It's since Python 3.2. handlers : Handlers to handle logs. It's since Python 3.3. Notes : filename , stream and handlers are incompatible. If both are present, a ValueError is raised. import logging logging . basicConfig ( filename = 'example.log' , level = logging . INFO , format = ' %(asctime)s | %(levelname)s | % (message)s' , datefmt = '%Y-%m- %d %I:%M:%S' ) logging . info ( 'Hi, %s ' , 'Jack' ) It will print the following log. 2020-03-09 22:38:00 | INFO | Hi, Jack Advanced \u00b6 Create an instance of Logger to record logs by calling logging.getLogger( name ) . Its procedure shows as follows. Loggers \u00b6 The most common used methods of Logger fall into two categories: configuration Logger.setLevel() Logger.addHandler() and Logger.removeHandler() Logger.addFilter() and Logger.removeFilter() message sending Logger.debug() , Logger.info() , Logger.warning() , Logger.error() and Logger.critical() Logger.exception() Logger.log() Handlers \u00b6 Formatters \u00b6 Configuration \u00b6 There are three ways to configure logging: Creating loggers, handlers, and formatters explicitly using Python code. Creating a logging configuration file and reading it using the fileConfig() function. Creating a dictionary of configuration information and passing it to the dictConfig() function. References \u00b6 Python\u4e4b\u65e5\u5fd7\u5904\u7406\uff08logging\u6a21\u5757\uff09 - \u7a7a\u543e\u9053\u96ea - \u535a\u5ba2\u56ed logging \u2014 Logging facility for Python \u2014 Python 3 documentation Logging HOWTO \u2014 Python 3 documentation Logging Cookbook \u2014 Python 3 documentation","title":"logging"},{"location":"python/library/logging.html#overview","text":"Use standard module logging to print logs. It defines five levels of logs: DEBUG < INFO < WARNING < ERROR < CRITICAL and contains four basic classes: Logger , Handler , ** Filter** and Formatter .","title":"Overview"},{"location":"python/library/logging.html#get-started","text":"Print simple logs by calling module-level functions. Following calls will print logs onto the console. import logging logging . debug ( 'This is a debug log.' ) logging . info ( 'This is a info log.' ) logging . warning ( 'This is a warning log.' ) logging . error ( 'This is a error log.' ) logging . critical ( 'This is a critical log.' ) logging . log ( logging . DEBUG , 'This is a debug log.' ) By default, only WARNING or above logs will be printed onto console. To modify basic configurations, we need to call logging.basicConfig() with following optional arguments. filename : target file that logs are output to. filemode : mode to open target file, 'a' by default. format : format to output logs. Refer to LogRecord attributes . datefmt : format of date/time, taking effect when format contains time field. Refer to time.strftime() . level stream : stream logs are output to, such as sys.stdout and sys.stderr . style : style of format string. Optional values includes '%'(default), '{' and '$'. It's since Python 3.2. handlers : Handlers to handle logs. It's since Python 3.3. Notes : filename , stream and handlers are incompatible. If both are present, a ValueError is raised. import logging logging . basicConfig ( filename = 'example.log' , level = logging . INFO , format = ' %(asctime)s | %(levelname)s | % (message)s' , datefmt = '%Y-%m- %d %I:%M:%S' ) logging . info ( 'Hi, %s ' , 'Jack' ) It will print the following log. 2020-03-09 22:38:00 | INFO | Hi, Jack","title":"Get Started"},{"location":"python/library/logging.html#advanced","text":"Create an instance of Logger to record logs by calling logging.getLogger( name ) . Its procedure shows as follows.","title":"Advanced"},{"location":"python/library/logging.html#loggers","text":"The most common used methods of Logger fall into two categories: configuration Logger.setLevel() Logger.addHandler() and Logger.removeHandler() Logger.addFilter() and Logger.removeFilter() message sending Logger.debug() , Logger.info() , Logger.warning() , Logger.error() and Logger.critical() Logger.exception() Logger.log()","title":"Loggers"},{"location":"python/library/logging.html#handlers","text":"","title":"Handlers"},{"location":"python/library/logging.html#formatters","text":"","title":"Formatters"},{"location":"python/library/logging.html#configuration","text":"There are three ways to configure logging: Creating loggers, handlers, and formatters explicitly using Python code. Creating a logging configuration file and reading it using the fileConfig() function. Creating a dictionary of configuration information and passing it to the dictConfig() function.","title":"Configuration"},{"location":"python/library/logging.html#references","text":"Python\u4e4b\u65e5\u5fd7\u5904\u7406\uff08logging\u6a21\u5757\uff09 - \u7a7a\u543e\u9053\u96ea - \u535a\u5ba2\u56ed logging \u2014 Logging facility for Python \u2014 Python 3 documentation Logging HOWTO \u2014 Python 3 documentation Logging Cookbook \u2014 Python 3 documentation","title":"References"},{"location":"python/library/mkdocs.html","text":"\u5b89\u88c5 \u00b6 Ubuntu \u00b6 sudo apt-get install mkdocs Windows \u00b6 pip install mkdocs mkdocs --version # \u9a8c\u8bc1\u7248\u672c \u521b\u5efa \u00b6 \u6267\u884c\u547d\u4ee4 mkdocs new my-wiki \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a docs \uff1a\u4fdd\u5b58 Markdown \u6587\u4ef6 index.md \uff1a\u9ed8\u8ba4\u9996\u9875\u6587\u4ef6 mkdocs.yml \uff1a\u914d\u7f6e\u6587\u4ef6\uff0c\u8be6\u89c1 \u914d\u7f6e \u9884\u89c8 \u00b6 \u5728\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs serve \u8fdb\u5165 mkdocs.yml \u914d\u7f6e\u7684\u5730\u5740\uff0c\u9ed8\u8ba4\u4e3a 127.0.0.1:8000 . \u6dfb\u52a0\u9875\u9762 \u00b6 \u6dfb\u52a0 example.md \u5230 docs \u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u5728 mkdocs.yml \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5bfc\u822a\u680f\u6307\u5411\u8be5\u6587\u4ef6\uff1a nav : - Example : example.md \u751f\u6210\u7ad9\u70b9 \u00b6 mkdocs build \u6839\u76ee\u5f55\u4e0b\u5373\u4f1a\u521b\u5efa site \u76ee\u5f55\uff0c\u5305\u542b\u8f93\u51fa\u7684\u6587\u4ef6\uff1a site css fonts img js index.html \uff1a index.md example index.html \uff1a example.md \u53d1\u5e03 \u00b6 GitHub \u00b6 \u5728 GitHub \u4e0a\u521b\u5efa\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93 my-wiki \uff0c\u5e76\u5173\u8054\u672c\u5730 my-wiki \uff1a cd my-wiki git init git remote add origin git@github.com:%username%/my-wiki.git \u6267\u884c\u547d\u4ee4\uff0c\u63a8\u9001 site \u76ee\u5f55\u5230 gh-pages \u5206\u652f\u4e0b\uff1a mkdocs gh-deploy \u6253\u5f00 Settings->Pages \u8bbe\u7f6e GitHub Pages \uff0c\u6587\u6863\u5373\u4f1a\u88ab\u53d1\u5e03\u5230 https://%username%.github.io/my-wiki/. \u4e3b\u9898 \u00b6 mkdocs-material \u00b6 pip install mkdocs-material \u5176\u4ed6 WiKi \u00b6 MediaWiki DokuWiki minDoc Gitbook Docsify Hexo \u53c2\u8003 \u00b6 MkDocs MkDocs \u4e2d\u6587\u6587\u6863","title":"MkDocs"},{"location":"python/library/mkdocs.html#_1","text":"","title":"\u5b89\u88c5"},{"location":"python/library/mkdocs.html#ubuntu","text":"sudo apt-get install mkdocs","title":"Ubuntu"},{"location":"python/library/mkdocs.html#windows","text":"pip install mkdocs mkdocs --version # \u9a8c\u8bc1\u7248\u672c","title":"Windows"},{"location":"python/library/mkdocs.html#_2","text":"\u6267\u884c\u547d\u4ee4 mkdocs new my-wiki \u76ee\u5f55\u7ed3\u6784\u5982\u4e0b\uff1a docs \uff1a\u4fdd\u5b58 Markdown \u6587\u4ef6 index.md \uff1a\u9ed8\u8ba4\u9996\u9875\u6587\u4ef6 mkdocs.yml \uff1a\u914d\u7f6e\u6587\u4ef6\uff0c\u8be6\u89c1 \u914d\u7f6e","title":"\u521b\u5efa"},{"location":"python/library/mkdocs.html#_3","text":"\u5728\u6839\u76ee\u5f55\u4e0b\u6267\u884c\u547d\u4ee4 mkdocs serve \u8fdb\u5165 mkdocs.yml \u914d\u7f6e\u7684\u5730\u5740\uff0c\u9ed8\u8ba4\u4e3a 127.0.0.1:8000 .","title":"\u9884\u89c8"},{"location":"python/library/mkdocs.html#_4","text":"\u6dfb\u52a0 example.md \u5230 docs \u76ee\u5f55\u4e0b\uff0c\u7136\u540e\u5728 mkdocs.yml \u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5bfc\u822a\u680f\u6307\u5411\u8be5\u6587\u4ef6\uff1a nav : - Example : example.md","title":"\u6dfb\u52a0\u9875\u9762"},{"location":"python/library/mkdocs.html#_5","text":"mkdocs build \u6839\u76ee\u5f55\u4e0b\u5373\u4f1a\u521b\u5efa site \u76ee\u5f55\uff0c\u5305\u542b\u8f93\u51fa\u7684\u6587\u4ef6\uff1a site css fonts img js index.html \uff1a index.md example index.html \uff1a example.md","title":"\u751f\u6210\u7ad9\u70b9"},{"location":"python/library/mkdocs.html#_6","text":"","title":"\u53d1\u5e03"},{"location":"python/library/mkdocs.html#github","text":"\u5728 GitHub \u4e0a\u521b\u5efa\u4e00\u4e2a\u8fdc\u7a0b\u4ed3\u5e93 my-wiki \uff0c\u5e76\u5173\u8054\u672c\u5730 my-wiki \uff1a cd my-wiki git init git remote add origin git@github.com:%username%/my-wiki.git \u6267\u884c\u547d\u4ee4\uff0c\u63a8\u9001 site \u76ee\u5f55\u5230 gh-pages \u5206\u652f\u4e0b\uff1a mkdocs gh-deploy \u6253\u5f00 Settings->Pages \u8bbe\u7f6e GitHub Pages \uff0c\u6587\u6863\u5373\u4f1a\u88ab\u53d1\u5e03\u5230 https://%username%.github.io/my-wiki/.","title":"GitHub"},{"location":"python/library/mkdocs.html#_7","text":"","title":"\u4e3b\u9898"},{"location":"python/library/mkdocs.html#mkdocs-material","text":"pip install mkdocs-material","title":"mkdocs-material"},{"location":"python/library/mkdocs.html#wiki","text":"MediaWiki DokuWiki minDoc Gitbook Docsify Hexo","title":"\u5176\u4ed6 WiKi"},{"location":"python/library/mkdocs.html#_8","text":"MkDocs MkDocs \u4e2d\u6587\u6587\u6863","title":"\u53c2\u8003"},{"location":"python/library/os.html","text":"TODO","title":"os"},{"location":"python/library/pymysql.html","text":"TODO Overview \u00b6 Connect to MySQL with Python . PyMySQL \u00b6 Install it with pip install PyMySQL . To access to MySQL, get connection to the database first and then execute relative SQLs with cursor . Following is an example. import pymysql.cursors connection = pymysql . connect ( host = 'localhost' , port = 3306 , user = 'root' , password = '1234' , database = 'example' ) cursor = connection . cursor () sql = 'select * from example.user' cursor . execute ( sql ) results = cursor . fetchall () for result in results : print ( result ) cursor . close () connection . close () References \u00b6 python \u5982\u4f55\u8fde\u63a5mysql-Python\u5b66\u4e60\u7f51","title":"PyMySQL"},{"location":"python/library/pymysql.html#overview","text":"Connect to MySQL with Python .","title":"Overview"},{"location":"python/library/pymysql.html#pymysql","text":"Install it with pip install PyMySQL . To access to MySQL, get connection to the database first and then execute relative SQLs with cursor . Following is an example. import pymysql.cursors connection = pymysql . connect ( host = 'localhost' , port = 3306 , user = 'root' , password = '1234' , database = 'example' ) cursor = connection . cursor () sql = 'select * from example.user' cursor . execute ( sql ) results = cursor . fetchall () for result in results : print ( result ) cursor . close () connection . close ()","title":"PyMySQL"},{"location":"python/library/pymysql.html#references","text":"python \u5982\u4f55\u8fde\u63a5mysql-Python\u5b66\u4e60\u7f51","title":"References"},{"location":"python/library/pywin32.html","text":"TODO Overview \u00b6 It provides the Windows APIs from Python. FileDialog \u00b6 import win32ui dialog = win32ui . CreateFileDialog ( 1 ) dialog . SetOFNInitialDir ( 'C:/Users/Administrator/Documents/' ) dialog . DoModal () filename = dialog . GetPathName () print ( filename )","title":"PyWin32"},{"location":"python/library/pywin32.html#overview","text":"It provides the Windows APIs from Python.","title":"Overview"},{"location":"python/library/pywin32.html#filedialog","text":"import win32ui dialog = win32ui . CreateFileDialog ( 1 ) dialog . SetOFNInitialDir ( 'C:/Users/Administrator/Documents/' ) dialog . DoModal () filename = dialog . GetPathName () print ( filename )","title":"FileDialog"},{"location":"python/library/pyyaml.html","text":"TODO Overview \u00b6 Read data from a YAML file.","title":"PyYAML"},{"location":"python/library/pyyaml.html#overview","text":"Read data from a YAML file.","title":"Overview"},{"location":"python/library/shutil.html","text":"TODO Overview \u00b6","title":"shutil"},{"location":"python/library/shutil.html#overview","text":"","title":"Overview"},{"location":"python/library/sqlite3.html","text":"TODO","title":"sqlite3"},{"location":"python/library/tkinter.html","text":"TODO FileDialog \u00b6 from tkinter import filedialog as fd fd . askopenfile ()","title":"Graphical User Interfaces"},{"location":"python/library/tkinter.html#filedialog","text":"from tkinter import filedialog as fd fd . askopenfile ()","title":"FileDialog"},{"location":"python/library/urllib.html","text":"TODO Overview \u00b6 urllib is a package to deal with URLs, including 4 modules: urllib.request, urllib.error, urllib.parse , and urllib.robotparser . The main part is about module request. Get Started \u00b6 Module request is for opening and reading URLs. An example is presented as follows. The response is an instance of http.client.HTTPResponse . from urllib import request # build a request object req = request . Request ( 'https://www.baidu.com' , headers = { 'Host' : 'www.baidu.com' , 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36' }, method = 'GET' ) # issue the request and print the result with request . urlopen ( req , timeout = 30 ) as response : print ( response . read () . decode ( 'utf-8' )) To handle the result further, commonly a html page, use BeautifulSoup . HTTP Header \u00b6 See more details here . Request \u00b6 Header Description Example Accept Content types that clients accept text/html,application/xml Accept-Charset Accept-Encoding gzip, deflate Accept-Language zh-CN,zh;q=0.9,zh-TW;q=0.8 Host netloc www.douban.com Origin scheme://netloc. Used for POST request or CORS request Referer Previous URL User-Agent Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36 Response \u00b6 Header Description Example Content-Encoding Content-Language Content-Length Content-Location Backup address Content-MD5 Content-Type MIME type Download \u00b6 Under the package, there are two ways to download files from the Internet. urllib.request.urlretrieve \u00b6 from urllib import request def reporthook ( block_count , block_size , total_size ): print ( ' \\r Downloading: %.2f%% ' % ( 100 * block_count * block_size / total_size ), end = '' ) url = 'https://www.baidu.com/' filename , headers = request . urlretrieve ( url , filename = 'baidu.html' , reporthook = reporthook , data = None ) filename denotes target path of downloaded file. If absent, the location will be a tempfile with a generated name under the temp directory of operating system. reporthook is a callback function which is called when a block is read. It can help print the process of downloading. data specifies additional data when the method of request is POST. It will return the file location and headers of response. Multi-Thread \u00b6 The second way is to request directly with urllib.request and speed up with threads. parse \u00b6 robotparser \u00b6","title":"urllib"},{"location":"python/library/urllib.html#overview","text":"urllib is a package to deal with URLs, including 4 modules: urllib.request, urllib.error, urllib.parse , and urllib.robotparser . The main part is about module request.","title":"Overview"},{"location":"python/library/urllib.html#get-started","text":"Module request is for opening and reading URLs. An example is presented as follows. The response is an instance of http.client.HTTPResponse . from urllib import request # build a request object req = request . Request ( 'https://www.baidu.com' , headers = { 'Host' : 'www.baidu.com' , 'User-Agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36' }, method = 'GET' ) # issue the request and print the result with request . urlopen ( req , timeout = 30 ) as response : print ( response . read () . decode ( 'utf-8' )) To handle the result further, commonly a html page, use BeautifulSoup .","title":"Get Started"},{"location":"python/library/urllib.html#http-header","text":"See more details here .","title":"HTTP Header"},{"location":"python/library/urllib.html#request","text":"Header Description Example Accept Content types that clients accept text/html,application/xml Accept-Charset Accept-Encoding gzip, deflate Accept-Language zh-CN,zh;q=0.9,zh-TW;q=0.8 Host netloc www.douban.com Origin scheme://netloc. Used for POST request or CORS request Referer Previous URL User-Agent Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36","title":"Request"},{"location":"python/library/urllib.html#response","text":"Header Description Example Content-Encoding Content-Language Content-Length Content-Location Backup address Content-MD5 Content-Type MIME type","title":"Response"},{"location":"python/library/urllib.html#download","text":"Under the package, there are two ways to download files from the Internet.","title":"Download"},{"location":"python/library/urllib.html#urllibrequesturlretrieve","text":"from urllib import request def reporthook ( block_count , block_size , total_size ): print ( ' \\r Downloading: %.2f%% ' % ( 100 * block_count * block_size / total_size ), end = '' ) url = 'https://www.baidu.com/' filename , headers = request . urlretrieve ( url , filename = 'baidu.html' , reporthook = reporthook , data = None ) filename denotes target path of downloaded file. If absent, the location will be a tempfile with a generated name under the temp directory of operating system. reporthook is a callback function which is called when a block is read. It can help print the process of downloading. data specifies additional data when the method of request is POST. It will return the file location and headers of response.","title":"urllib.request.urlretrieve"},{"location":"python/library/urllib.html#multi-thread","text":"The second way is to request directly with urllib.request and speed up with threads.","title":"Multi-Thread"},{"location":"python/library/urllib.html#parse","text":"","title":"parse"},{"location":"python/library/urllib.html#robotparser","text":"","title":"robotparser"}]}